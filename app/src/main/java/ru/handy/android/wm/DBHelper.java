package ru.handy.android.wm;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

import java.util.ArrayList;
import java.util.List;

/**
 * класс по созданию и управлению БД
 *
 * @author handy
 */
public class DBHelper extends SQLiteOpenHelper {

    public DBHelper(Context context, String name, CursorFactory factory,
                    int version) {
        super(context, name, factory, version);
    }

    // создаем и заполняем БД
    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(DB.T_ENGWORDS_CREATE);
        db.execSQL(DB.T_LESSON_CREATE);
        db.execSQL(DB.T_STATISTICS_CREATE);
        db.execSQL(DB.T_EXITSTATE_CREATE);
        db.beginTransaction();
        try {
            // заполняем основную таблицу-словарь
            insertAllDict(db);
            // заполняем таблицу сохранения состояния программы по умолчанию
            insertExitState(db, DB.LEARNING_TYPE, "0");
            insertExitState(db, DB.LEARNING_SPEAK, "1");
            insertExitState(db, DB.LEARNING_REPEATS_AMOUNT, "2");
// этой переменной специально не устанавливается значение, чтобы по ней можно было определить первый запуск программы
//			insertExitState(db, DB.LEARNING_LANGUAGE, "0");
            insertExitState(db, DB.LEARNING_SHOW_TRANSCR, "1");
            insertExitState(db, DB.LEARNING_AMOUNT_WORDS, "8");
            insertExitState(db, DB.LEARNING_SHOW_DONTKNOW, "1");
            insertExitState(db, DB.LEARNING_LESSONS_HISTORY, "1");
            insertExitState(db, DB.SEARCH_WORD, "");
            insertExitState(db, DB.PRONUNCIATION_USUK, "0");
            insertExitState(db, DB.DICT_TRASL_DIRECT, "0");
            insertExitState(db, DB.DICT_SEARCH_TYPE, "0");
            insertExitState(db, DB.DICT_SHOW_HISTORY, "0");
            insertExitState(db, DB.AMOUNT_DONATE, "0");
            insertExitState(db, DB.BG_COLOR, "1"); // белый фон
            // с 32 версии это уже не нужно
            /*insertExitState(db, DB.DATE_TRIAL_STATS, ""); // дата начала месячного бесплатного периода для статистики
            insertExitState(db, DB.DATE_BG_COLOR, ""); // дата начала месячного бесплатного периода для смены цвета фона
            insertExitState(db, DB.DATE_LEARNING_METHOD, ""); // дата начала месячного бесплатного периода для смены метода обучения
            insertExitState(db, DB.DATE_LANGUAGE, ""); // дата начала месячного бесплатного периода для смены языка обучения
            insertExitState(db, DB.DATE_LANG_WORD_AMOUNT, ""); // дата начала месячного бесплатного периода для кол-ва слов, показываемых при обучении*/
            db.setTransactionSuccessful();
        } finally {
            db.endTransaction();
        }
    }

    /**
     * соответствие версии программы и версии БД:
     * WM БД
     * 8 7
     * 9 8
     * 10 9
     * 13 13 после этого идет совпадение и это первая боевая версия с платными настройками
     *
     * @param db         ссылка на БД
     * @param oldVersion версия старой БД
     * @param newVersion версия новой БД
     */
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.beginTransaction();
        try {
            if (oldVersion <= 24 && newVersion == 32) { // версия 25 была тестовой
                // сначала удаляем всю старую БД
                Cursor c = db.rawQuery("SELECT name FROM sqlite_master WHERE type='table'", null);
                while (c.moveToNext()) {
                    String tableName = c.getString(0);
                    if (!tableName.equals("android_metadata") && !tableName.equals("sqlite_sequence")) {
                        db.execSQL("DROP TABLE IF EXISTS " + tableName);
                    }
                }
                c.close();
                // потом создаем новую БД
                onCreate(db);
            } else if (oldVersion == 26 && newVersion == 32) {
                updateDictFrom26(db);
                updateDictFrom27(db);
                updateDictFrom28(db);
                updateDictFrom30(db);
                updateDictFrom31(db);
            } else if (oldVersion == 27 && newVersion == 32) {
                updateDictFrom27(db);
                updateDictFrom28(db);
                updateDictFrom30(db);
                updateDictFrom31(db);
            } else if (oldVersion == 28 && newVersion == 32) { // версия 29 не прошла цензуру Google
                updateDictFrom28(db);
                updateDictFrom30(db);
                updateDictFrom31(db);
            } else if (oldVersion == 30 && newVersion == 32) {
                updateDictFrom30(db);
                updateDictFrom31(db);
            } else if (oldVersion == 31 && newVersion == 32) {
                updateDictFrom31(db);
            }
            db.setTransactionSuccessful();
        } finally {
            db.endTransaction();
        }
    }

    // заполняем основную таблицу-словарь
    private void insertAllDict(SQLiteDatabase db) {
        insertDict(db, "April", "['eipr(ə)l]", "апрель", "время1");
        insertDict(db, "August", "[ɔːˈgʌst]", "август", "время1");
        insertDict(db, "century", "[ˈsenʧʊrɪ]", "век", "время1");
        insertDict(db, "day", "[deɪ]", "день", "время1");
        insertDict(db, "decade", "[ˈdekeɪd]", "десятилетие", "время1");
        insertDict(db, "December", "[di'sembə]", "декабрь", "время1");
        insertDict(db, "February", "[ˈfebrʊərɪ]", "февраль", "время1");
        insertDict(db, "Friday", "['fraıdı]", "пятница", "время1");
        insertDict(db, "half-year", "[hɑːf jə:]", "полугодие", "время1");
        insertDict(db, "hour", "[ˈaʊə]", "час", "время1");
        insertDict(db, "January", "[ˈʤænjʊərɪ]", "январь", "время1");
        insertDict(db, "July", "[dʒu'lai]", "июль", "время1");
        insertDict(db, "June", "[dʒu:n]", "июнь", "время1");
        insertDict(db, "March", "[mɑːʧ]", "март", "время1");
        insertDict(db, "May", "[mei]", "май", "время1");
        insertDict(db, "millennium", "[mɪˈlenɪəm]", "тысячелетие", "время1");
        insertDict(db, "minute", "[ˈmɪnɪt]", "минута", "время1");
        insertDict(db, "Monday", "['mʌndı]", "понедельник", "время1");
        insertDict(db, "month", "[mʌnθ]", "месяц", "время1");
        insertDict(db, "November", "[nəu'vembə]", "ноябрь", "время1");
        insertDict(db, "October", "[ɔk'təubə]", "октябрь", "время1");
        insertDict(db, "period", "[ˈpɪərɪəd]", "период", "время1");
        insertDict(db, "quarter", "[ˈkwɔːtə]", "квартал, четверть", "время1");
        insertDict(db, "Saturday", "['sætədı]", "суббота", "время1");
        insertDict(db, "season", "[siːzn]", "сезон", "время1");
        insertDict(db, "second", "[ˈsekənd]", "секунда, второй", "время1");
        insertDict(db, "September", "[sep'tembə]", "сентябрь", "время1");
        insertDict(db, "Sunday", "['sʌndı]", "воскресенье", "время1");
        insertDict(db, "Thursday", "['θə:zdı]", "четверг", "время1");
        insertDict(db, "time", "[taɪm]", "время", "время1");
        insertDict(db, "today", "[tə'deı]", "сегодня", "время1");
        insertDict(db, "tomorrow", "[tə'mɔrəu]", "завтра", "время1");
        insertDict(db, "Tuesday", "['tju:zdı]", "вторник", "время1");
        insertDict(db, "Wednesday", "['wenzdı]", "среда", "время1");
        insertDict(db, "week", "[wı:k]", "неделя", "время1");
        insertDict(db, "year", "[jə:]", "год", "время1");
        insertDict(db, "yesterday", "['jestədı]", "вчера", "время1");
        insertDict(db, "afterwards", "[ˈɑːftəwədz]", "потом", "время2");
        insertDict(db, "again", "[əˈgen]", "снова", "время2");
        insertDict(db, "always", "[ˈɔːlwəz]", "всегда", "время2");
        insertDict(db, "autumn", "[ˈɔːtəm]", "осень", "время2");
        insertDict(db, "break", "[breɪk]", "перерыв, прерывать, ломать", "время2");
        insertDict(db, "constantly", "[ˈkɔnstəntlɪ]", "постоянно", "время2");
        insertDict(db, "dawn", "[dɔːn]", "рассвет", "время2");
        insertDict(db, "duration", "[djʊəˈreɪʃn]", "продолжительность", "время2");
        insertDict(db, "evening", "['ı:vnıŋ]", "вечер", "время2");
        insertDict(db, "forever", "[fəˈrevə]", "навсегда", "время2");
        insertDict(db, "fortnight", "[ˈfɔːtnaɪt]", "две недели", "время2");
        insertDict(db, "immediately", "[ɪˈmiːdjətlɪ]", "немедленно", "время2");
        insertDict(db, "interval", "[ˈɪntəvəl]", "промежуток", "время2");
        insertDict(db, "lifespan", "[ˈlaɪfspæn]", "продолжительность жизни", "время2");
        insertDict(db, "long ago", "[lɔŋ əˈgəʊ]", "давно", "время2");
        insertDict(db, "midday", "[ˈmɪddeɪ]", "середина дня", "время2");
        insertDict(db, "midnight", "[ˈmɪdnaɪt]", "полночь", "время2");
        insertDict(db, "morning", "['mɔ:nıŋ]", "утро", "время2");
        insertDict(db, "never", "[ˈnevə]", "никогда", "время2");
        insertDict(db, "night", "[naıt]", "ночь", "время2");
        insertDict(db, "noon", "[nuːn]", "полдень", "время2");
        insertDict(db, "now", "[naʊ]", "сейчас", "время2");
        insertDict(db, "often", "[ɔfn]", "часто", "время2");
        insertDict(db, "pause", "[pɔːz]", "пауза", "время2");
        insertDict(db, "quickly", "[ˈkwɪklɪ]", "быстро", "время2");
        insertDict(db, "rarely", "[ˈrɛəlɪ]", "редко", "время2");
        insertDict(db, "recently", "[ˈriːsntlɪ]", "недавно", "время2");
        insertDict(db, "right away", "[raɪt əˈweɪ]", "сразу", "время2");
        insertDict(db, "seldom", "[ˈseldəm]", "редко, редкий", "время2");
        insertDict(db, "sometimes", "[ˈsʌmtaɪmz]", "иногда", "время2");
        insertDict(db, "spring", "[sprɪŋ]", "весна, пружина", "время2");
        insertDict(db, "summer", "[ˈsʌmə]", "лето", "время2");
        insertDict(db, "urgently", "[ˈɜːʤəntlɪ]", "срочно", "время2");
        insertDict(db, "weekdays", "[ˈwiːkdeɪz]", "будни", "время2");
        insertDict(db, "weekends", "[wiːkˈendz]", "выходные", "время2");
        insertDict(db, "winter", "[ˈwɪntə]", "зима", "время2");
        insertDict(db, "bridge", "[brɪʤ]", "мост", "география");
        insertDict(db, "canal", "[kəˈnæl]", "канал", "география");
        insertDict(db, "capital", "[ˈkæpɪtl]", "столица", "география");
        insertDict(db, "coast", "[kəʊst]", "побережье", "география");
        insertDict(db, "countryside", "[ˈkʌntrɪsaɪd]", "сельская местность", "география");
        insertDict(db, "desert", "[ˈdezət]", "пустыня", "география");
        insertDict(db, "Equator", "[ɪˈkweɪtər]", "Экватор", "география");
        insertDict(db, "geography", "[ʤɪˈɔgrəfɪ]", "география", "география");
        insertDict(db, "glacier", "[ˈglæsjə]", "ледник", "география");
        insertDict(db, "hill", "[hɪl]", "холм", "география");
        insertDict(db, "island", "[ˈaɪlənd]", "остров", "география");
        insertDict(db, "lake", "[leɪk]", "озеро", "география");
        insertDict(db, "latitude", "[ˈlætɪtjuːd]", "широта", "география");
        insertDict(db, "longitude", "[ˈlɔnʤɪtjuːd]", "долгота", "география");
        insertDict(db, "mountain", "[ˈmaʊntɪn]", "гора", "география");
        insertDict(db, "North Pole", "[nɔːθ pəʊl]", "Северный полюс", "география");
        insertDict(db, "ocean", "[əʊʃn]", "океан", "география");
        insertDict(db, "peninsula", "[pɪˈnɪnsjʊlə]", "полуостров", "география");
        insertDict(db, "plain", "[pleɪn]", "равнина, простой", "география");
        insertDict(db, "pond", "[pɔnd]", "пруд", "география");
        insertDict(db, "reservoir", "[ˈrezəvwɑː]", "водохранилище, резервуар", "география");
        insertDict(db, "river", "[ˈrɪvə]", "река", "география");
        insertDict(db, "sea", "[siː]", "море", "география");
        insertDict(db, "South Pole", "[saʊθ pəʊl]", "Южный полюс", "география");
        insertDict(db, "village", "[ˈvɪlɪʤ]", "деревня", "география");
        insertDict(db, "volcano", "[vɔlˈkeɪnəʊ]", "вулкан", "география");
        insertDict(db, "city", "[ˈsɪtɪ]", "город", "география, путешествие1");
        insertDict(db, "border", "[ˈbɔːdə]", "граница", "география, путешествие2");
        insertDict(db, "country", "[ˈkʌntrɪ]", "страна, сельская местность", "география, путешествие2");
        insertDict(db, "angle", "[æŋgl]", "угол", "геометрия");
        insertDict(db, "area", "[ˈɛərɪə]", "площадь", "геометрия");
        insertDict(db, "circumference", "[səˈkʌmfərəns]", "окружность", "геометрия");
        insertDict(db, "cone", "[kəʊn]", "конус", "геометрия");
        insertDict(db, "cube", "[kjuːb]", "куб", "геометрия");
        insertDict(db, "curve", "[kɜːv]", "кривая", "геометрия");
        insertDict(db, "cylinder", "[ˈsɪlɪndə]", "цилиндр", "геометрия");
        insertDict(db, "diameter", "[daɪˈæmɪtə]", "диаметр", "геометрия");
        insertDict(db, "dimension", "[dɪˈmenʃn]", "размер, измерение", "геометрия");
        insertDict(db, "geometry", "[ʤɪˈɔmɪtrɪ]", "геометрия", "геометрия");
        insertDict(db, "height", "[haɪt]", "высота", "геометрия");
        insertDict(db, "hexagon", "[ˈheksəgən]", "шестиугольник", "геометрия");
        insertDict(db, "length", "[leŋθ]", "длина", "геометрия");
        insertDict(db, "line", "[laɪn]", "линия", "геометрия");
        insertDict(db, "octagon", "[ˈɔktəgən]", "восьмиугольник", "геометрия");
        insertDict(db, "pentagon", "[ˈpentəgən]", "пятиугольник", "геометрия");
        insertDict(db, "perimeter", "[pəˈrɪmɪtə]", "периметр", "геометрия");
        insertDict(db, "polygon", "[ˈpɔlɪgən]", "многоугольник, полигон", "геометрия");
        insertDict(db, "pyramid", "[ˈpɪrəmɪd]", "пирамида", "геометрия");
        insertDict(db, "radius", "[ˈreɪdjəs]", "радиус", "геометрия");
        insertDict(db, "rectangle", "[ˈrektæŋgl]", "прямоугольник", "геометрия");
        insertDict(db, "right angle", "[raɪt æŋgl]", "прямой угол", "геометрия");
        insertDict(db, "sphere", "[sfɪə]", "сфера, шар", "геометрия");
        insertDict(db, "straight line", "[streɪt laɪn]", "прямая линия", "геометрия");
        insertDict(db, "theorem", "[ˈθɪərəm]", "теорема", "геометрия");
        insertDict(db, "triangle", "[ˈtraɪæŋgl", "треугольник", "геометрия");
        insertDict(db, "volume", "[ˈvɔljʊm]", "объём", "геометрия");
        insertDict(db, "width", "[wɪdθ]", "ширина", "геометрия");
        insertDict(db, "oval", "[ˈəʊvl̩]", "овал, овальный", "геометрия, прилагательные основные3");
        insertDict(db, "square", "[skweə]", "квадрат, квадратный", "геометрия, прилагательные основные3");
        insertDict(db, "circle", "[sɜːkl]", "круг, обвести", "геометрия, учеба");
        insertDict(db, "comment", "[ˈkɔment]", "комментировать", "глаголы речи");
        insertDict(db, "describe", "[dɪsˈkraɪb]", "описывать", "глаголы речи");
        insertDict(db, "discuss", "[dɪsˈkʌs]", "обсуждать", "глаголы речи");
        insertDict(db, "emphasize", "[ˈemfəsaɪz]", "подчеркивать, акцентировать", "глаголы речи");
        insertDict(db, "explain", "[ɪksˈpleɪn]", "объяснять", "глаголы речи");
        insertDict(db, "inform", "[ɪnˈfɔːm]", "информировать", "глаголы речи");
        insertDict(db, "interpret", "[ɪnˈtɜːprɪt]", "толковать, интепретировать", "глаголы речи");
        insertDict(db, "joke", "[ʤəʊk]", "шутить, шутка", "глаголы речи");
        insertDict(db, "mention", "[ˈmenʃən]", "упоминать", "глаголы речи");
        insertDict(db, "narrate", "[nəˈreɪt]", "повествовать, комментировать", "глаголы речи");
        insertDict(db, "refer", "[rɪˈfɜː]", "ссылаться на что-л.", "глаголы речи");
        insertDict(db, "reply", "[rɪˈplaɪ]", "отвечать кому-л.", "глаголы речи");
        insertDict(db, "scream", "[skriːm]", "кричать", "глаголы речи");
        insertDict(db, "talk", "[tɔːk]", "поговорить (с кем-л. о чем-л.)", "глаголы речи");
        insertDict(db, "translate", "[trænsˈleɪt]", "переводить", "глаголы речи");
        insertDict(db, "whisper", "[ˈwɪspə]", "шептать", "глаголы речи");
        insertDict(db, "acknowledge", "[əkˈnɔlɪʤ]", "признавать, осознать", "глаголы умст. деятельности");
        insertDict(db, "advise", "[ədˈvaɪz]", "советовать", "глаголы умст. деятельности");
        insertDict(db, "agree", "[əˈgriː]", "соглашаться", "глаголы умст. деятельности");
        insertDict(db, "analyse", "[ˈænəlaɪz]", "анализировать", "глаголы умст. деятельности");
        insertDict(db, "assume", "[ə'sju:m]", "предполагать, принимать", "глаголы умст. деятельности");
        insertDict(db, "believe", "[bɪˈliːv]", "верить, доверять", "глаголы умст. деятельности");
        insertDict(db, "compare", "[kəmˈpeə]", "сравнивать", "глаголы умст. деятельности");
        insertDict(db, "conclude", "[kənˈkluːd]", "делать вывод", "глаголы умст. деятельности");
        insertDict(db, "confuse", "[kənˈfjuːz]", "путать, смущать", "глаголы умст. деятельности");
        insertDict(db, "decide", "[dɪˈsaɪd]", "решать, делать выбор", "глаголы умст. деятельности");
        insertDict(db, "determine", "[dɪˈtɜːmɪn]", "определить, определение", "глаголы умст. деятельности");
        insertDict(db, "doubt", "[daut]", "сомневаться", "глаголы умст. деятельности");
        insertDict(db, "imagine", "[ɪˈmæʤɪn]", "воображать", "глаголы умст. деятельности");
        insertDict(db, "intend", "[ɪnˈtend]", "намереваться", "глаголы умст. деятельности");
        insertDict(db, "invent", "[ɪnˈvent]", "изобретать, придумывать", "глаголы умст. деятельности");
        insertDict(db, "lie", "[laɪ]", "лгать", "глаголы умст. деятельности");
        insertDict(db, "link", "[lɪŋk]", "связывать, ссылка", "глаголы умст. деятельности");
        insertDict(db, "predict", "[prɪˈdɪkt]", "предсказывать", "глаголы умст. деятельности");
        insertDict(db, "remember", "[rɪˈmembə]", "помнить", "глаголы умст. деятельности");
        insertDict(db, "remind", "[ˈrɪmaɪnd]", "напомнить", "глаголы умст. деятельности");
        insertDict(db, "select", "[sɪˈlekt]", "выбирать, отбирать", "глаголы умст. деятельности");
        insertDict(db, "suppose", "[səˈpəuz]", "полагать, предполагать", "глаголы умст. деятельности");
        insertDict(db, "wonder", "[ˈwʌndə]", "удивляться, чудо", "глаголы умст. деятельности");
        insertDict(db, "birch mushroom", "[bɜːʧ ˈmʌʃrum]", "подберезовик", "грибы");
        insertDict(db, "cep", "[sep]", "белый гриб", "грибы");
        insertDict(db, "champignon", "[ʃæm'piːnjən]", "шампиньон", "грибы");
        insertDict(db, "chanterelle", "[ʃæntəˈrel]", "лисичка", "грибы");
        insertDict(db, "coral milky cap", "[ˈkɒrəl ˈmɪlkɪ ˈkæp]", "волнушка", "грибы");
        insertDict(db, "death cap", "[deθ ˈkæp]", "бледная поганка", "грибы");
        insertDict(db, "fly agaric", "[flaɪ ˈægərɪk]", "мухомор", "грибы");
        insertDict(db, "honey agaric", "[ˈhʌnɪ ˈægərɪk]", "опенок", "грибы");
        insertDict(db, "milk mushroom", "[mɪlk ˈmʌʃrum]", "груздь", "грибы");
        insertDict(db, "mossiness mushroom", "[ˈmɔsɪnɪs ˈmʌʃrum]", "моховик", "грибы");
        insertDict(db, "mushroom", "[ˈmʌʃrum]", "гриб", "грибы");
        insertDict(db, "Orange-cap boletus", "[ˈɔrɪndʒ ˈkæp bəʊˈliːtəs]", "подосиновик", "грибы");
        insertDict(db, "oyster mushroom", "[ˈɔɪstə ˈmʌʃrum]", "вешенка", "грибы");
        insertDict(db, "puff ball", "[pʌf bɔ:l]", "дождевик", "грибы");
        insertDict(db, "russula", "['rʌsjələ]", "сыроежка", "грибы");
        insertDict(db, "saffron milk cap", "[ˈsæfrən mɪlk kæp]", "рыжик", "грибы");
        insertDict(db, "truffle", "['trʌfl]", "трюфель", "грибы");
        insertDict(db, "yellow boletus", "[ˈjeləʊ bəʊˈliːtəs]", "масленок", "грибы");
        insertDict(db, "alder", "['o:ldə]", "ольха", "деревья лиственные");
        insertDict(db, "apple tree", "['æpl tri:]", "яблоня", "деревья лиственные");
        insertDict(db, "ash", "[æ∫]", "ясень", "деревья лиственные");
        insertDict(db, "aspen", "['æspən]", "осина", "деревья лиственные");
        insertDict(db, "baobab", "['beiəubæb]", "баобаб", "деревья лиственные");
        insertDict(db, "bay", "[bei]", "лавр", "деревья лиственные");
        insertDict(db, "beech", "[bi:t∫]", "бук", "деревья лиственные");
        insertDict(db, "birch", "[bε:t∫]", "берёза", "деревья лиственные");
        insertDict(db, "chestnut", "['t∫esnʌt]", "каштан", "деревья лиственные");
        insertDict(db, "elm", "[elm]", "вяз", "деревья лиственные");
        insertDict(db, "eucalyptus", "[ju:kə'liptəs]", "эвкалипт", "деревья лиственные");
        insertDict(db, "hornbeam", "[ˈhɔːnbiːm]", "граб", "деревья лиственные");
        insertDict(db, "linden", "['lindən]", "липа", "деревья лиственные");
        insertDict(db, "maple", "['meipl]", "клён", "деревья лиственные");
        insertDict(db, "oak", "[əuk]", "дуб", "деревья лиственные");
        insertDict(db, "pear tree", "[pεə tri:]", "груша", "деревья лиственные");
        insertDict(db, "poplar", "['poplə]", "тополь", "деревья лиственные");
        insertDict(db, "walnut", "['wo:lnʌt]", "грецкий орех", "деревья лиственные");
        insertDict(db, "araucaria", "[ærɔːˈke(ə)rɪə]", "араукария", "деревья хвойные");
        insertDict(db, "athrotaxis", "[æθrəˈtæksɪs]", "атротаксис", "деревья хвойные");
        insertDict(db, "biota", "[baɪˈəʊtə]", "биота", "деревья хвойные");
        insertDict(db, "cedar", "['si:də]", "кедр", "деревья хвойные");
        insertDict(db, "cypress", "[ˈsaɪprɪs]", "кипарис", "деревья хвойные");
        insertDict(db, "fir", "[fε:]", "пихта", "деревья хвойные");
        insertDict(db, "juniper", "['dʒu:nipə]", "можжевельник", "деревья хвойные");
        insertDict(db, "larch", "[la:t∫]", "лиственница", "деревья хвойные");
        insertDict(db, "pine", "[pain]", "сосна", "деревья хвойные");
        insertDict(db, "sequoia", "[si'kwoiə]", "секвойя", "деревья хвойные");
        insertDict(db, "spruce", "[spru:s]", "ель", "деревья хвойные");
        insertDict(db, "yew tree", "['ju: tri:]", "тис", "деревья хвойные");
        insertDict(db, "armchair", "[ˈɑːmˈʧɛə]", "кресло", "дом");
        insertDict(db, "bathroom", "[ˈbɑːθruːm]", "ванная комната", "дом");
        insertDict(db, "bed", "[bed]", "кровать", "дом");
        insertDict(db, "bedroom", "[ˈbedrʊm]", "спальня", "дом");
        insertDict(db, "ceiling", "[ˈsiːlɪŋ]", "потолок", "дом");
        insertDict(db, "chair", "[ʧɛə]", "стул", "дом");
        insertDict(db, "clock", "[klɔk]", "часы", "дом");
        insertDict(db, "cupboard", "[ˈkʌpəd]", "шкаф", "дом");
        insertDict(db, "door", "[dɔː]", "дверь", "дом");
        insertDict(db, "drawer", "[ˈdrɔːə]", "ящик", "дом");
        insertDict(db, "floor", "[flɔː]", "этаж, пол", "дом");
        insertDict(db, "garden", "[gɑːdn]", "сад", "дом");
        insertDict(db, "hall", "[hɔːl]", "зал", "дом");
        insertDict(db, "house", "[haʊs]", "дом", "дом");
        insertDict(db, "kitchen", "[ˈkɪʧɪn]", "кухня", "дом");
        insertDict(db, "peg", "[peg]", "вешалка, крючок", "дом");
        insertDict(db, "picture", "[ˈpɪkʧə]", "картина", "дом");
        insertDict(db, "roof", "[ruːf]", "крыша", "дом");
        insertDict(db, "room", "[ruːm]", "комната", "дом");
        insertDict(db, "sitting room", "[ˈsɪtɪŋ ruːm]", "гостиная", "дом");
        insertDict(db, "table", "[teɪbl]", "стол", "дом");
        insertDict(db, "wall", "[wɔːl]", "стена", "дом");
        insertDict(db, "wardrobe", "[ˈwɔːdrəʊb]", "шкаф, гардероб", "дом");
        insertDict(db, "washing machine", "[ˈwɒʃɪŋ məˈʃiːn]", "стиральная машина", "дом");
        insertDict(db, "window", "[ˈwɪndəʊ]", "окно", "дом");
        insertDict(db, "bread", "[bred]", "хлеб", "еда1");
        insertDict(db, "butter", "[ˈbʌtə]", "масло", "еда1");
        insertDict(db, "cake", "[keɪk]", "торт, пирожное", "еда1");
        insertDict(db, "cheese", "[ʧiːz]", "сыр", "еда1");
        insertDict(db, "coffee", "[ˈkɔfɪ]", "кофе", "еда1");
        insertDict(db, "eat", "[iːt]", "кушать, есть", "еда1");
        insertDict(db, "fish", "[fɪʃ]", "рыба", "еда1");
        insertDict(db, "food", "[fuːd]", "еда", "еда1");
        insertDict(db, "ice-cream", "[ˈaɪsˈkriːm]", "мороженое", "еда1");
        insertDict(db, "juice", "[ʤuːs]", "сок", "еда1");
        insertDict(db, "lemonade", "[leməˈneɪd]", "лимонад", "еда1");
        insertDict(db, "milk", "[mɪlk]", "молоко", "еда1");
        insertDict(db, "pasta", "[ˈpæstə]", "макароны", "еда1");
        insertDict(db, "porridge", "[ˈpɔrɪʤ]", "каша", "еда1");
        insertDict(db, "rice", "[raɪs]", "рис", "еда1");
        insertDict(db, "sausage", "[ˈsɔsɪʤ]", "сосиска", "еда1");
        insertDict(db, "soup", "[suːp]", "суп", "еда1");
        insertDict(db, "tea", "[tiː]", "чай", "еда1");
        insertDict(db, "yoghurt", "[ˈjɔgɜːt]", "йогурт", "еда1");
        insertDict(db, "sweet", "[swiːt]", "конфета, сладкий", "еда1, прилагательные основные3");
        insertDict(db, "beef", "[biːf]", "говядина", "еда2");
        insertDict(db, "borsch", "[bɔːʃ]", "борщ", "еда2");
        insertDict(db, "buckwheat", "[ˈbʌkwiːt]", "гречка", "еда2");
        insertDict(db, "cereal", "[ˈsɪərɪəl]", "хлопья, зерно", "еда2");
        insertDict(db, "chicken", "[ˈʧɪkɪn]", "курица", "еда2");
        insertDict(db, "cookies", "[ˈkʊkɪz]", "печенье", "еда2");
        insertDict(db, "fries", "[fraɪz]", "картошка фри", "еда2");
        insertDict(db, "meat", "[miːt]", "мясо", "еда2");
        insertDict(db, "milkshake", "[ˈmɪlkʃeɪk]", "молочный коктейль", "еда2");
        insertDict(db, "nut", "[nʌt]", "орех", "еда2");
        insertDict(db, "pastry", "[ˈpeɪstrɪ]", "кондитерские изделия, пироженое", "еда2");
        insertDict(db, "pizza", "[ˈpiːtsə]", "пицца", "еда2");
        insertDict(db, "pork", "[pɔːk]", "свинина", "еда2");
        insertDict(db, "puree", "[ˈpjʊəreɪ]", "пюре", "еда2");
        insertDict(db, "rassolnik", "[ˈrəsɒnɪk]", "рассольник", "еда2");
        insertDict(db, "salad", "[ˈsæləd]", "салат", "еда2");
        insertDict(db, "sandwich", "[ˈsænwɪʤ]", "сэндвич, бутерброд", "еда2");
        insertDict(db, "sauce", "[sɔːs]", "соус", "еда2");
        insertDict(db, "smell", "[smel]", "запах, пахнуть, нюхать", "еда2");
        insertDict(db, "sour cream", "[ˈsaʊə kriːm]", "сметана", "еда2");
        insertDict(db, "taste", "[teɪst]", "вкус, пробовать на вкус", "еда2");
        insertDict(db, "wheat", "[wiːt]", "пшеница", "еда2");
        insertDict(db, "animal", "[ˈænɪməl]", "животное", "животные");
        insertDict(db, "bear", "[bɛə]", "медведь", "животные");
        insertDict(db, "crocodile", "[ˈkrɔkədaɪl]", "крокодил", "животные");
        insertDict(db, "deer", "[dɪə]", "олень", "животные");
        insertDict(db, "elephant", "[ˈelɪfənt]", "слон", "животные");
        insertDict(db, "elk", "[elk]", "лось", "животные");
        insertDict(db, "fox", "[fɔks]", "лиса", "животные");
        insertDict(db, "frog", "[frɔg]", "лягушка", "животные");
        insertDict(db, "giraffe", "[dʒɪˈrɑ:f]", "жираф", "животные");
        insertDict(db, "hare", "[hɛə]", "заяц", "животные");
        insertDict(db, "horse", "[hɔːs]", "лошадь", "животные");
        insertDict(db, "lion", "[ˈlaɪən]", "лев", "животные");
        insertDict(db, "monkey", "[ˈmʌŋkɪ]", "обезьяна", "животные");
        insertDict(db, "mouse", "[maʊs]", "мышь", "животные");
        insertDict(db, "pig", "[pɪg]", "поросенок", "животные");
        insertDict(db, "raccoon", "[rəˈkuːn]", "енот", "животные");
        insertDict(db, "rat", "[ræt]", "крыса", "животные");
        insertDict(db, "snake", "[sneɪk]", "змея", "животные");
        insertDict(db, "tiger", "[ˈtaɪgə]", "тигр", "животные");
        insertDict(db, "whale", "[weɪl]", "кит", "животные");
        insertDict(db, "wolf", "[wʊlf]", "волк", "животные");
        insertDict(db, "zebra", "[ˈziːbrə]", "зебра", "животные");
        insertDict(db, "Nepalese", "[nepəˈliːz", "непалец, непалка", "жители азии");
        insertDict(db, "New Zealander", "[njuː ˈzɪləndər]", "новозеландец, новозеландка", "жители азии");
        insertDict(db, "Turk", "[tɜːk]", "турок, турчанка", "жители азии");
        insertDict(db, "Somalian", "[səˈmɑːlɪən]", "сомалийка", "жители африки");
        insertDict(db, "Briton", "[brɪtn]", "британец, британка", "жители европы");
        insertDict(db, "Dane", "[deɪn]", "датчанин, датчанка", "жители европы");
        insertDict(db, "Dutchman", "[ˈdʌʧmən]", "голландец", "жители европы");
        insertDict(db, "Dutchwoman", "[ˈdʌʧwʊmən]", "голландка", "жители европы");
        insertDict(db, "Englishman", "[ˈɪŋglɪʃmən]", "англичанин", "жители европы");
        insertDict(db, "Englishwoman", "[ˈɪŋglɪʃwʊmən]", "англичанка", "жители европы");
        insertDict(db, "Finn", "[fɪn]", "финн, финка", "жители европы");
        insertDict(db, "Frenchman", "[ˈfrenʧmən]", "француз", "жители европы");
        insertDict(db, "Frenchwoman", "[ˈfrenʧwʊmən]", "француженка", "жители европы");
        insertDict(db, "Icelander", "[ˈaɪsləndə]", "исландец, исландка", "жители европы");
        insertDict(db, "Irishman", "[ˈaɪərɪʃmən]", "ирландец", "жители европы");
        insertDict(db, "Irishwoman", "[ˈaɪərɪʃwʊmən]", "ирландка", "жители европы");
        insertDict(db, "Pole", "[pəʊl]", "поляк, полька", "жители европы");
        insertDict(db, "Spaniard", "[ˈspænjəd]", "испанец, испанка", "жители европы");
        insertDict(db, "Swede", "[swiːd]", "швед, шведка", "жители европы");
        insertDict(db, "accordion", "[əˈkɔːdɪən]", "аккордеон, гармонь", "инструменты музыкальные");
        insertDict(db, "ambourine", "[tæmbəˈriːn]", "бубен", "инструменты музыкальные");
        insertDict(db, "balalaika", "[bæləˈlaɪkə]", "балалайка", "инструменты музыкальные");
        insertDict(db, "bass guitar", "[beɪs gɪˈtɑː]", "бас-гитара", "инструменты музыкальные");
        insertDict(db, "bassoon", "[bəˈsuːn]", "фагот", "инструменты музыкальные");
        insertDict(db, "cello", "[ˈʧeləʊ]", "виолончель", "инструменты музыкальные");
        insertDict(db, "clarinet", "[klærɪˈnet]", "кларнет", "инструменты музыкальные");
        insertDict(db, "drum", "[drʌm]", "барабан", "инструменты музыкальные");
        insertDict(db, "flute", "[fluːt]", "флейта", "инструменты музыкальные");
        insertDict(db, "guitar", "[gɪˈtɑː]", "гитара", "инструменты музыкальные");
        insertDict(db, "harp", "[hɑːp]", "арфа", "инструменты музыкальные");
        insertDict(db, "kettledrum", "[ˈketldrʌm]", "литавра", "инструменты музыкальные");
        insertDict(db, "oboe", "[ˈəʊbəʊ]", "гобой", "инструменты музыкальные");
        insertDict(db, "piano", "[pɪˈænəʊ]", "пианино", "инструменты музыкальные");
        insertDict(db, "psaltery", "[ˈsɔ:ltərɪ]", "гусли", "инструменты музыкальные");
        insertDict(db, "saxophone", "[ˈsæksəfəʊn]", "саксофон", "инструменты музыкальные");
        insertDict(db, "synthesizer", "[ˈsɪnθəsaɪzə]", "синтезатор", "инструменты музыкальные");
        insertDict(db, "trombone", "[trɒmˈbəʊn]", "тромбон", "инструменты музыкальные");
        insertDict(db, "trumpet", "[ˈtrʌmpɪt]", "труба", "инструменты музыкальные");
        insertDict(db, "violin", "[vaɪəˈlɪn]", "скрипка", "инструменты музыкальные");
        insertDict(db, "xylophone", "[ˈzaɪləfəʊn]", "ксилофон", "инструменты музыкальные");
        insertDict(db, "awl", "[ɔːl]", "шило", "инструменты столярные");
        insertDict(db, "axe", "[æks]", "топор", "инструменты столярные");
        insertDict(db, "brace", "[breɪs]", "коловорот", "инструменты столярные");
        insertDict(db, "chisel", "[ʧɪzl]", "долото", "инструменты столярные");
        insertDict(db, "clamp", "[klæmp]", "струбцина", "инструменты столярные");
        insertDict(db, "claw hammer", "[klɔː ˈhæmə]", "гвоздодер", "инструменты столярные");
        insertDict(db, "drill", "[drɪl]", "дрель", "инструменты столярные");
        insertDict(db, "gouge", "[gaʊʤ]", "стамеска", "инструменты столярные");
        insertDict(db, "hacksaw", "[ˈhæksɔː]", "ножовка", "инструменты столярные");
        insertDict(db, "hammer", "[ˈhæmə]", "молоток", "инструменты столярные");
        insertDict(db, "jointer", "[ˈʤɔɪntə]", "фуганок", "инструменты столярные");
        insertDict(db, "mallet", "[ˈmælɪt]", "киянка", "инструменты столярные");
        insertDict(db, "pliers", "[ˈplaɪəz]", "плосскогубцы", "инструменты столярные");
        insertDict(db, "rasp", "[rɑːsp]", "рашпиль", "инструменты столярные");
        insertDict(db, "screwdriver", "[ˈskruːdraɪvə]", "отвертка", "инструменты столярные");
        insertDict(db, "tape measure", "[teɪp ˈmeʒə]", "рулетка", "инструменты столярные");
        insertDict(db, "vise", "[vaɪs]", "тиски", "инструменты столярные");
        insertDict(db, "file", "[faɪl]", "напильник, файл", "инструменты столярные");
        insertDict(db, "asteroid", "[ˈæstərɔɪd]", "астероид", "космос");
        insertDict(db, "comet", "[ˈkɔmɪt]", "комета", "космос");
        insertDict(db, "constellation", "[kɔnstəˈleɪʃən]", "созвездие", "космос");
        insertDict(db, "Earth", "[ə:θ]", "Земля", "космос");
        insertDict(db, "galaxy", "[ˈɡæləksɪ]", "галактика", "космос");
        insertDict(db, "Jupiter", "['dʒu:pɪtər]", "Юпитер", "космос");
        insertDict(db, "Mars", "[mɑ:rz]", "Марс", "космос");
        insertDict(db, "Mercury", "[ˈmə:kjurɪ]", "Меркурий", "космос");
        insertDict(db, "meteorite", "[ˈmi:tjəraɪt]", "метеорит", "космос");
        insertDict(db, "Moon", "[mu:n]", "Луна", "космос");
        insertDict(db, "Neptune", "['neptju:n]", "Нептун", "космос");
        insertDict(db, "planet", "[ˈplænɪt]", "планета", "космос");
        insertDict(db, "Pluto", "['plu:toʊ]", "Плутон", "космос");
        insertDict(db, "satellite", "[ˈsætəlaɪt]", "спутник", "космос");
        insertDict(db, "Saturn", "[ˈsætən]", "Сатурн", "космос");
        insertDict(db, "space", "[speɪs]", "космос", "космос");
        insertDict(db, "star", "[stɑ:r]", "здезда", "космос");
        insertDict(db, "telescope", "[ˈtelɪskəup]", "телескоп", "космос");
        insertDict(db, "universe", "[ˈju:nɪvɜ:rs]", "вселенная", "космос");
        insertDict(db, "Uranus", "['jʊrənəs]", "Уран", "космос");
        insertDict(db, "Venus", "[ˈvi:nəs]", "Венера", "космос");
        insertDict(db, "acacia", "[ə'kei∫ə]", "акация", "кустарники");
        insertDict(db, "hazel", "['heizəl]", "орешник", "кустарники");
        insertDict(db, "plum tree", "['plʌm tri:]", "слива", "кустарники");
        insertDict(db, "thuja", "[ˈθjuːjə]", "туя", "кустарники");
        insertDict(db, "willow", "['wiləu]", "ива", "кустарники");
        insertDict(db, "lilac", "['lailək]", "сирень", "кустарники, цветы");
        insertDict(db, "elderberry", "[ˈeldəbərɪ]", "бузина", "кустарники, ягоды");
        insertDict(db, "hawthorn", "[ˈhɔːθɔːn]", "боярышник", "кустарники, ягоды");
        insertDict(db, "sea-buckthorn", "[siːˈbʌkθɔːn]", "облепиха", "кустарники, ягоды");
        insertDict(db, "viburnum", "[vaɪˈbɜːnəm]", "калина", "кустарники, ягоды");
        insertDict(db, "add", "[æd]", "прибавлять", "математика");
        insertDict(db, "addition", "[əˈdɪʃn]", "прибавление", "математика");
        insertDict(db, "cubed", "[kjuːbd]", "в кубе", "математика");
        insertDict(db, "decimal", "[ˈdesɪməl]", "десятичный", "математика");
        insertDict(db, "divide", "[dɪˈvaɪd]", "делить", "математика");
        insertDict(db, "division", "[dɪˈvɪʒən]", "деление", "математика");
        insertDict(db, "equals", "[ˈiːkwəls]", "равно", "математика");
        insertDict(db, "equation", "[ɪˈkweɪʃn]", "уравнение, равенство", "математика");
        insertDict(db, "even number", "[ˈiːvən ˈnʌmbə]", "чётное число", "математика");
        insertDict(db, "formula", "[ˈfɔːmjʊlə]", "формула", "математика");
        insertDict(db, "fraction", "[frækʃn]", "дробь", "математика");
        insertDict(db, "integer", "[ˈɪntɪʤə]", "целое число", "математика");
        insertDict(db, "minus", "[ˈmaɪnəs]", "минус", "математика");
        insertDict(db, "multiplication", "[mʌltɪplɪˈkeɪʃn]", "умножение", "математика");
        insertDict(db, "multiply", "[ˈmʌltɪplaɪ]", "умножить", "математика");
        insertDict(db, "odd number", "[ɔd ˈnʌmbə]", "нечётное число", "математика");
        insertDict(db, "percent", "[pəˈsent]", "процент", "математика");
        insertDict(db, "plus", "[plʌs]", "плюс", "математика");
        insertDict(db, "prime number", "[praɪm ˈnʌmbə]", "простое число", "математика");
        insertDict(db, "probability", "[prɔbəˈbɪlɪtɪ]", "вероятность", "математика");
        insertDict(db, "proof", "[pruːf]", "доказательство", "математика");
        insertDict(db, "square root", "[skwɛə ruːt]", "квадратный корень", "математика");
        insertDict(db, "squared", "[skwɛəd]", "в квадрате", "математика");
        insertDict(db, "subtract", "[səbˈtrækt]", "вычитать", "математика");
        insertDict(db, "subtraction", "[səbˈtrækʃn]", "вычитание", "математика");
        insertDict(db, "calculate", "[ˈkælkjʊleɪt]", "считать, вычислять", "математика, глаголы умст. деятельности");
        insertDict(db, "he", "[hiː]", "он", "местоимения");
        insertDict(db, "her", "[hɜː, hɜːz]", "ее", "местоимения");
        insertDict(db, "herself", "[hə:ˈself]", "сама", "местоимения");
        insertDict(db, "himself", "[hɪmˈself]", "сам", "местоимения");
        insertDict(db, "his", "[hɪz]", "его", "местоимения");
        insertDict(db, "I", "[aɪ]", "я", "местоимения");
        insertDict(db, "it", "[ɪt]", "оно", "местоимения");
        insertDict(db, "its", "[ɪts]", "его (средний род)", "местоимения");
        insertDict(db, "itself", "[ɪtˈself]", "само", "местоимения");
        insertDict(db, "my, mine", "[maɪ, maɪn]", "мой, моя, мое, мои", "местоимения");
        insertDict(db, "myself", "[maɪˈself]", "сам, сама (я)", "местоимения");
        insertDict(db, "our, ours", "[‘auə, ‘auəz]", "наш", "местоимения");
        insertDict(db, "ourselves", "[auəˈselvz]", "сами (мы)", "местоимения");
        insertDict(db, "she", "[ʃiː]", "она", "местоимения");
        insertDict(db, "that", "[ðæt]", "тот, та, то", "местоимения");
        insertDict(db, "their, theirs", "[ðeə, ðeəz]", "их", "местоимения");
        insertDict(db, "themselves", "[ðəmˈselvz]", "сами (они)", "местоимения");
        insertDict(db, "these", "[ðiːz]", "эти", "местоимения");
        insertDict(db, "they", "[ðeɪ]", "они", "местоимения");
        insertDict(db, "this", "[ðɪs]", "этот, эта, это", "местоимения");
        insertDict(db, "those", "[ðəʊz]", "те", "местоимения");
        insertDict(db, "we", "[wiː]", "мы", "местоимения");
        insertDict(db, "you", "[juː]", "ты, вы", "местоимения");
        insertDict(db, "your", "[jɔː, jɔːz]", "твой, ваш", "местоимения");
        insertDict(db, "yourself", "[jɔːˈself]", "сам, сама (ты)", "местоимения");
        insertDict(db, "ant", "[ænt]", "муравей", "насекомые");
        insertDict(db, "aphid", "[ˈeɪfɪd]", "тля", "насекомые");
        insertDict(db, "bee", "[biː]", "пчела", "насекомые");
        insertDict(db, "beetle", "[biːtl]", "жук", "насекомые");
        insertDict(db, "bug", "[bʌg] ", "клоп", "насекомые");
        insertDict(db, "bumble bee", "[bʌmbl biː]", "шмель", "насекомые");
        insertDict(db, "butterfly", "[ˈbʌtəflaɪ]", "бабочка", "насекомые");
        insertDict(db, "caterpillar", "[ˈkætəpɪlə]", "гусеница", "насекомые");
        insertDict(db, "centipede", "[ˈsentɪpiːd]", "сороконожка", "насекомые");
        insertDict(db, "cockchafer", "[ˈkɔkʧeɪfə]", "майский жук", "насекомые");
        insertDict(db, "cockroach", "[ˈkɔkrəʊʧ]", "таракан", "насекомые");
        insertDict(db, "colorado beetle", "[kɔləˈrɑːdəʊˈbiːtl]", "колорадский жук", "насекомые");
        insertDict(db, "dragonfly", "[ˈdrægənflaɪ]", "стрекоза", "насекомые");
        insertDict(db, "firefly", "[ˈfaɪəflaɪ]", "светлячок", "насекомые");
        insertDict(db, "flea", "[fliː]", "блоха", "насекомые");
        insertDict(db, "horsefly", "[ˈhɔːsflaɪ]", "слепень", "насекомые");
        insertDict(db, "insect", "[ˈɪnsekt]", "насекомое", "насекомые");
        insertDict(db, "ladybird", "[ˈleɪdɪbɜːd]", "божья коровка", "насекомые");
        insertDict(db, "louse", "[laʊs]", "вошь", "насекомые");
        insertDict(db, "midge", "[mɪʤ]", "мошка", "насекомые");
        insertDict(db, "mosquito", "[məsˈkiːtəʊ]", "комар", "насекомые");
        insertDict(db, "moth", "[mɔθ]", "моль", "насекомые");
        insertDict(db, "pupa", "[ˈpjʊpə]", "куколка", "насекомые");
        insertDict(db, "scorpion", "[ˈskɔːpjən]", "скорпион", "насекомые");
        insertDict(db, "spider", "[ˈspaɪdə]", "паук", "насекомые");
        insertDict(db, "termite", "[ˈtɜːmaɪt]", "термит", "насекомые");
        insertDict(db, "tick", "[tɪk]", "клещ", "насекомые");
        insertDict(db, "wasp", "[wɔsp]", "оса", "насекомые");
        insertDict(db, "arise, arose, arisen", "[əˈraɪz, əˈroʊz, əˈrɪzn]", "возникать, появляться", "неправильные глаголы a-c");
        insertDict(db, "awake, awoke, awoken", "[əˈwaɪk, əˈwoʊk, əˈwoʊkn]", "будить, просыпаться", "неправильные глаголы a-c");
        insertDict(db, "be, was (were), been", "[bi:, wɒz (wɜ:), bi:n]", "быть, находиться", "неправильные глаголы a-c");
        insertDict(db, "bear, bore, borne", "[bɛə, bɔ:, bɔ:n]", "носить, выносить", "неправильные глаголы a-c");
        insertDict(db, "beat, beat, beaten", "[bi:t, bi:t, bi:tn]", "бить", "неправильные глаголы a-c");
        insertDict(db, "become, became, become", "[bɪˈkʌm, bɪˈkeɪm, bɪˈkʌm]", "становиться", "неправильные глаголы a-c");
        insertDict(db, "begin, began, begun", "[bɪˈgɪn, bɪˈgæn, bɪˈgʌn]", "начинать(ся)", "неправильные глаголы a-c");
        insertDict(db, "behold, beheld, beheld", "[bɪˈhəʊld, bɪˈhɛld, bɪˈhɛld]", "видеть, замечать", "неправильные глаголы a-c");
        insertDict(db, "bend, bent, bent", "[bɛnd, bɛnt, bɛnt]", "гнуть(ся)", "неправильные глаголы a-c");
        insertDict(db, "beset, beset, beset", "[bɪˈsɛt, bɪˈsɛt, bɪˈsɛt]", "осаждать", "неправильные глаголы a-c");
        insertDict(db, "bet, bet, bet", "[bɛt, bɛt, bɛt]", "держать пари", "неправильные глаголы a-c");
        insertDict(db, "bid, bid, bid", "[bɪd, bɪd, bɪd]", "предлагать цену (на аукционе)", "неправильные глаголы a-c");
        insertDict(db, "bind, bound, bound", "[baɪnd, baʊnd, baʊnd]", "связывать", "неправильные глаголы a-c");
        insertDict(db, "bite, bit, bitten", "[bʌɪt, bɪt, bɪtn]", "кусать", "неправильные глаголы a-c");
        insertDict(db, "bleed, bled, bled", "[bli:d, blɛd, blɛd]", "кровоточить", "неправильные глаголы a-c");
        insertDict(db, "blow, blew, blown", "[bloʊ, blu:, bloʊn]", "дуть", "неправильные глаголы a-c");
        insertDict(db, "break, broke, broken", "[breɪk, broʊk, broʊkən]", "ломать", "неправильные глаголы a-c");
        insertDict(db, "breed, bred, bred", "[bri:d, brɛd, brɛd]", "разводить (животных)", "неправильные глаголы a-c");
        insertDict(db, "bring, brought, brought", "[brɪŋ, brɔ:t, brɔ:t]", "принести", "неправильные глаголы a-c");
        insertDict(db, "build, built, built", "[bɪld, bɪlt, bɪlt]", "строить", "неправильные глаголы a-c");
        insertDict(db, "burn, burnt, burnt", "[bɜ:n, bɜ:nt, bɜ:nt]", "жечь, гореть", "неправильные глаголы a-c");
        insertDict(db, "burst, burst, burst", "[bɜ:st, bɜ:st, bɜ:st]", "взорваться", "неправильные глаголы a-c");
        insertDict(db, "buy, bought, bought", "[baɪ, bɔ:t, bɔ:t]", "купить", "неправильные глаголы a-c");
        insertDict(db, "cast, cast, cast", "[kɑ:st, kɑ:st, kɑ:st]", "бросать, кидать", "неправильные глаголы a-c");
        insertDict(db, "catch, caught, caught", "[kætʃ, kɔ:t, kɔ:t]", "ловить", "неправильные глаголы a-c");
        insertDict(db, "cleave, cleft, cleft", "[kli:v, klɛft, klɛft]", "рассечь", "неправильные глаголы a-c");
        insertDict(db, "cling, clung, clung", "[klɪŋ, klʌŋ, klʌŋ]", "цеплять(ся)", "неправильные глаголы a-c");
        insertDict(db, "come, came, come", "[kʌm, keɪm, kʌm]", "приходить", "неправильные глаголы a-c");
        insertDict(db, "cost, cost, cost", "[kɒst, kɒst, kɒst]", "стоить", "неправильные глаголы a-c");
        insertDict(db, "creep, crept, crept", "[kri:p, krɛpt, krɛpt]", "ползать", "неправильные глаголы a-c");
        insertDict(db, "cut, cut, cut", "[kʌt, kʌt, kʌt]", "резать", "неправильные глаголы a-c");
        insertDict(db, "choose, chose, chosen", "[tʃu:z, tʃoʊz, tʃoʊzn]", "выбирать", "неправильные глаголы a-c, глаголы умст. деятельности");
        insertDict(db, "deal, dealt, dealt", "[di:l, dɛlt, dɛlt]", "торговать", "неправильные глаголы d-f");
        insertDict(db, "dig, dug, dug", "[dɪg, dʌg, dʌg]", "копать", "неправильные глаголы d-f");
        insertDict(db, "do, did, done", "[du:, dɪd, dʌn]", "делать", "неправильные глаголы d-f");
        insertDict(db, "draw, drew, drawn", "[drɔ:, dru:, drɔ:n]", "рисовать, тащить", "неправильные глаголы d-f");
        insertDict(db, "dream, dreamt, dreamt", "[dri:m, drɛmt, drɛmt]", "видеть сны, мечтать", "неправильные глаголы d-f");
        insertDict(db, "drink, drank, drunk", "[drɪnk, drænk, drʌnk]", "пить", "неправильные глаголы d-f");
        insertDict(db, "drive, drove, driven", "[draɪv, droʊv, drɪvn]", "ехать, ездить", "неправильные глаголы d-f");
        insertDict(db, "dwell, dwelt, dwelt", "[dwel, dwɛlt, dwɛlt]", "обитать", "неправильные глаголы d-f");
        insertDict(db, "eat, ate, eaten", "[i:t, ɛt, i:tn]", "кушать, есть", "неправильные глаголы d-f");
        insertDict(db, "fall, fell, fallen", "[fɔ:l, fɛl, fɔ:lən]", "падать", "неправильные глаголы d-f");
        insertDict(db, "feed, fed, fed", "[fi:d, fɛd, fɛd]", "кормить", "неправильные глаголы d-f");
        insertDict(db, "feel, felt, felt", "[fi:l, fɛlt, fɛlt]", "чувствовать", "неправильные глаголы d-f");
        insertDict(db, "fight, fought, fought", "[faɪt, fɔ:t, fɔ:t]", "бороться", "неправильные глаголы d-f");
        insertDict(db, "find, found, found", "[faɪnd, faʊnd, faʊnd]", "находить", "неправильные глаголы d-f");
        insertDict(db, "flee, fled, fled", "[fli:, flɛd, flɛd]", "бежать, спасаться", "неправильные глаголы d-f");
        insertDict(db, "fling, flung, flung", "[flɪŋ, flʌŋ, flʌŋ]", "швырять", "неправильные глаголы d-f");
        insertDict(db, "fly, flew, flown", "[flaɪ, flu:, floʊn]", "летать", "неправильные глаголы d-f");
        insertDict(db, "forbid, forbade, forbidden", "[fəˈbɪd, fəˈbeɪd, fəbɪdn]", "запретить", "неправильные глаголы d-f");
        insertDict(db, "foresee, foresaw, foreseen", "[fɔːˈsiː, fɔːˈsɔː, fɔːˈsiːn]", "предвидеть", "неправильные глаголы d-f");
        insertDict(db, "foretell, foretold, foretold", "[fɔːˈtɛl, fɔːˈtəʊld, fɔːˈtəʊld]", "предсказывать", "неправильные глаголы d-f");
        insertDict(db, "forgive, forgave, forgiven", "[fəˈgɪv, fəˈgeɪv, fəgɪvn]", "простить", "неправильные глаголы d-f");
        insertDict(db, "forgo (forego), forewent, foregone", "[fɔːˈɡəʊ, fɔːˈwɛnt, fɔːˈɡɒn]", "предшествовать, воздерживаться (от чего-л.)", "неправильные глаголы d-f");
        insertDict(db, "forsake, forsook, forsaken", "[fəˈseɪk, fəˈsʊk, fəˈseɪkn]", "покидать", "неправильные глаголы d-f");
        insertDict(db, "freeze, froze, frozen", "[fri:z, froʊz, froʊzn]", "замерзать", "неправильные глаголы d-f");
        insertDict(db, "forget, forgot, forgotten", "[fəˈget, fəˈgɒt, fəˈgɒtn]", "забыть", "неправильные глаголы d-f, глаголы умст. деятельности");
        insertDict(db, "get, got, got", "[get, gɒt, gɒt]", "получать, становиться", "неправильные глаголы g-k");
        insertDict(db, "gild, gilt, gilt", "[gɪld, gɪlt, gɪlt]", "позолотить", "неправильные глаголы g-k");
        insertDict(db, "give, gave, given", "[gɪv, geɪv, gɪvn]", "давать", "неправильные глаголы g-k");
        insertDict(db, "go, went, gone", "[goʊ, wɛnt, ɡɒn]", "идти, ходить", "неправильные глаголы g-k");
        insertDict(db, "grind, ground, ground", "[graɪnd, graʊnd, graʊnd]", "точить, молоть", "неправильные глаголы g-k");
        insertDict(db, "grow, grew, grown", "[groʊ, gru:, groʊn]", "расти, выращивать", "неправильные глаголы g-k");
        insertDict(db, "hang, hung, hung", "[hæŋ, hʌŋ, hʌŋ]", "висеть, повесить", "неправильные глаголы g-k");
        insertDict(db, "have, had, had", "[hæv, hæd, hæd]", "иметь", "неправильные глаголы g-k");
        insertDict(db, "hear, heard, heard", "[hɪə, hɜ:d, hɜ:d]", "слышать", "неправильные глаголы g-k");
        insertDict(db, "heave, hove, hove", "[hi:v, həʊv, həʊv]", "поднимать", "неправильные глаголы g-k");
        insertDict(db, "hew, hewed, hewn", "[hju:, hju:d, hju:n]", "рубить, тесать", "неправильные глаголы g-k");
        insertDict(db, "hide, hid, hidden", "[haɪd, hɪd, hɪdn]", "прятать(ся)", "неправильные глаголы g-k");
        insertDict(db, "hit, hit, hit", "[hɪt, hɪt, hɪt]", "ударить", "неправильные глаголы g-k");
        insertDict(db, "hold, held, held", "[hoʊld, hɛld, hɛld]", "держать, проводить", "неправильные глаголы g-k");
        insertDict(db, "hurt, hurt, hurt", "[hɜ:t, hɜ:t, hɜ:t]", "ранить, обижать", "неправильные глаголы g-k");
        insertDict(db, "inlay, inlaid, inlaid", "[ɪnˈleɪ, ɪnˈleɪd, ɪnˈleɪd]", "вкладывать, инкрустировать", "неправильные глаголы g-k");
        insertDict(db, "input, input, input", "[ˈɪnpʊt, ˈɪnpʊt, ˈɪnpʊt]", "вводить (данные)", "неправильные глаголы g-k");
        insertDict(db, "interweave, interwove, interwoven", "[ɪntəˈwiːv, ɪntəˈwəʊv, ɪntəˈwəʊv(ə)n]", "сплетать", "неправильные глаголы g-k");
        insertDict(db, "keep, kept, kept", "[ki:p, kɛpt, kɛpt]", "держать", "неправильные глаголы g-k");
        insertDict(db, "kneel, knelt, knelt", "[ni:l, nɛlt, nɛlt]", "становиться на колени", "неправильные глаголы g-k");
        insertDict(db, "knit, knit, knit", "[nɪt, nɪt, nɪt]", "вязать", "неправильные глаголы g-k");
        insertDict(db, "know, knew, known", "[noʊ, nju:, noʊn]", "знать", "неправильные глаголы g-k, глаголы умст. деятельности");
        insertDict(db, "lay, laid, laid", "[leɪ, leɪd, leɪd]", "класть", "неправильные глаголы r-l");
        insertDict(db, "lead, led, led", "[li:d, lɛd, lɛd]", "вести", "неправильные глаголы r-l");
        insertDict(db, "lean, leant, leant", "[li:n, lɛnt, lɛnt]", "опираться", "неправильные глаголы r-l");
        insertDict(db, "leap, leapt, leapt", "[li:p, lɛpt, lɛpt]", "прыгать", "неправильные глаголы r-l");
        insertDict(db, "learn, learnt, learnt", "[lɜ:n, lɜ:nt, lɜ:nt]", "учить(ся)", "неправильные глаголы r-l");
        insertDict(db, "leave, left, left", "[li:v, lɛft, lɛft]", "оставлять, уезжать", "неправильные глаголы r-l");
        insertDict(db, "lend, lent, lent", "[lɛnd, lɛnt, lɛnt]", "давать взаймы", "неправильные глаголы r-l");
        insertDict(db, "let, let, let", "[lɛt, lɛt, lɛt]", "позволять", "неправильные глаголы r-l");
        insertDict(db, "lie, lay, lain", "[laɪ, leɪ, leɪn]", "лежать", "неправильные глаголы r-l");
        insertDict(db, "light, lit, lit", "[laɪt, lɪt, lɪt]", "зажигать, освещать", "неправильные глаголы r-l");
        insertDict(db, "lose, lost, lost", "[lu:z, lɒst, lɒst]", "терять", "неправильные глаголы r-l");
        insertDict(db, "make, made, made", "[meɪk, meɪd, meɪd]", "делать, создавать", "неправильные глаголы r-l");
        insertDict(db, "meet, met, met", "[mi:t, mɛt, mɛt]", "встретить", "неправильные глаголы r-l");
        insertDict(db, "mow, mowed, mown", "[moʊ, moʊd, moʊn]", "косить (траву)", "неправильные глаголы r-l");
        insertDict(db, "overcome, overcame, overcome", "[əʊvəˈkʌm, əʊvəˈkeɪm, əʊvəˈkʌm]", "преодолеть", "неправильные глаголы r-l");
        insertDict(db, "pay, paid, paid", "[peɪ, peɪd, peɪd]", "платить", "неправильные глаголы r-l");
        insertDict(db, "plead, pled, pled", "[pli:d, plɛd, plɛd]", "заявлять, умолять", "неправильные глаголы r-l");
        insertDict(db, "put, put, put", "[pʊt, pʊt, pʊt]", "класть", "неправильные глаголы r-l");
        insertDict(db, "rid, rid, rid", "[rɪd, rɪd, rɪd]", "избавлять", "неправильные глаголы r-l");
        insertDict(db, "ride, rode, ridden", "[raɪd, roʊd, rɪdn]", "ездить (на велосипеде, лошади)", "неправильные глаголы r-l");
        insertDict(db, "ring, rang, rung", "[rɪŋ, ræŋ, rʌŋ]", "звонить", "неправильные глаголы r-l");
        insertDict(db, "rise, rose, risen", "[raɪz, roʊz, rɪzn]", "подниматься", "неправильные глаголы r-l");
        insertDict(db, "run, ran, run", "[rʌn, ræn, rʌn]", "бежать", "неправильные глаголы r-l");
        insertDict(db, "mean, meant, meant", "[mi:n, mɛnt, mɛnt]", "означать", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "mistake, mistook, mistaken", "[mɪisˈteɪk, mɪˈstʊk, mɪˈsteɪk(ə)n]", "ошибаться", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "prove, proved, proven", "[pru:v, pru:vd, pru:vən]", "доказывать", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "read, read, read", "[ri:d, rɛd, rɛd]", "читать", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "think, thought, thought", "[θɪŋk, θɔ:t, θɔ:t]", "думать", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "understand, understood, understood", "[ʌndəˈstænd, ʌndəˈstʊd, ʌndəˈstʊd]", "понимать, понять", "неправильные глаголы r-l, глаголы умст. деятельности");
        insertDict(db, "saw, sawed, sawn", "[sɔ:, sɔ:d, sɔ:n]", "пилить", "неправильные глаголы s1");
        insertDict(db, "see, saw, seen", "[si:, sɔ:, si:n]", "видеть", "неправильные глаголы s1");
        insertDict(db, "seek, sought, sought", "[si:k, sɔ:t, sɔ:t]", "искать", "неправильные глаголы s1");
        insertDict(db, "sell, sold, sold", "[sel, soʊld, soʊld]", "продавать", "неправильные глаголы s1");
        insertDict(db, "send, sent, sent", "[sɛnd, sɛnt, sɛnt]", "посылать", "неправильные глаголы s1");
        insertDict(db, "set, set, set", "[sɛt, sɛt, sɛt]", "ставить", "неправильные глаголы s1");
        insertDict(db, "sew, sewed, sewn", "[səʊ, səʊd, səʊn]", "шить", "неправильные глаголы s1");
        insertDict(db, "shake, shook, shaken", "[ʃeɪk, ʃʊk, ʃeɪkən]", "трясти", "неправильные глаголы s1");
        insertDict(db, "shave, shaved, shaved", "[ʃeɪv, ʃeɪvd, ʃeɪvən]", "брить(ся)", "неправильные глаголы s1");
        insertDict(db, "shear, sheared, shorn", "[ʃɪə, ʃɪəd, ʃɔ:n]", "стричь", "неправильные глаголы s1");
        insertDict(db, "shed, shed, shed", "[ʃed, ʃɛd, ʃɛd]", "проливать (слёзы)", "неправильные глаголы s1");
        insertDict(db, "shine, shone, shone", "[ʃaɪn, ʃoʊn, ʃoʊn]", "светить, сиять", "неправильные глаголы s1");
        insertDict(db, "shit, shit, shit", "[ʃit, ʃit, ʃit]", "гадить", "неправильные глаголы s1");
        insertDict(db, "shoe, shod, shod", "[ʃu:, ʃɒd, ʃɒd]", "обувать, подковывать", "неправильные глаголы s1");
        insertDict(db, "shoot, shot, shot", "[ʃu:t, ʃɒt, ʃɒt]", "стрелять", "неправильные глаголы s1");
        insertDict(db, "show, showed, shown", "[ʃoʊ, ʃoʊd, ʃoʊn]", "показывать", "неправильные глаголы s1");
        insertDict(db, "shrink, shrank, shrunk", "[ʃrɪŋk, ʃræŋk, ʃrʌŋk]", "сжиматься", "неправильные глаголы s1");
        insertDict(db, "shut, shut, shut", "[ʃʌt, ʃʌt, ʃʌt]", "закрывать", "неправильные глаголы s1");
        insertDict(db, "sing, sang, sung", "[sɪŋ, sæŋ, sʌŋ]", "петь", "неправильные глаголы s1");
        insertDict(db, "sink, sank, sunk", "[sɪŋk, sæŋk, sʌŋk]", "погружаться, тонуть", "неправильные глаголы s1");
        insertDict(db, "sit, sat, sat", "[sɪt, sæt, sæt]", "сидеть", "неправильные глаголы s1");
        insertDict(db, "sleep, slept, slept", "[sli:p, slɛpt, slɛpt]", "спать", "неправильные глаголы s1");
        insertDict(db, "slide, slid, slid", "[slaɪd, slɪd, slɪd]", "скользить", "неправильные глаголы s1");
        insertDict(db, "sling, slung, slung", "[slɪŋ, slʌŋ, slʌŋ]", "швырять, подвешивать", "неправильные глаголы s1");
        insertDict(db, "slink, slunk, slunk", "[slɪŋk, slʌŋk, slʌŋk]", "красться", "неправильные глаголы s1");
        insertDict(db, "slit, slit, slit", "[slɪt, slɪt, slɪt]", "разрезать (полосами), расщеплять", "неправильные глаголы s1");
        insertDict(db, "smell, smelt, smelt", "[smel, smɛlt, smɛlt]", "пахнуть, нюхать", "неправильные глаголы s1");
        insertDict(db, "say, said, said", "[sɛɪ, sɛd, sɛd]", "сказать", "неправильные глаголы s1, глаголы речи");
        insertDict(db, "smite, smote, smitten", "[smʌɪt, sməʊt, ˈsmɪtn]", "ударять, разбивать", "неправильные глаголы s2");
        insertDict(db, "sow, sowed, sown", "[soʊ, soʊd, soʊn]", "сеять", "неправильные глаголы s2");
        insertDict(db, "speed, sped, sped", "[spi:d, spɛd, spɛd]", "мчаться", "неправильные глаголы s2");
        insertDict(db, "spell, spelt, spelt", "[spel, spɛlt, spɛlt]", "писать, читать по буквам", "неправильные глаголы s2");
        insertDict(db, "spend, spent, spent", "[spend, spɛnt, spɛnt]", "тратить, проводить (время)", "неправильные глаголы s2");
        insertDict(db, "spill, spilt, spilt", "[spɪl, spɪlt, spɪlt]", "расплескать", "неправильные глаголы s2");
        insertDict(db, "spin, spun, spun", "[spɪn, spʌn, spʌn]", "прясть, вертеть", "неправильные глаголы s2");
        insertDict(db, "spit, spat, spat", "[spɪt, spæt, spæt]", "плевать", "неправильные глаголы s2");
        insertDict(db, "split, split, split", "[splɪt, splɪt, splɪt]", "расщепить(ся)", "неправильные глаголы s2");
        insertDict(db, "spoil, spoilt, spoilt", "[spoɪl, spoɪlt, spoɪlt]", "портить, баловать", "неправильные глаголы s2");
        insertDict(db, "spread, spread, spread", "[spred, sprɛd, sprɛd]", "распространить(ся)", "неправильные глаголы s2");
        insertDict(db, "spring, sprang, sprung", "[sprɪŋ, spræŋ, sprʌŋ]", "возникать, выпрыгивать", "неправильные глаголы s2");
        insertDict(db, "stand, stood, stood", "[stænd, stʊd, stʊd]", "стоять", "неправильные глаголы s2");
        insertDict(db, "steal, stole, stolen", "[sti:l, stoʊl, stoʊlən]", "красть", "неправильные глаголы s2");
        insertDict(db, "stick, stuck, stuck", "[stɪk, stʌk, stʌk]", "втыкать, липнуть", "неправильные глаголы s2");
        insertDict(db, "sting, stung, stung", "[stɪŋ, stʌŋ, stʌŋ]", "жалить", "неправильные глаголы s2");
        insertDict(db, "stink, stank, stunk", "[stɪŋk, stræŋk, stʌŋk]", "вонять", "неправильные глаголы s2");
        insertDict(db, "strew, strewed, strewn", "[struː, struːd, struːn]", "усеивать", "неправильные глаголы s2");
        insertDict(db, "stride, strode, stridden", "[straɪd, stroʊd, strɪdn]", "шагать", "неправильные глаголы s2");
        insertDict(db, "strike, struck, struck", "[straɪk, strʌk, strʌk]", "ударить", "неправильные глаголы s2");
        insertDict(db, "string, strung, strung", "[strɪŋ, srtʌŋ, strʌŋ]", "нанизать, натянуть", "неправильные глаголы s2");
        insertDict(db, "strive, strove, striven", "[straɪv, stroʊv, strɪvən]", "стремиться", "неправильные глаголы s2");
        insertDict(db, "swear, swore, sworn", "[swɛə, swɔ:, swɔ:n]", "клясться", "неправильные глаголы s2");
        insertDict(db, "sweep, swept, swept", "[swi:p, swɛpt, swɛpt]", "мести", "неправильные глаголы s2");
        insertDict(db, "swell, swelled, swollen", "[swel, swɛld, swoʊlən]", "распухнуть, вздуться", "неправильные глаголы s2");
        insertDict(db, "swim, swam, swum", "[swɪm, swæm, swʌm]", "плавать", "неправильные глаголы s2");
        insertDict(db, "swing, swung, swung", "[swɪŋ, swʌŋ, swʌŋ]", "раскачивать(ся)", "неправильные глаголы s2");
        insertDict(db, "speak, spoke, spoken", "[spi:k, spoʊk, spoʊkən]", "разговаривать", "неправильные глаголы s2, глаголы речи");
        insertDict(db, "take, took, taken", "[teɪk, tʊk, 'teɪkən]", "брать", "неправильные глаголы t-w");
        insertDict(db, "teach, taught, taught", "[ti:tʃ, tɔ:t, tɔ:t]", "обучать", "неправильные глаголы t-w");
        insertDict(db, "tear, tore, torn", "[tɛə, tɔ:, tɔ:n]", "рвать", "неправильные глаголы t-w");
        insertDict(db, "throw, threw, thrown", "[θroʊ, θru:, θroʊn]", "бросать", "неправильные глаголы t-w");
        insertDict(db, "thrust, thrust, thrust", "[θrʌst, θrʌst, θrʌst]", "толкать", "неправильные глаголы t-w");
        insertDict(db, "tread, trod, trodden", "[tred, trɒd, trɒdn]", "ступать", "неправильные глаголы t-w");
        insertDict(db, "undergo, underwent, undergone", "[ʌndəˈɡəʊ, ʌndə'wɛnt, ʌndə'ɡɒn]", "проходить, подвергаться", "неправильные глаголы t-w");
        insertDict(db, "undertake, undertook, undertaken", "[ʌndəˈteɪk, ʌndəˈtʊk, ʌndəˈteɪk(ə)n]", "предпринимать", "неправильные глаголы t-w");
        insertDict(db, "undo, undid, undone", "['ʌn'du:, 'ʌn'dɪd, 'ʌn'dʌn]", "уничтожать сделанное", "неправильные глаголы t-w");
        insertDict(db, "upset, upset, upset", "[ʌp'set, ʌp'set, ʌp'set]", "расстраивать", "неправильные глаголы t-w");
        insertDict(db, "wake, woke, woken", "[weɪk, woʊk, woʊkən]", "просыпаться", "неправильные глаголы t-w");
        insertDict(db, "wear, wore, worn", "[wɛə, wɔ:, wɔ:n]", "носить, надевать", "неправильные глаголы t-w");
        insertDict(db, "wed, wedded, wedded", "[wed, 'wɛdɪd, 'wɛdɪd]", "вступать в брак", "неправильные глаголы t-w");
        insertDict(db, "weep, wept, wept", "[wi:p, wɛpt, wɛpt]", "плакать", "неправильные глаголы t-w");
        insertDict(db, "wet, wet, wet", "[wɛt, wɛt, wɛt]", "мочить", "неправильные глаголы t-w");
        insertDict(db, "win, won, won", "[wɪn, wʌn, wʌn]", "выигрывать, побеждать", "неправильные глаголы t-w");
        insertDict(db, "wind, wound, wound", "[waɪnd, waʊnd, waʊnd]", "вить(ся)", "неправильные глаголы t-w");
        insertDict(db, "withdraw, withdrew, withdrawn", "[wɪðˈdrɔː, wɪð'druː, wɪð'drɔːn]", "выйти, уйти, отказаться", "неправильные глаголы t-w");
        insertDict(db, "withhold, withheld, withheld", "[wɪðˈhəʊld, wɪðˈhɛld, wɪðˈhɛld]", "воздерживаться", "неправильные глаголы t-w");
        insertDict(db, "withstand, withstood, withstood", "[wɪðˈstand, wɪðˈstʊd, wɪðˈstʊd]", "выдержать, противостоять", "неправильные глаголы t-w");
        insertDict(db, "wring, wrung, wrung", "[rɪŋ, rʌŋ, rʌŋ]", "выкручивать", "неправильные глаголы t-w");
        insertDict(db, "write, wrote, written", "[raɪt, roʊt, rɪtn]", "писать", "неправильные глаголы t-w");
        insertDict(db, "tell, told, told", "[tel, toʊld, toʊld]", "рассказать", "неправильные глаголы t-w, глаголы речи");
        insertDict(db, "bean", "[biːn]", "фасоль, боб", "овощи");
        insertDict(db, "beet", "[biːt]", "свекла", "овощи");
        insertDict(db, "cabbage", "[ˈkæbɪʤ]", "капуста", "овощи");
        insertDict(db, "carrot", "[ˈkærət]", "морковь", "овощи");
        insertDict(db, "cucumber", "[ˈkjuːkʌmbə]", "огурец", "овощи");
        insertDict(db, "eggplant", "[ˈegplɑːnt]", "баклажан", "овощи");
        insertDict(db, "garlic", "[ˈgɑːlɪk]", "чеснок", "овощи");
        insertDict(db, "horseradish", "[ˈhɔːsrædɪʃ]", "хрен", "овощи");
        insertDict(db, "onion", "[ˈʌnjən]", "лук", "овощи");
        insertDict(db, "pea", "[piː]", "горох", "овощи");
        insertDict(db, "pepper", "[ˈpepə]", "перец", "овощи");
        insertDict(db, "potatoes", "[pəˈteɪtəʊz]", "картофель", "овощи");
        insertDict(db, "pumpkin", "[ˈpʌmpkɪn]", "тыква", "овощи");
        insertDict(db, "radish", "[ˈrædɪʃ]", "редис", "овощи");
        insertDict(db, "tomato", "[təˈmɑːtəʊ]", "помидор", "овощи");
        insertDict(db, "vegetable", "[ˈveʤɪtəbl]", "овощ", "овощи");
        insertDict(db, "zucchini", "[zʊˈkiːnɪ]", "кабачок", "овощи");
        insertDict(db, "cap", "[kæp]", "кепка, шапка", "одежда");
        insertDict(db, "clothing", "[ˈkləʊðɪŋ]", "одежда", "одежда");
        insertDict(db, "dress", "[dres]", "платье", "одежда");
        insertDict(db, "glasses", "[ˈglɑːsɪz]", "очки", "одежда");
        insertDict(db, "hat", "[hæt]", "шляпа", "одежда");
        insertDict(db, "jacket", "[ˈʤækɪt]", "куртка", "одежда");
        insertDict(db, "pants", "[pænts]", "штаны", "одежда");
        insertDict(db, "pocket", "[ˈpɔkɪt]", "карман", "одежда");
        insertDict(db, "sandals", "[sændlz]", "сандалии", "одежда");
        insertDict(db, "shirt", "[ʃɜːt]", "рубашка", "одежда");
        insertDict(db, "shoe", "[ʃuː]", "обувь, ботинок, туфля", "одежда");
        insertDict(db, "shorts", "[ʃɔːts]", "шорты", "одежда");
        insertDict(db, "sock", "[sɔk]", "носок", "одежда");
        insertDict(db, "suit", "[sjuːt]", "костюм, подходить", "одежда");
        insertDict(db, "sunhat", "[ˈsʌnhæt]", "панама", "одежда");
        insertDict(db, "sweater", "[ˈswetə]", "кофта, свитер", "одежда");
        insertDict(db, "tie", "[taɪ]", "галстук, связь, ничья", "одежда");
        insertDict(db, "trainers", "[ˈtreɪnəz]", "кроссовки", "одежда");
        insertDict(db, "trousers", "[ˈtraʊzəz]", "брюки", "одежда");
        insertDict(db, "t-shirt", "[ˈtiːʃɜːt]", "футболка", "одежда");
        insertDict(db, "wear", "[wɛə]", "носить, надевать", "одежда");
        insertDict(db, "cloud", "[klaʊd]", "облако", "погода");
        insertDict(db, "cloudy", "[ˈklaʊdɪ]", "облачный, пасмурный", "погода");
        insertDict(db, "humidity", "[hjuːˈmɪdɪtɪ]", "влажность", "погода");
        insertDict(db, "lightning", "[ˈlaɪtnɪŋ]", "молния", "погода");
        insertDict(db, "rain", "[ˈreɪn]", "дождь", "погода");
        insertDict(db, "rainy", "[ˈreɪnɪ]", "дождливый", "погода");
        insertDict(db, "snow", "[ˈsnəʊ]", "снег", "погода");
        insertDict(db, "snowy", "[ˈsnəʊɪ]", "снежный", "погода");
        insertDict(db, "sunny", "[ˈsʌnɪ]", "солнечный", "погода");
        insertDict(db, "temperature", "[ˈtemprɪʧə]", "температура", "погода");
        insertDict(db, "thunder", "[ˈθʌndə]", "гром", "погода");
        insertDict(db, "weather", "[ˈweðə]", "погода", "погода");
        insertDict(db, "wind", "[ˈwɪnd]", "ветер", "погода");
        insertDict(db, "windy", "[ˈwɪndɪ]", "ветреный", "погода");
        insertDict(db, "sun", "[ˈsʌn]", "солнце", "погода, космос");
        insertDict(db, "cold", "[kəʊld]", "холодный, прохладный", "погода, прилагательные основные2, прилагательные характера2");
        insertDict(db, "hot", "[hɔt]", "жаркий, горячий", "погода, прилагательные основные3");
        insertDict(db, "about", "[əˈbaʊt]", "о, около, вокруг, в пределах", "предлоги1");
        insertDict(db, "across", "[əˈkrɔs]", "через, сквозь, по ту сторону", "предлоги1");
        insertDict(db, "against", "[əˈgenst]", "против, от, с, на, к", "предлоги1");
        insertDict(db, "among", "[əˈmʌŋ]", "между, среди", "предлоги1");
        insertDict(db, "as", "[æz]", "в качестве, как", "предлоги1");
        insertDict(db, "at", "[æt]", "у, около, в, на", "предлоги1");
        insertDict(db, "behind", "[bɪˈhaɪnd]", "позади, за", "предлоги1");
        insertDict(db, "beneath", "[bɪˈniːθ]", "под, ниже", "предлоги1");
        insertDict(db, "besides", "[bɪˈsaɪdz]", "кроме того, за исключением", "предлоги1");
        insertDict(db, "beyond", "[bɪˈjɔnd]", "по ту сторону, за, вне, позже", "предлоги1");
        insertDict(db, "despite", "[dɪs'paɪt]", "несмотря на", "предлоги1");
        insertDict(db, "for", "[fɔː]", "для, за, на, в, в течение", "предлоги1");
        insertDict(db, "in", "[ɪn]", "в, во, на, в течение, за, через, у, к, из", "предлоги1");
        insertDict(db, "inside", "[ˈɪnˈsaɪd]", "внутри, внутрь", "предлоги1");
        insertDict(db, "on", "[ɔn]", "на, по", "предлоги1");
        insertDict(db, "out", "[aʊt]", "вне, из", "предлоги1");
        insertDict(db, "over", "[ˈəʊvə]", "над, через, за, свыше", "предлоги1");
        insertDict(db, "preposition", "[prepəˈzɪʃn]", "предлог", "предлоги1");
        insertDict(db, "through", "[θruː]", "через, сквозь, в течение", "предлоги1");
        insertDict(db, "to", "[tuː]", "к, до", "предлоги1");
        insertDict(db, "under", "[ˈʌndə]", "под, ниже, при", "предлоги1");
        insertDict(db, "until", "[ənˈtɪl]", "до, до тех пор, пока", "предлоги1");
        insertDict(db, "versus", "['vɜːsəs]", "против, в сравнении с (чем-л.)", "предлоги1");
        insertDict(db, "via", "[ˈvaɪə]", "через", "предлоги1");
        insertDict(db, "with", "[wɪð]", "с, в, от", "предлоги1");
        insertDict(db, "above", "[əˈbʌv]", "над, до, более, свыше, выше", "предлоги2");
        insertDict(db, "after", "[ˈɑːftə]", "за, после, по, позади", "предлоги2");
        insertDict(db, "along", "[əˈlɔŋ]", "вдоль, по", "предлоги2");
        insertDict(db, "around", "[əˈraʊnd]", "вокруг, около, по, за", "предлоги2");
        insertDict(db, "aside", "[əˈsaɪd]", "в стороне, поодаль", "предлоги2");
        insertDict(db, "before", "[bɪˈfɔː]", "перед, до", "предлоги2");
        insertDict(db, "below", "[bɪˈləʊ]", "ниже, под", "предлоги2");
        insertDict(db, "beside", "[bɪˈsaɪd]", "рядом, близ, около, ниже", "предлоги2");
        insertDict(db, "between", "[bɪˈtwiːn]", "между", "предлоги2");
        insertDict(db, "by", "[baɪ]", "у, около, мимо, вдоль, через, к, на", "предлоги2");
        insertDict(db, "down", "[daʊn]", "вниз, с, по течению, вниз по", "предлоги2");
        insertDict(db, "from", "[frɔm]", "от, из, с, по, из-за, у", "предлоги2");
        insertDict(db, "in front of", "[ɪn frʌnt ɔv]", "перед", "предлоги2");
        insertDict(db, "into", "[ˈɪntʊ]", "в, на", "предлоги2");
        insertDict(db, "opposite", "[ˈɔpəzɪt]", "против, напротив", "предлоги2");
        insertDict(db, "outside", "[ˈaʊtˈsaɪd]", "вне, за пределами", "предлоги2");
        insertDict(db, "per", "[pɜː]", "по, посредством, через, согласно", "предлоги2");
        insertDict(db, "since", "[sɪns]", "с (некоторого времени), после", "предлоги2");
        insertDict(db, "till", "[tɪl]", "до", "предлоги2");
        insertDict(db, "toward", "[ˈtəʊəd]", "к, по отношению к", "предлоги2");
        insertDict(db, "unlike", "[ˈʌnˈlaɪk]", "в отличие от", "предлоги2");
        insertDict(db, "up", "[ʌp]", "вверх", "предлоги2");
        insertDict(db, "vice", "[vaɪs]", "взамен, вместо", "предлоги2");
        insertDict(db, "without", "[wɪˈðaʊt]", "без, вне, за", "предлоги2");
        insertDict(db, "absolute", "[ˈæbsəluːt]", "абсолютный", "прилагательные абстрактные1");
        insertDict(db, "actual", "[ˈæktʃuəl]", "фактический", "прилагательные абстрактные1");
        insertDict(db, "advantageous", "[ˌædvənˈteɪdʒəs]", "выгодный", "прилагательные абстрактные1");
        insertDict(db, "cheap", "[tʃiːp]", "дешевый", "прилагательные абстрактные1");
        insertDict(db, "complex", "[ˈkɒmpleks]", "сложный", "прилагательные абстрактные1");
        insertDict(db, "conditional", "[kənˈdɪʃn̩əl]", "условный", "прилагательные абстрактные1");
        insertDict(db, "desirable", "[dɪˈzaɪərəbl]", "желательный", "прилагательные абстрактные1");
        insertDict(db, "disadvantageous", "[ˌdɪsˌædvənˈteɪdʒəs]", "невыгодный", "прилагательные абстрактные1");
        insertDict(db, "efficient", "[ɪˈfɪʃnt]", "эффективный", "прилагательные абстрактные1");
        insertDict(db, "fantastic", "[fænˈtæstɪk]", "фантастический", "прилагательные абстрактные1");
        insertDict(db, "free of charge", "[friː əv tʃɑːdʒ]", "бесплатный", "прилагательные абстрактные1");
        insertDict(db, "general", "[ˈdʒenr̩əl]", "общий", "прилагательные абстрактные1");
        insertDict(db, "harmful", "[ˈhɑːmfəl]", "вредный", "прилагательные абстрактные1");
        insertDict(db, "imaginary", "[ɪˈmædʒɪnəri]", "воображаемый", "прилагательные абстрактные1");
        insertDict(db, "main", "[meɪn]", "главный", "прилагательные абстрактные1");
        insertDict(db, "necessary", "[ˈnesəsəri]", "необходимый", "прилагательные абстрактные1");
        insertDict(db, "profitable", "[ˈprɒfɪtəbl̩]", "доходный", "прилагательные абстрактные1");
        insertDict(db, "real", "[rɪəl]", "реальный", "прилагательные абстрактные1");
        insertDict(db, "relative", "[ˈrelətɪv]", "относительный", "прилагательные абстрактные1");
        insertDict(db, "special", "[ˈspeʃl̩]", "специальный", "прилагательные абстрактные1");
        insertDict(db, "theoretical", "[θɪəˈretɪkl̩]", "теоретический", "прилагательные абстрактные1");
        insertDict(db, "unprofitable", "[ʌnˈprɒfɪtəbl̩]", "недоходный", "прилагательные абстрактные1");
        insertDict(db, "occasional", "[əˈkeɪʒənl̩]", "случайный", "прилагательные абстрактные1, прилагательные времени2");
        insertDict(db, "single", "[ˈsɪŋɡl̩]", "единичный", "прилагательные абстрактные1, прилагательные состояния1");
        insertDict(db, "assumed", "[əˈsjuːmd]", "предполагаемый", "прилагательные абстрактные2");
        insertDict(db, "basic", "[ˈbeɪsɪk]", "основной", "прилагательные абстрактные2");
        insertDict(db, "certain", "[ˈsɜːtn̩]", "определенный", "прилагательные абстрактные2");
        insertDict(db, "common", "[ˈkɒmən]", "общий", "прилагательные абстрактные2");
        insertDict(db, "expensive", "[ɪkˈspensɪv]", "дорогой", "прилагательные абстрактные2");
        insertDict(db, "harmless", "[ˈhɑːmləs]", "безвредный", "прилагательные абстрактные2");
        insertDict(db, "hypothetical", "[ˌhaɪpəˈθetɪkl̩]", "гипотетический", "прилагательные абстрактные2");
        insertDict(db, "inevitable", "[ɪnˈevɪtəbl̩]", "неизбежный", "прилагательные абстрактные2");
        insertDict(db, "invalid", "[ɪnˈvælɪd]", "недействительный", "прилагательные абстрактные2");
        insertDict(db, "negative", "[ˈneɡətɪv]", "отрицательный", "прилагательные абстрактные2");
        insertDict(db, "particular", "[pəˈtɪkjʊlə]", "особенный", "прилагательные абстрактные2");
        insertDict(db, "positive", "[ˈpɒzətɪv]", "положительный", "прилагательные абстрактные2");
        insertDict(db, "possible", "[ˈpɒsəbl̩]", "возможный", "прилагательные абстрактные2");
        insertDict(db, "priceless", "[ˈpraɪsləs]", "бесценный", "прилагательные абстрактные2");
        insertDict(db, "probable", "[ˈprɒbəbl̩]", "вероятный", "прилагательные абстрактные2");
        insertDict(db, "regular", "[ˈreɡjʊlə]", "закономерный, регулярный", "прилагательные абстрактные2");
        insertDict(db, "secondary", "['sekəndərɪ]", "вторичный, средний", "прилагательные абстрактные2");
        insertDict(db, "separate", "[ˈseprət]", "отдельный", "прилагательные абстрактные2");
        insertDict(db, "simple", "[ˈsɪmpl̩]", "простой", "прилагательные абстрактные2");
        insertDict(db, "typical", "[ˈtɪpɪkl̩]", "типичный", "прилагательные абстрактные2");
        insertDict(db, "useful", "[ˈjuːsfəl]", "полезный", "прилагательные абстрактные2");
        insertDict(db, "useless", "[ˈjuːsləs]", "бесполезный", "прилагательные абстрактные2");
        insertDict(db, "valid", "[ˈvælɪd]", "действительный (в силе)", "прилагательные абстрактные2");
        insertDict(db, "practical", "[ˈpræktɪkl̩]", "практический", "прилагательные абстрактные2, прилагательные характера1");
        insertDict(db, "adult", "[ˈædʌlt]", "взрослый", "прилагательные времени1");
        insertDict(db, "constant", "[ˈkɒnstənt]", "постоянный", "прилагательные времени1");
        insertDict(db, "contemporary", "[kənˈtemprəri]", "современный", "прилагательные времени1");
        insertDict(db, "continuous", "[kənˈtɪnjʊəs]", "длящийся", "прилагательные времени1");
        insertDict(db, "daily", "[ˈdeɪlɪ]", "ежедневный", "прилагательные времени1");
        insertDict(db, "early", "[ˈɜːli]", "ранний", "прилагательные времени1");
        insertDict(db, "endless", "[ˈendlɪs]", "бесконечный", "прилагательные времени1");
        insertDict(db, "eternal", "[ɪˈtɜːnl̩]", "вечный", "прилагательные времени1");
        insertDict(db, "fast", "[fɑːst]", "быстрый", "прилагательные времени1");
        insertDict(db, "final", "[ˈfaɪnl̩]", "конечный", "прилагательные времени1");
        insertDict(db, "future", "[ˈfjuːtʃə]", "будущий", "прилагательные времени1");
        insertDict(db, "gradual", "[ˈɡrædʒʊəl]", "постепенный", "прилагательные времени1");
        insertDict(db, "initial", "[ɪˈnɪʃl̩]", "начальный", "прилагательные времени1");
        insertDict(db, "last", "[lɑːst]", "последний, длиться", "прилагательные времени1");
        insertDict(db, "past", "[pɑːst]", "прошлый", "прилагательные времени1");
        insertDict(db, "periodical", "[ˌpɪərɪˈɒdɪkl̩]", "периодический", "прилагательные времени1");
        insertDict(db, "preceding", "[prɪˈsiːdɪŋ]", "предшествующий", "прилагательные времени1");
        insertDict(db, "preliminary", "[prɪˈlɪmɪnərɪ]", "предварительный", "прилагательные времени1");
        insertDict(db, "present", "[prɪˈzent]", "настоящий", "прилагательные времени1");
        insertDict(db, "prolonged", "[prəʊˈlɔŋd]", "продолжительный", "прилагательные времени1");
        insertDict(db, "rapid", "[ˈræpɪd]", "стремительный", "прилагательные времени1");
        insertDict(db, "rare", "[reə]", "редкий", "прилагательные времени1");
        insertDict(db, "systematic", "[sɪstɪˈmætɪk]", "систематический", "прилагательные времени1");
        insertDict(db, "uninterrupted", "[ˌʌnɪntəˈrʌptɪd]", "непрерывный", "прилагательные времени1");
        insertDict(db, "urgent", "[ˈɜːʤənt]", "срочный", "прилагательные времени1");
        insertDict(db, "young", "[jʌŋ]", "молодой", "прилагательные времени1");
        insertDict(db, "next", "[nekst]", "следующий, рядом, около", "прилагательные времени1, предлоги1");
        insertDict(db, "aged", "[eɪdʒd]", "пожилой", "прилагательные времени2");
        insertDict(db, "ancient", "[ˈeɪnʃənt]", "древний", "прилагательные времени2");
        insertDict(db, "annual", "[ˈænjʊəl]", "ежегодный", "прилагательные времени2");
        insertDict(db, "brief", "[briːf]", "краткий", "прилагательные времени2");
        insertDict(db, "everlasting", "[evəˈlɑːstɪŋ]", "вечный", "прилагательные времени2");
        insertDict(db, "extended", "[ɪksˈtendɪd]", "продленный", "прилагательные времени2");
        insertDict(db, "frequent", "[frɪˈkwent]", "частый", "прилагательные времени2");
        insertDict(db, "infrequent", "[ɪnˈfriːkwənt]", "нечастый", "прилагательные времени2");
        insertDict(db, "late", "[leɪt]", "поздний", "прилагательные времени2");
        insertDict(db, "modern", "[ˈməʊdern]", "современный, модный", "прилагательные времени2");
        insertDict(db, "obsolete", "[ˈɒbsəliːt]", "устаревший", "прилагательные времени2");
        insertDict(db, "old", "[əʊld]", "старый", "прилагательные времени2");
        insertDict(db, "permanent", "[ˈpɜːmənənt]", "постоянный", "прилагательные времени2");
        insertDict(db, "previous", "[ˈpriːvɪəs]", "предыдущий", "прилагательные времени2");
        insertDict(db, "recent", "[ˈriːsnt]", "недавний", "прилагательные времени2");
        insertDict(db, "simultaneous", "[ˌsɪmlˈteɪnɪəs]", "одновременный", "прилагательные времени2");
        insertDict(db, "slow", "[sləʊ]", "медленный", "прилагательные времени2");
        insertDict(db, "sudden", "[ˈsʌdn̩]", "внезапный", "прилагательные времени2");
        insertDict(db, "swift", "[swɪft]", "быстрый", "прилагательные времени2");
        insertDict(db, "temporary", "[ˈtemprəri]", "временный", "прилагательные времени2");
        insertDict(db, "the first", "[ðə ˈfɜːst]", "первый", "прилагательные времени2");
        insertDict(db, "the last", "[ðə lɑːst]", "последний", "прилагательные времени2");
        insertDict(db, "up-to-date", "[ˌʌp tə ˈdeɪt]", "новейший", "прилагательные времени2");
        insertDict(db, "usual", "[ˈjuːʒʊəl]", "обычный", "прилагательные времени2");
        insertDict(db, "quick", "[kwɪk]", "быстрый, находчивый", "прилагательные времени2, прилагательные способностей1");
        insertDict(db, "advanced", "[ədˈvɑːnst]", "передовой, продвинутый", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "approximate", "[əˈprɒksɪmət]", "приблизительный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "artificial", "[ˌɑːtɪˈfɪʃl̩]", "искусственный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "defective", "[dɪˈfektɪv]", "дефектный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "different", "[ˈdɪfrənt]", "различный, разный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "empty", "[ˈempti]", "пустой", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "equal", "[ˈiːkwəl]", "равный, одинаковый", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "false", "[ˈfɔːls]", "ложный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "illegal", "[ɪˈliːɡl̩]", "незаконный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "illogical", "[ɪˈlɒdʒɪkl̩]", "нелогичный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "important", "[ɪmˈpɔːtnt]", "важный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "inappropriate", "[ˌɪnəˈprəʊprɪət]", "неуместный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "inferior", "[ɪnˈfɪərɪə]", "уступающий", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "insignificant", "[ˌɪnsɪɡˈnɪfɪkənt]", "незначительный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "lawful", "[ˈlɔːfəl]", "законный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "numerous", "[ˈnju:mərəs]", "многочисленный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "optimum", "[ˈɒptɪməm]", "оптимальный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "precise", "[prɪˈsaɪz]", "точный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "redundant", "[rɪˈdʌndənt]", "избыточный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "satisfactory", "[sætɪsˈfæktərɪ]", "удовлетворительный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "similar", "[ˈsɪmələ]", "похожий", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "sufficient", "[səˈfɪʃənt]", "достаточный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "suitable", "[ˈsuːtəbl̩]", "подходящий", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "the same", "[ðə seɪm]", "тот же самый", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "true", "[truː]", "верный", "прилагательные кач-ва и кол-ва1");
        insertDict(db, "absurd", "[əbˈsɜːd]", "абсурдный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "acceptable", "[əkˈseptəbl̩]", "приемлемый", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "appropriate", "[əˈprəʊpriət]", "подходящий", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "difficult", "[ˈdɪfɪkəlt]", "трудный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "easy", "[ˈiːzi]", "легкий", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "essential", "[ɪˈsenʃl̩]", "существенный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "excessive", "[ɪkˈsesɪv]", "избыточный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "high-quality", "[haɪ ˈkwɒlɪti]", "качественный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "insufficient", "[ɪnsəˈfɪʃənt]", "недостаточный, нехватка", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "legal", "[ˈliːɡl̩]", "легальный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "logical", "[ˈlɒdʒɪkl̩]", "логичный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "maximum", "[ˈmæksɪməm]", "максимальный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "minimum", "[ˈmɪnɪməm]", "минимальный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "natural", "[ˈnætʃrəl]", "естественный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "rejected", "[rɪˈdʒektɪd]", "забракованный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "reliable", "[rɪˈlaɪəbl]", "надежный, надежность", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "significant", "[sɪɡˈnɪfɪkənt]", "значительный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "sophisticated", "[səˈfɪstɪkeɪtɪd]", "усовершенствованный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "standard", "[ˈstændəd]", "стандартный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "superfluous", "[suːˈpɜːflʊəs]", "лишний", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "unreliable", "[ˌʌnrɪˈlaɪəbl̩]", "ненадежный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "various", "[ˈveərɪəs]", "различный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "wrong", "[rɒŋ]", "неправильный", "прилагательные кач-ва и кол-ва2");
        insertDict(db, "full", "[fʊl]", "полный, сытый", "прилагательные кач-ва и кол-ва2, прилагательные состояния2");
        insertDict(db, "average", "[ˈævərɪdʒ]", "средний", "прилагательные кач-ва и кол-ва2, прилагательные способностей1");
        insertDict(db, "aromatic", "[ˌærəˈmætɪk]", "ароматный", "прилагательные основные1");
        insertDict(db, "big", "[bɪɡ]", "большой", "прилагательные основные1");
        insertDict(db, "bitter", "[ˈbɪtə]", "горький", "прилагательные основные1");
        insertDict(db, "blunt", "[blʌnt]", "тупой, непонятливый", "прилагательные основные1");
        insertDict(db, "concave", "[ˈkɒŋkeɪv]", "впалый, вогнутый", "прилагательные основные1");
        insertDict(db, "cool", "[kuːl]", "прохладный", "прилагательные основные1");
        insertDict(db, "deep", "[diːp]", "глубокий", "прилагательные основные1");
        insertDict(db, "even", "[ˈiːvn̩]", "ровный", "прилагательные основные1");
        insertDict(db, "far", "[fɑː]", "далекий", "прилагательные основные1");
        insertDict(db, "flat", "[flæt]", "плоский", "прилагательные основные1");
        insertDict(db, "horizontal", "[ˌhɒrɪˈzɒntl̩]", "горизонтальный", "прилагательные основные1");
        insertDict(db, "inclined", "[ɪnˈklaɪnd]", "наклонный", "прилагательные основные1");
        insertDict(db, "loud", "[laʊd]", "громкий", "прилагательные основные1");
        insertDict(db, "low", "[ləʊ]", "низкий", "прилагательные основные1");
        insertDict(db, "muffled", "[ˈmʌfl̩d]", "приглушенный", "прилагательные основные1");
        insertDict(db, "noisy", "[ˈnɔɪzi]", "шумный", "прилагательные основные1");
        insertDict(db, "salty", "[ˈsɔːlti]", "соленый", "прилагательные основные1");
        insertDict(db, "spherical", "[ˈsferɪkl̩]", "сферический", "прилагательные основные1");
        insertDict(db, "stinking", "[ˈstɪŋkɪŋ]", "вонючий", "прилагательные основные1");
        insertDict(db, "straight", "[streɪt]", "прямой", "прилагательные основные1");
        insertDict(db, "near", "[nɪə]", "близкий, около, возле", "прилагательные основные1, предлоги2");
        insertDict(db, "strong", "[strɒŋ]", "крепкий", "прилагательные основные1, прилагательные состояния1");
        insertDict(db, "quiet", "[ˈkwaɪət]", "тихий", "прилагательные основные1, прилагательные характера2");
        insertDict(db, "pleasant", "[ˈpleznt]", "приятный", "прилагательные основные1, прилагательные эмоций1");
        insertDict(db, "broad", "[brɔːd]", "широкий", "прилагательные основные2");
        insertDict(db, "conic", "[ˈkɒnɪk]", "конический", "прилагательные основные2");
        insertDict(db, "cubic", "[ˈkjuːbɪk]", "кубический", "прилагательные основные2");
        insertDict(db, "curved", "[kɜːvd]", "кривой", "прилагательные основные2");
        insertDict(db, "deaf", "[def]", "глухой", "прилагательные основные2");
        insertDict(db, "fragrant", "[ˈfreɪɡrənt]", "душистый", "прилагательные основные2");
        insertDict(db, "fresh", "[freʃ]", "свежий", "прилагательные основные2");
        insertDict(db, "hard", "[hɑːd]", "твердый", "прилагательные основные2");
        insertDict(db, "hardly audible", "[ˈhɑːdli ˈɔːdəbl̩]", "еле слышный", "прилагательные основные2");
        insertDict(db, "large", "[lɑːdʒ]", "большой", "прилагательные основные2");
        insertDict(db, "narrow", "[ˈnærəʊ]", "узкий", "прилагательные основные2");
        insertDict(db, "odourless", "[ˈəʊdələs]", "без запаха", "прилагательные основные2");
        insertDict(db, "sharp", "[ʃɑːp]", "острый", "прилагательные основные2");
        insertDict(db, "specific", "[spəˈsɪfɪk]", "специфический", "прилагательные основные2");
        insertDict(db, "tall", "[tɔːl]", "высокий", "прилагательные основные2");
        insertDict(db, "tasteless", "[ˈteɪstləs]", "безвкусный", "прилагательные основные2");
        insertDict(db, "thick", "[θɪk]", "толстый", "прилагательные основные2");
        insertDict(db, "thin", "[θɪn]", "тонкий", "прилагательные основные2");
        insertDict(db, "triangular", "[traɪˈæŋɡjʊlə]", "треугольный", "прилагательные основные2");
        insertDict(db, "uneven", "[ʌnˈiːvn̩]", "неровный", "прилагательные основные2");
        insertDict(db, "warm", "[wɔːm]", "теплый", "прилагательные основные2");
        insertDict(db, "long", "[ˈlɒŋ]", "длинный, долгий", "прилагательные основные2, прилагательные времени1");
        insertDict(db, "little", "[lɪtl]", "маленький", "прилагательные основные2, прилагательные времени2");
        insertDict(db, "short", "[ʃɔːt]", "короткий", "прилагательные основные2, прилагательные времени2");
        insertDict(db, "unpleasant", "[ʌnˈpleznt]", "неприятный", "прилагательные основные2, прилагательные эмоций3");
        insertDict(db, "convex", "[ˈkɒnveks]", "выпуклый", "прилагательные основные3");
        insertDict(db, "cylindrical", "[sɪˈlɪndrɪkl̩]", "цилиндрический", "прилагательные основные3");
        insertDict(db, "delicious", "[dɪˈlɪʃəs]", "вкуснейший, восхитительный", "прилагательные основные3");
        insertDict(db, "dry", "[draɪ]", "сухой", "прилагательные основные3");
        insertDict(db, "fine", "[faɪn]", "мелкий, тонкий, изящный", "прилагательные основные3");
        insertDict(db, "huge", "[hjuːdʒ]", "огромный", "прилагательные основные3");
        insertDict(db, "humid", "[ˈhjuːmɪd]", "влажный", "прилагательные основные3");
        insertDict(db, "pungent", "[ˈpʌndʒənt]", "острый", "прилагательные основные3");
        insertDict(db, "rectangular", "[rekˈtæŋɡjʊlə]", "прямоугольный", "прилагательные основные3");
        insertDict(db, "rough", "[rʌf]", "грубый, шороховатый", "прилагательные основные3");
        insertDict(db, "round", "[ˈraʊnd]", "круглый", "прилагательные основные3");
        insertDict(db, "shallow", "[ˈʃæləʊ]", "мелкий", "прилагательные основные3");
        insertDict(db, "small", "[smɔːl]", "маленький", "прилагательные основные3");
        insertDict(db, "smelly", "[ˈsmeli]", "неприятно пахнущий", "прилагательные основные3");
        insertDict(db, "smooth", "[smuːð]", "гладкий", "прилагательные основные3");
        insertDict(db, "soft", "[sɒft]", "мягкий, тихий, нежный", "прилагательные основные3");
        insertDict(db, "sour", "[ˈsaʊə]", "кислый", "прилагательные основные3");
        insertDict(db, "tasty", "[ˈteɪsti]", "вкусный", "прилагательные основные3");
        insertDict(db, "vertical", "[ˈvɜːtɪkl̩]", "вертикальный", "прилагательные основные3");
        insertDict(db, "wet", "[wet]", "мокрый", "прилагательные основные3");
        insertDict(db, "wide", "[waɪd]", "широкий", "прилагательные основные3");
        insertDict(db, "baked", "[beɪkt]", "печеный", "прилагательные состояния1");
        insertDict(db, "comfortable", "[ˈkʌmftəbl̩]", "удобный", "прилагательные состояния1");
        insertDict(db, "complete", "[kəmˈpliːt]", "завершенный", "прилагательные состояния1");
        insertDict(db, "dirty", "[ˈdɜːti]", "грязный", "прилагательные состояния1");
        insertDict(db, "divorced", "[dɪˈvɔːst]", "разведенный", "прилагательные состояния1");
        insertDict(db, "emaciated", "[ɪˈmeɪʃɪeɪtɪd]", "исхудалый", "прилагательные состояния1");
        insertDict(db, "exhausted", "[ɪɡˈzɔːstɪd]", "очень усталый", "прилагательные состояния1");
        insertDict(db, "fat", "[fæt]", "жирный", "прилагательные состояния1");
        insertDict(db, "free", "[friː]", "свободный", "прилагательные состояния1");
        insertDict(db, "healthy", "[ˈhelθi]", "здоровый", "прилагательные состояния1");
        insertDict(db, "incomplete", "[ˌɪnkəmˈpliːt]", "незавершенный, неполный", "прилагательные состояния1");
        insertDict(db, "intact", "[ɪnˈtækt]", "исправный", "прилагательные состояния1");
        insertDict(db, "lean", "[liːn]", "худощавый", "прилагательные состояния1");
        insertDict(db, "married", "[ˈmærɪd]", "женатый, замужем", "прилагательные состояния1");
        insertDict(db, "mature", "[məˈtjʊə]", "зрелый, созреть, зрелость", "прилагательные состояния1");
        insertDict(db, "packed up", "[pækt ʌp]", "упакованный", "прилагательные состояния1");
        insertDict(db, "pregnant", "[ˈpreɡnənt]", "беременная", "прилагательные состояния1");
        insertDict(db, "ragged", "[ræɡd]", "оборванный", "прилагательные состояния1");
        insertDict(db, "raw", "[rɔː]", "сырой (невареный)", "прилагательные состояния1");
        insertDict(db, "ready", "[ˈredi]", "готовый", "прилагательные состояния1");
        insertDict(db, "sick", "[sɪk]", "больной, слабый", "прилагательные состояния1");
        insertDict(db, "sleepy", "[ˈsliːpi]", "сонливый", "прилагательные состояния1");
        insertDict(db, "thirsty", "[ˈθɜːstɪ]", "жаждущий, пить", "прилагательные состояния1");
        insertDict(db, "uncomfortable", "[ʌnˈkʌmftəbl̩]", "неудобный", "прилагательные состояния1");
        insertDict(db, "busy", "[ˈbɪzi]", "занятый (чем-либо)", "прилагательные состояния2");
        insertDict(db, "clean", "[kliːn]", "чистый", "прилагательные состояния2");
        insertDict(db, "convenient", "[kənˈviːnɪənt]", "удобный, подходящий", "прилагательные состояния2");
        insertDict(db, "cooked", "[kʊkt]", "приготовленный (о пище)", "прилагательные состояния2");
        insertDict(db, "damaged", "[ˈdæmɪdʒd]", "поврежденный", "прилагательные состояния2");
        insertDict(db, "drowsy", "[ˈdraʊzi]", "сонный", "прилагательные состояния2");
        insertDict(db, "engaged", "[ɪnˈɡeɪdʒd]", "занятый", "прилагательные состояния2");
        insertDict(db, "fried", "[fraɪd]", "жареный", "прилагательные состояния2");
        insertDict(db, "hungry", "[ˈhʌŋgrɪ]", "голодный", "прилагательные состояния2");
        insertDict(db, "ill", "[ɪl]", "больной, нездоровый", "прилагательные состояния2");
        insertDict(db, "inconvenient", "[ɪnkənˈviːnɪənt]", "неудобный, неподходящий", "прилагательные состояния2");
        insertDict(db, "occupied", "[ˈɒkjʊpaɪd]", "занятый (о месте)", "прилагательные состояния2");
        insertDict(db, "rich", "[rɪtʃ]", "богатый", "прилагательные состояния2");
        insertDict(db, "robust", "[rəuˈbʌst]", "устойчивый, крепкий, сильный", "прилагательные состояния2");
        insertDict(db, "slim", "[slɪm]", "стройный", "прилагательные состояния2");
        insertDict(db, "spoilt", "[spɔɪlt]", "испорченный", "прилагательные состояния2");
        insertDict(db, "tired", "[ˈtaɪəd]", "усталый", "прилагательные состояния2");
        insertDict(db, "vacant", "[ˈveɪkənt]", "свободный, вакантный", "прилагательные состояния2");
        insertDict(db, "vigorous", "[ˈvɪɡərəs]", "энергичный, сильный", "прилагательные состояния2");
        insertDict(db, "weak", "[wiːk]", "слабый", "прилагательные состояния2");
        insertDict(db, "well-dressed", "[wel drest]", "хорошо одетый", "прилагательные состояния2");
        insertDict(db, "well-to-do", "[ˌwel tə ˈduː]", "благосостоятельный", "прилагательные состояния2");
        insertDict(db, "cheerful", "[ˈtʃɪəfəl]", "бодрый", "прилагательные состояния2, прилагательные эмоций3");
        insertDict(db, "absent-minded", "[ˌæbsəntˈmaɪndɪd]", "рассеянный", "прилагательные способностей1");
        insertDict(db, "accurate", "[ˈækjərət]", "аккуратный", "прилагательные способностей1");
        insertDict(db, "attentive", "[əˈtentɪv]", "внимательный", "прилагательные способностей1");
        insertDict(db, "awkward", "[ˈɔːkwəd]", "неуклюжий", "прилагательные способностей1");
        insertDict(db, "careful", "[keəfʊl]", "осторожный", "прилагательные способностей1");
        insertDict(db, "careless", "[ˈkeələs]", "невнимательный", "прилагательные способностей1");
        insertDict(db, "crazy", "[ˈkreɪzi]", "сумасшедший, чокнутый", "прилагательные способностей1");
        insertDict(db, "dexterous", "[ˈdekstrəs]", "ловкий", "прилагательные способностей1");
        insertDict(db, "erudite", "[ˈeruːdaɪt]", "эрудированный", "прилагательные способностей1");
        insertDict(db, "experienced", "[ɪkˈspɪərɪənst]", "опытный", "прилагательные способностей1");
        insertDict(db, "gifted", "[ˈɡɪftɪd]", "одаренный", "прилагательные способностей1");
        insertDict(db, "great", "[ˈɡreɪt]", "гениальный", "прилагательные способностей1");
        insertDict(db, "inexperienced", "[ˌɪnɪkˈspɪərɪənst]", "неопытный", "прилагательные способностей1");
        insertDict(db, "mad", "[mæd]", "безумный, сумасшедший", "прилагательные способностей1");
        insertDict(db, "sharp-witted", "[ʃɑːp ˈwɪtɪd]", "остроумный", "прилагательные способностей1");
        insertDict(db, "silly", "[ˈsɪlɪ]", "глупый, слабоумный", "прилагательные способностей1");
        insertDict(db, "skilful", "[ˈskɪlfəl]", "умелый", "прилагательные способностей1");
        insertDict(db, "stolid", "[ˈstɒlɪd]", "невозмутимый, флегматичный", "прилагательные способностей1");
        insertDict(db, "talented", "[ˈtæləntɪd]", "талантливый", "прилагательные способностей1");
        insertDict(db, "wise", "[waɪz]", "мудрый", "прилагательные способностей1");
        insertDict(db, "capable", "[ˈkeɪpəbl]", "способный", "прилагательные способностей2");
        insertDict(db, "clever", "[ˈklevə]", "умный", "прилагательные способностей2");
        insertDict(db, "clumsy", "[ˈklʌmzi]", "неуклюжий", "прилагательные способностей2");
        insertDict(db, "deft", "[deft]", "ловкий", "прилагательные способностей2");
        insertDict(db, "diligent", "[ˈdɪlɪdʒənt]", "прилежный", "прилагательные способностей2");
        insertDict(db, "distracted", "[dɪˈstræktɪd]", "рассеянный", "прилагательные способностей2");
        insertDict(db, "dull", "[dʌl]", "тупой", "прилагательные способностей2");
        insertDict(db, "exact", "[ɪɡˈzækt]", "точный", "прилагательные способностей2");
        insertDict(db, "high-skilled", "[haɪ skɪld]", "высококвалифицированный", "прилагательные способностей2");
        insertDict(db, "ignorant", "[ˈɪɡnərənt]", "незнающий", "прилагательные способностей2");
        insertDict(db, "industrious", "[ɪnˈdʌstrɪəs]", "усердный", "прилагательные способностей2");
        insertDict(db, "intelligent", "[ɪnˈtelɪdʒənt]", "разумный", "прилагательные способностей2");
        insertDict(db, "lazy", "[ˈleɪzi]", "ленивый", "прилагательные способностей2");
        insertDict(db, "mediocre", "[ˌmiːdɪˈəʊkə]", "посредственный", "прилагательные способностей2");
        insertDict(db, "naive", "[naɪˈiːv]", "наивный", "прилагательные способностей2");
        insertDict(db, "negligent", "[ˈneɡlɪdʒənt]", "небрежный", "прилагательные способностей2");
        insertDict(db, "sly", "[slaɪ]", "хитрый, лукавый", "прилагательные способностей2");
        insertDict(db, "stupid", "[ˈstjuːpɪd]", "глупый, тупой", "прилагательные способностей2");
        insertDict(db, "thorough", "[ˈθʌrə]", "тщательный", "прилагательные способностей2");
        insertDict(db, "unskilful", "[ˈʌnˈskɪlfʊl]", "неумелый", "прилагательные способностей2");
        insertDict(db, "Nepali", "[nɪˈpɔːlɪ]", "непальский", "прилагательные стран азии");
        insertDict(db, "Turkish", "[ˈtɜːkɪʃ]", "турецкий", "прилагательные стран азии");
        insertDict(db, "Afghan", "[ˈæfgæn]", "афганский, афганец, афганка", "прилагательные стран азии, жители азии");
        insertDict(db, "Australian", "[ɔsˈtreɪljən]", "австралийский, австралиец, австралийка", "прилагательные стран азии, жители азии");
        insertDict(db, "Bangladeshi", "[bæŋgləˈdeʃɪ]", "бангладешский, житель, жительница Бангладеша", "прилагательные стран азии, жители азии");
        insertDict(db, "Burmese", "[bɜːˈmiːz]", "бирманский, бирманец, бирманка", "прилагательные стран азии, жители азии");
        insertDict(db, "Cambodian", "[kæmˈbəʊdɪən]", "камбоджийский, камбоджиец, камбоджийка", "прилагательные стран азии, жители азии");
        insertDict(db, "Chinese", "[ˈʧaɪˈniːz]", "китайский, китаец, китаянка", "прилагательные стран азии, жители азии");
        insertDict(db, "Filipino", "[fɪlɪˈpiːnəʊ]", "филиппинский, филиппинец, филиппинка", "прилагательные стран азии, жители азии");
        insertDict(db, "Georgian", "[ˈʤɔːʤjən]", "грузинский, грузин, грузинка", "прилагательные стран азии, жители азии");
        insertDict(db, "Indian", "[ˈɪndjən]", "индийский, индиец, индианка", "прилагательные стран азии, жители азии");
        insertDict(db, "Indonesian", "[ɪndəʊˈniːzjən]", "индонезийский, индонезиец, индонезийка", "прилагательные стран азии, жители азии");
        insertDict(db, "Iranian", "[aɪˈreɪnjən]", "иранский, иранец, иранка", "прилагательные стран азии, жители азии");
        insertDict(db, "Iraqi", "[ɪˈrɑːkɪ]", "иракский, житель, жительница Ирака", "прилагательные стран азии, жители азии");
        insertDict(db, "Israeli", "[ɪzˈreɪlɪ]", "израильский, израильтянин, израильтянка", "прилагательные стран азии, жители азии");
        insertDict(db, "Japanese", "[ʤæpəˈniːz]", "японский, японец, японка", "прилагательные стран азии, жители азии");
        insertDict(db, "Jordanian", "[ʤɔːˈdeɪnɪən]", "иорданский, иорданец, иорданка", "прилагательные стран азии, жители азии");
        insertDict(db, "Kazakh", "[kʌˈzɑːh]", "казахский, казах, казашка", "прилагательные стран азии, жители азии");
        insertDict(db, "Korean", "[kəˈrɪən]", "корейский, кореец, кореянка", "прилагательные стран азии, жители азии");
        insertDict(db, "Kuwaiti", "[kʊˈweɪtɪ]", "кувейтский, житель, жительница Кувейта", "прилагательные стран азии, жители азии");
        insertDict(db, "Lebanese", "[lebəˈniːz]", "ливанский, ливанец, ливанка", "прилагательные стран азии, жители азии");
        insertDict(db, "Malaysian", "[məˈleɪzɪən]", "малазийский, малазиец, малазийка", "прилагательные стран азии, жители азии");
        insertDict(db, "Mongolian", "[mɔŋˈgəʊljən]", "монгольский, монгол, монголка", "прилагательные стран азии, жители азии");
        insertDict(db, "Pakistani", "[pɑːkɪsˈtɑːnɪ]", "пакистанский, пакистанец, пакистанка", "прилагательные стран азии, жители азии");
        insertDict(db, "Saudi Arabian", "[ˈsaʊdɪ əˈreɪbjən]", "саудовский, житель, жительница Саудовской Аравии", "прилагательные стран азии, жители азии");
        insertDict(db, "Singaporean", "[sɪŋəˈpɔːrɪən]", "сингапурский, сингапурец, сингапурка", "прилагательные стран азии, жители азии");
        insertDict(db, "Sri Lankan", "[srɪ ˈlænkən]", "шриланкийский, житель, жительница Шри-Ланки", "прилагательные стран азии, жители азии");
        insertDict(db, "Syrian", "[ˈsɪrɪən]", "сирийский, сириец, сирийка", "прилагательные стран азии, жители азии");
        insertDict(db, "Thai", "[taɪ]", "таиландский, таец, тайка", "прилагательные стран азии, жители азии");
        insertDict(db, "Vietnamese", "[vjetnəˈmiːz]", "вьетнамский, вьетнамец, вьетнамка", "прилагательные стран азии, жители азии");
        insertDict(db, "Yemeni", "[ˈjemənɪ]", "йеменский, йеменец, йеменка", "прилагательные стран азии, жители азии");
        insertDict(db, "American", "[əˈmerɪkən]", "американский, американец, американка", "прилагательные стран америки, жители америки");
        insertDict(db, "Argentinian", "[ɑːʤənˈtiːnɪən]", "аргентинский, аргентинец, аргентинка", "прилагательные стран америки, жители америки");
        insertDict(db, "Bolivian", "[bəˈlɪvɪən]", "боливийский, боливиец, боливийка", "прилагательные стран америки, жители америки");
        insertDict(db, "Brazilian", "[brəˈzɪljən]", "бразильский, бразилец, бразильянка", "прилагательные стран америки, жители америки");
        insertDict(db, "Canadian", "[kəˈneɪdjən]", "канадский, канадец, канадка", "прилагательные стран америки, жители америки");
        insertDict(db, "Chilean", "[ˈʧɪlɪən]", "чилийский, чилиец, чилийка", "прилагательные стран америки, жители америки");
        insertDict(db, "Colombian", "[kəˈlɔmbɪən]", "колумбийский, колумбиец, колумбийка", "прилагательные стран америки, жители америки");
        insertDict(db, "Cuban", "[ˈkjuːbən]", "кубинский, кубинец, кубинка", "прилагательные стран америки, жители америки");
        insertDict(db, "Ecuadorian", "[ekwəˈdɔːrɪən]", "эквадорский, эквадорец, эквадорка", "прилагательные стран америки, жители америки");
        insertDict(db, "Guatemalan", "[gwætɪˈmɑːlən]", "гватемальский, гватемалец, гватемалка", "прилагательные стран америки, жители америки");
        insertDict(db, "Jamaican", "[ʤəˈmeɪkən", "ямайский, ямаец, ямайка", "прилагательные стран америки, жители америки");
        insertDict(db, "Mexican", "[ˈmeksɪkən]", "мексиканский, мексиканец, мексиканка", "прилагательные стран америки, жители америки");
        insertDict(db, "Paraguayan", "[pærəˈgwaɪən]", "парагвайский, парагваец, парагвайка", "прилагательные стран америки, жители америки");
        insertDict(db, "Peruvian", "[pəˈruːvjən]", "перуанский, перуанец, перуанка", "прилагательные стран америки, жители америки");
        insertDict(db, "Uruguayan", "[ʊrʊˈgwaɪən]", "уругвайский, уругваец, уругвайка", "прилагательные стран америки, жители америки");
        insertDict(db, "Venezuelan", "[veneˈzweɪlən]", "венесуэльский, венесуэлец, венесуэлка", "прилагательные стран америки, жители америки");
        insertDict(db, "Algerian", "[ælˈʤɪərɪən]", "алжирский, алжирец, алжирка", "прилагательные стран африки, жители африки");
        insertDict(db, "Angolan", "[æŋˈgəʊlən]", "ангольский, анголец, анголка", "прилагательные стран африки, жители африки");
        insertDict(db, "Congolese", "[kɒŋgəˈliːz]", "конголезский, конголезец, конголезка", "прилагательные стран африки, жители африки");
        insertDict(db, "Egyptian", "[ɪˈʤɪpʃn]", "египетский, египтянин, египтянка", "прилагательные стран африки, жители африки");
        insertDict(db, "Ethiopian", "[iːθɪˈəʊpjən]", "эфиопский, эфиоп, эфиопка", "прилагательные стран африки, жители африки");
        insertDict(db, "Ghanaian", "[gɑːˈneɪən]", "ганский, ганец, ганка", "прилагательные стран африки, жители африки");
        insertDict(db, "Ivorian", "[aɪˈvɔːrɪən]", "котдивуарский, котдивуарец, котдиауарка", "прилагательные стран африки, жители африки");
        insertDict(db, "Kenyan", "[ˈkenjən]", "кенийский, кениец, кенийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Libyan", "[ˈlɪbɪən]", "ливийский, ливиец, ливийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Malagasy", "[mæləˈgæsɪ]", "малагасийский, малагасиец, малагасийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Moroccan", "[məˈrɒkən]", "марокканский, марокканец, марокканка", "прилагательные стран африки, жители африки");
        insertDict(db, "Mozambican", "[məʊzæmˈbiːkən]", "мозамбикский, мозамбиец, мозамбийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Namibian", "[nəˈmɪbɪən]", "намибийский, намибиец, намибийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Nigerian", "[naɪˈʤɪərɪən]", "нигерийский, нигериец, нигерийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Somali", "[səˈmɑːlɪ]", "сомалийский, сомалиец", "прилагательные стран африки, жители африки");
        insertDict(db, "South African", "[saʊθ ˈæfrɪkən]", "южноафриканский, южноафриканец, южноафриканка", "прилагательные стран африки, жители африки");
        insertDict(db, "Sudanese", "[suːdəˈniːz]", "суданский, суданец, суданка", "прилагательные стран африки, жители африки");
        insertDict(db, "Tanzanian", "[tænzəˈnɪən", "танзанийский, танзаниец, танзанийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Tunisian", "[tjuːˈnɪzɪən]", "тунисский, тунисец, туниска", "прилагательные стран африки, жители африки");
        insertDict(db, "Ugandan", "[juːˈgændən]", "угандийский, угандиец, угандийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Zambian", "[ˈzæmbɪən]", "замбийский, замбиец, замбийка", "прилагательные стран африки, жители африки");
        insertDict(db, "Zimbabwean", "[zɪmˈbɑːbwɪən]", "зимбабвийский, зимбабвиец, зимбабвийка", "прилагательные стран африки, жители африки");
        insertDict(db, "British", "[ˈbrɪtɪʃ]", "британский", "прилагательные стран европы");
        insertDict(db, "Danish", "[ˈdeɪnɪʃ]", "датский", "прилагательные стран европы");
        insertDict(db, "Dutch", "[dʌʧ]", "голландский", "прилагательные стран европы");
        insertDict(db, "English", "[ˈɪŋglɪʃ]", "английский", "прилагательные стран европы");
        insertDict(db, "Finnish", "[ˈfɪnɪʃ]", "финский", "прилагательные стран европы");
        insertDict(db, "French", "[frenʧ]", "французский", "прилагательные стран европы");
        insertDict(db, "Icelandic", "[aɪsˈlændɪk]", "исландский", "прилагательные стран европы");
        insertDict(db, "Irish", "[ˈaɪərɪʃ]", "ирландский", "прилагательные стран европы");
        insertDict(db, "Polish", "[ˈpɔlɪʃ]", "польский", "прилагательные стран европы");
        insertDict(db, "Spanish", "[ˈspænɪʃ]", "испанский", "прилагательные стран европы");
        insertDict(db, "Swedish", "[ˈswiːdɪʃ]", "шведский", "прилагательные стран европы");
        insertDict(db, "Albanian", "[ælˈbeɪnjən]", "албанский, албанец, албанка", "прилагательные стран европы, жители европы");
        insertDict(db, "Austrian", "[ˈɒstrɪən]", "австрийский, австриец, австрийка", "прилагательные стран европы, жители европы");
        insertDict(db, "Belarusian", "[bɪˈleɪruːsɪən]", "белорусский, белорус, белоруска", "прилагательные стран европы, жители европы");
        insertDict(db, "Belgian", "[ˈbelʤən]", "бельгийский, бельгиец, бельгийка", "прилагательные стран европы, жители европы");
        insertDict(db, "Bulgarian", "[bʌlˈgɛərɪən]", "болгарский, болгарин, болгарка", "прилагательные стран европы, жители европы");
        insertDict(db, "Croatian", "[krəʊˈeɪʃjən]", "хорватский, хорват, хорватка", "прилагательные стран европы, жители европы");
        insertDict(db, "Cypriot", "[ˈsɪprɪət]", "киприотский, киприот, киприотка", "прилагательные стран европы, жители европы");
        insertDict(db, "Czech", "[ʧek]", "чешский, чех, чешка", "прилагательные стран европы, жители европы");
        insertDict(db, "Estonian", "[esˈtəʊnjən]", "эстонский, эстонец, эстонка", "прилагательные стран европы, жители европы");
        insertDict(db, "German", "[ˈʤɜːmən]", "немецкий, немец, немка", "прилагательные стран европы, жители европы");
        insertDict(db, "Greek", "[griːk]", "греческий, грек, гречанка", "прилагательные стран европы, жители европы");
        insertDict(db, "Hungarian", "[hʌŋˈgɛərɪən]", "венгерский, венгр, венгерка", "прилагательные стран европы, жители европы");
        insertDict(db, "Italian", "[ɪˈtæljən]", "итальянский, итальянец, итальянка", "прилагательные стран европы, жители европы");
        insertDict(db, "Latvian", "[ˈlætvɪən]", "латышский, латыш, латышка", "прилагательные стран европы, жители европы");
        insertDict(db, "Lithuanian", "[lɪθjuːˈeɪnjən]", "литовский, литовец, литовка", "прилагательные стран европы, жители европы");
        insertDict(db, "Norwegian", "[nɔːˈwiːʤən]", "норвежский, норвежец, норвежка", "прилагательные стран европы, жители европы");
        insertDict(db, "Portuguese", "[pɔːtjʊˈgiːz]", "португальский, португалец, португалка", "прилагательные стран европы, жители европы");
        insertDict(db, "Romanian", "[rəˈmeɪnɪən]", "румынский, румын, румынка", "прилагательные стран европы, жители европы");
        insertDict(db, "Russian", "[rʌʃn]", "русский, русская", "прилагательные стран европы, жители европы");
        insertDict(db, "Serbian", "[ˈsɜːbjən]", "сербский, серб, сербка", "прилагательные стран европы, жители европы");
        insertDict(db, "Slovak", "[ˈsləʊvæk]", "словацкий, словак, словачка", "прилагательные стран европы, жители европы");
        insertDict(db, "Slovenian", "[sləʊˈviːnjən]", "словенский, словен, словенка", "прилагательные стран европы, жители европы");
        insertDict(db, "Swiss", "[swɪs]", "швейцарский, швейцарец, швейцарка", "прилагательные стран европы, жители европы");
        insertDict(db, "Ukrainian", "[juːˈkreɪnjən]", "украинский, украинец, украинка", "прилагательные стран европы, жители европы");
        insertDict(db, "boastful", "[ˈbəʊstfəl]", "хвастливый", "прилагательные характера1");
        insertDict(db, "calculating", "[ˈkælkjʊleɪtɪŋ]", "расчетливый", "прилагательные характера1");
        insertDict(db, "can-do", "[kæn duː]", "исполнительный", "прилагательные характера1");
        insertDict(db, "cooperative", "[kəʊˈɒpərətɪv]", "отзывчивый, сотрудничающий", "прилагательные характера1");
        insertDict(db, "curious", "[ˈkjʊərɪəs]", "любопытный", "прилагательные характера1");
        insertDict(db, "depressed", "[dɪˈprest]", "подавленный, унылый", "прилагательные характера1");
        insertDict(db, "enterprising", "[ˈentəpraɪzɪŋ]", "предприимчивый", "прилагательные характера1");
        insertDict(db, "greedy", "[ˈɡriːdi]", "жадный", "прилагательные характера1");
        insertDict(db, "honest", "[ˈɒnɪst]", "честный", "прилагательные характера1");
        insertDict(db, "lonely", "[ˈləʊnli]", "одинокий", "прилагательные характера1");
        insertDict(db, "modest", "[ˈmɒdɪst]", "скромный", "прилагательные характера1");
        insertDict(db, "purposeful", "[ˈpɜːpəsfəl]", "целеустремленный", "прилагательные характера1");
        insertDict(db, "respectful", "[rɪˈspektfəl]", "почтительный", "прилагательные характера1");
        insertDict(db, "responsible", "[rɪˈspɒnsəbl̩]", "ответственный", "прилагательные характера1");
        insertDict(db, "selfish", "[ˈselfɪʃ]", "эгоистичный, эгоист", "прилагательные характера1");
        insertDict(db, "serious", "[ˈsɪərɪəs]", "серьезный", "прилагательные характера1");
        insertDict(db, "sociable", "[ˈsəʊʃəbl̩]", "общительный", "прилагательные характера1");
        insertDict(db, "traditional", "[trəˈdɪʃn̩əl]", "традиционный", "прилагательные характера1");
        insertDict(db, "trusting", "[ˈtrʌstɪŋ]", "доверчивый", "прилагательные характера1");
        insertDict(db, "guilty", "[ˈɡɪlti]", "виновный, виноватый", "прилагательные характера1, прилагательные эмоций1");
        insertDict(db, "sad", "[sæd]", "грустный, печальный", "прилагательные характера1, прилагательные эмоций3");
        insertDict(db, "brave", "[breɪv]", "храбрый", "прилагательные характера2");
        insertDict(db, "broad-minded", "[brɔːd ˈmaɪndɪd]", "с широким кругозором", "прилагательные характера2");
        insertDict(db, "competitive", "[kəmˈpetətɪv]", "конкурентоспособный", "прилагательные характера2");
        insertDict(db, "confident", "[ˈkɒnfɪdənt]", "уверенный", "прилагательные характера2");
        insertDict(db, "considerate", "[kənˈsɪdərət]", "внимательный", "прилагательные характера2");
        insertDict(db, "cunning", "[ˈkʌnɪŋ]", "хитрый, коварный", "прилагательные характера2");
        insertDict(db, "emotional", "[ɪˈməʊʃn̩əl]", "эмоциональный", "прилагательные характера2");
        insertDict(db, "faithful", "[ˈfeɪθfəl]", "верный", "прилагательные характера2");
        insertDict(db, "friendly", "[ˈfrendli]", "дружелюбный", "прилагательные характера2");
        insertDict(db, "hard-working", "[ˈhɑːdˌwɜːkɪŋ]", "трудолюбивый", "прилагательные характера2");
        insertDict(db, "hospitable", "[hɒˈspɪtəbl̩]", "гостеприимный", "прилагательные характера2");
        insertDict(db, "impudent", "[ˈɪmpjʊdənt]", "нахальный", "прилагательные характера2");
        insertDict(db, "incorruptible", "[ˌɪnkəˈrʌptəbl̩]", "неподкупный", "прилагательные характера2");
        insertDict(db, "observant", "[əbˈzɜːvənt]", "наблюдательный", "прилагательные характера2");
        insertDict(db, "persistent", "[pəˈsɪstənt]", "настойчивый", "прилагательные характера2");
        insertDict(db, "reserved", "[rɪˈzɜːvd]", "сдержанный", "прилагательные характера2");
        insertDict(db, "self-possessed", "[ˌself pəˈzest]", "выдержанный, хладнокровный", "прилагательные характера2");
        insertDict(db, "talkative", "[ˈtɔːkətɪv]", "разговорчивый", "прилагательные характера2");
        insertDict(db, "tough", "[tʌf]", "жесткий", "прилагательные характера2");
        insertDict(db, "arrogant", "[ˈærəɡənt]", "высокомерный", "прилагательные характера3");
        insertDict(db, "bright", "[braɪt]", "яркий, блестящий", "прилагательные характера3");
        insertDict(db, "creative", "[kriːˈeɪtɪv]", "творческий", "прилагательные характера3");
        insertDict(db, "decent", "[ˈdiːsnt]", "порядочный", "прилагательные характера3");
        insertDict(db, "good-natured", "[ɡʊd ˈneɪtʃəd]", "добродушный", "прилагательные характера3");
        insertDict(db, "hard-headed", "[hɑːd ˈhedɪd]", "твердолобый", "прилагательные характера3");
        insertDict(db, "hot-tempered", "[hɒt ˈtempəd]", "вспыльчивый", "прилагательные характера3");
        insertDict(db, "irritable", "[ˈɪrɪtəbl̩]", "раздражительный", "прилагательные характера3");
        insertDict(db, "nervous", "[ˈnɜːvəs]", "нервный", "прилагательные характера3");
        insertDict(db, "obstinate", "[ˈɒbstɪnət]", "упрямый", "прилагательные характера3");
        insertDict(db, "quick witted", "[kwɪk ˈwɪtəd]", "находчивый", "прилагательные характера3");
        insertDict(db, "sceptical", "[ˈskeptɪkl̩]", "скептический", "прилагательные характера3");
        insertDict(db, "self-confident", "[self ˈkɒnfɪdənt]", "самоуверенный", "прилагательные характера3");
        insertDict(db, "shy", "[ʃaɪ]", "застенчивый", "прилагательные характера3");
        insertDict(db, "stable", "[steɪbl]", "стабильный", "прилагательные характера3");
        insertDict(db, "tolerant", "[ˈtɒlərənt]", "терпимый", "прилагательные характера3");
        insertDict(db, "pretty", "[ˈprɪti]", "милая, прелестная", "прилагательные характера3, прилагательные эмоций2");
        insertDict(db, "optimistic", "[ˌɒptɪˈmɪstɪk]", "оптимистичный", "прилагательные характера3, прилагательные эмоций3");
        insertDict(db, "appalled", "[əˈpɔːld]", "напуганный, потрясенный", "прилагательные эмоций1");
        insertDict(db, "astonishing", "[əˈstɒnɪʃɪŋ]", "удивительный", "прилагательные эмоций1");
        insertDict(db, "bored", "[bɔːd]", "скучающий", "прилагательные эмоций1");
        insertDict(db, "dangerous", "[ˈdeɪndʒərəs]", "опасный", "прилагательные эмоций1");
        insertDict(db, "delightful", "[dɪˈlaɪtfəl]", "восхищенный", "прилагательные эмоций1");
        insertDict(db, "disturbing", "[dɪˈstɜːbɪŋ]", "тревожный", "прилагательные эмоций1");
        insertDict(db, "doubtful", "[ˈdaʊtfʊl]", "сомневающийся", "прилагательные эмоций1");
        insertDict(db, "dreamy", "[ˈdriːmi]", "мечтательный", "прилагательные эмоций1");
        insertDict(db, "giggly", "[ˈɡɪɡli]", "хихикающий", "прилагательные эмоций1");
        insertDict(db, "handsome", "[ˈhænsəm]", "симпатичный (о мужчине)", "прилагательные эмоций1");
        insertDict(db, "hysterical", "[hɪˈsterɪkl̩]", "истеричный", "прилагательные эмоций1");
        insertDict(db, "insulting", "[ɪnˈsʌltɪŋ]", "оскорбительный", "прилагательные эмоций1");
        insertDict(db, "merry", "[ˈmeri]", "радостный, веселый", "прилагательные эмоций1");
        insertDict(db, "moved", "[muːvd]", "растроганный", "прилагательные эмоций1");
        insertDict(db, "nice", "[naɪs]", "милый", "прилагательные эмоций1");
        insertDict(db, "normal", "[ˈnɔːml̩]", "нормальный, обычный", "прилагательные эмоций1");
        insertDict(db, "offended", "[əˈfendɪd]", "оскорбленный", "прилагательные эмоций1");
        insertDict(db, "repulsive", "[rɪˈpʌlsɪv]", "отталкивающий", "прилагательные эмоций1");
        insertDict(db, "shocked", "[ʃɒkt]", "шокированный", "прилагательные эмоций1");
        insertDict(db, "splendid", "[ˈsplendɪd]", "великолепный, роскошный", "прилагательные эмоций1");
        insertDict(db, "stuffed", "[stʌft]", "объевшийся", "прилагательные эмоций1");
        insertDict(db, "terrified", "[ˈterɪfaɪd]", "напуганный", "прилагательные эмоций1");
        insertDict(db, "tiresome", "[ˈtaɪəsəm]", "скучный", "прилагательные эмоций1");
        insertDict(db, "ugly", "[ˈʌɡli]", "безобразный", "прилагательные эмоций1");
        insertDict(db, "upset", "[ʌpˈset]", "расстроенный, расстраивать", "прилагательные эмоций1");
        insertDict(db, "wonderful", "[ˈwʌndəfəl]", "чудесный", "прилагательные эмоций1");
        insertDict(db, "worried", "[ˈwʌrɪd]", "обеспокоенный", "прилагательные эмоций1");
        insertDict(db, "abominable", "[əˈbɒmɪnəbl̩]", "отвратительный, гнусный", "прилагательные эмоций2");
        insertDict(db, "agitated", "[ˈædʒɪteɪtɪd]", "взволнованный", "прилагательные эмоций2");
        insertDict(db, "astonished", "[əˈstɒnɪʃt]", "изумленный", "прилагательные эмоций2");
        insertDict(db, "awed", "[ɔːd]", "трепещущий", "прилагательные эмоций2");
        insertDict(db, "disgusting", "[dɪsˈɡʌstɪŋ]", "отвратительный, противный", "прилагательные эмоций2");
        insertDict(db, "distressed", "[dɪˈstrest]", "расстроенный", "прилагательные эмоций2");
        insertDict(db, "fearful", "[ˈfɪəfəl]", "страшный, испуганный", "прилагательные эмоций2");
        insertDict(db, "frightened", "[ˈfraɪtn̩d]", "напуганный", "прилагательные эмоций2");
        insertDict(db, "glad", "[ɡlæd]", "довольный", "прилагательные эмоций2");
        insertDict(db, "good", "[gʊd]", "хороший", "прилагательные эмоций2");
        insertDict(db, "haggard", "[ˈhæɡəd]", "изможденный", "прилагательные эмоций2");
        insertDict(db, "happy", "[ˈhæpɪ]", "счастливый, веселый", "прилагательные эмоций2");
        insertDict(db, "infuriated", "[ɪnˈfjʊərɪeɪtɪd]", "разъяренный", "прилагательные эмоций2");
        insertDict(db, "interesting", "[ˈɪntrəstɪŋ]", "интересный", "прилагательные эмоций2");
        insertDict(db, "lucky", "[ˈlʌki]", "везучий", "прилагательные эмоций2");
        insertDict(db, "magnificent", "[mæɡˈnɪfɪsnt]", "великолепный", "прилагательные эмоций2");
        insertDict(db, "pessimistic", "[ˌpesɪˈmɪstɪk]", "пессимистический", "прилагательные эмоций2");
        insertDict(db, "satisfied", "[ˈsætɪsfaɪd]", "удовлетворенный", "прилагательные эмоций2");
        insertDict(db, "shocking", "[ˈʃɒkɪŋ]", "шокирующий", "прилагательные эмоций2");
        insertDict(db, "sorry", "[ˈsɒri]", "огорченный", "прилагательные эмоций2");
        insertDict(db, "superior", "[suːˈpɪərɪə]", "превосходный", "прилагательные эмоций2");
        insertDict(db, "surprised", "[səˈpraɪzd]", "удивленный", "прилагательные эмоций2");
        insertDict(db, "surprising", "[səˈpraɪzɪŋ]", "удивительный, неожиданный", "прилагательные эмоций2");
        insertDict(db, "terrible", "[ˈterəbl̩]", "ужасный", "прилагательные эмоций2");
        insertDict(db, "touching", "[ˈtʌtʃɪŋ]", "трогательный", "прилагательные эмоций2");
        insertDict(db, "unattractive", "[ˌʌnəˈtræktɪv]", "непривлекательный", "прилагательные эмоций2");
        insertDict(db, "amazing", "[əˈmeɪzɪŋ]", "удивительный, паразительный", "прилагательные эмоций3");
        insertDict(db, "angry", "[ˈæŋgrɪ]", "злой, злиться", "прилагательные эмоций3");
        insertDict(db, "attractive", "[əˈtræktɪv]", "привлекательный", "прилагательные эмоций3");
        insertDict(db, "awful", "[ˈɔːfl̩]", "ужасный", "прилагательные эмоций3");
        insertDict(db, "bad", "[bæd]", "плохой", "прилагательные эмоций3");
        insertDict(db, "beautiful", "[ˈbjuːtəfl̩]", "красивый", "прилагательные эмоций3");
        insertDict(db, "boring", "[ˈbɔːrɪŋ]", "надоедливый", "прилагательные эмоций3");
        insertDict(db, "contented", "[kənˈtentɪd]", "довольный", "прилагательные эмоций3");
        insertDict(db, "dejected", "[dɪˈdʒektɪd]", "угнетенный", "прилагательные эмоций3");
        insertDict(db, "excellent", "[ˈeksələnt]", "отличный", "прилагательные эмоций3");
        insertDict(db, "excited", "[ɪkˈsaɪtɪd]", "возбужденный", "прилагательные эмоций3");
        insertDict(db, "fuming", "[ˈfjuːmɪŋ]", "яростный", "прилагательные эмоций3");
        insertDict(db, "gorgeous", "[ˈɡɔːdʒəs]", "великолепный, прекрасный", "прилагательные эмоций3");
        insertDict(db, "high-spirited", "[haɪ ˈspɪrɪtɪd]", "в хорошем настроении", "прилагательные эмоций3");
        insertDict(db, "horrified", "[ˈhɒrɪfaɪd]", "напуганный", "прилагательные эмоций3");
        insertDict(db, "joyful", "[ˈdʒɔɪfəl]", "радостный", "прилагательные эмоций3");
        insertDict(db, "peevish", "[ˈpiːvɪʃ]", "сварливый", "прилагательные эмоций3");
        insertDict(db, "perfect", "[pəˈfekt]", "совершенный", "прилагательные эмоций3");
        insertDict(db, "sarcastic", "[sɑːˈkæstɪk]", "саркастический, язвительный", "прилагательные эмоций3");
        insertDict(db, "sorrowful", "[ˈsɒrəʊfl̩]", "горестный", "прилагательные эмоций3");
        insertDict(db, "startled", "[ˈstɑːtl̩d]", "пораженный, сильно удивленный", "прилагательные эмоций3");
        insertDict(db, "stunned", "[stʌnd]", "ошеломленый", "прилагательные эмоций3");
        insertDict(db, "unhappy", "[ʌnˈhæpi]", "несчастливый", "прилагательные эмоций3");
        insertDict(db, "woozy", "[ˈwuːzi]", "одурманенный", "прилагательные эмоций3");
        insertDict(db, "accountant", "[ə'kauntənt]", "бухгалтер", "профессии1");
        insertDict(db, "announcer", "[ə'naunsə]", "диктор", "профессии1");
        insertDict(db, "author", "['ɔ:θə]", "писатель, автор", "профессии1");
        insertDict(db, "bodyguard", "['bɒdɪɡɑ:d]", "телохранитель", "профессии1");
        insertDict(db, "businessman", "['bɪznəsmən]", "бизнесмен", "профессии1");
        insertDict(db, "cashier", "[kæ'ʃıə]", "кассир", "профессии1");
        insertDict(db, "coach", "[kəuʧ]", "тренер", "профессии1");
        insertDict(db, "cook", "[kuk]", "повар, кухарка", "профессии1");
        insertDict(db, "dealer", "['di:lə]", "дилер, торговец", "профессии1");
        insertDict(db, "distributor", "[dıs'trıbjutə]", "дистрибьютор", "профессии1");
        insertDict(db, "economist", "[i:'kɔnəmıst]", "экономист", "профессии1");
        insertDict(db, "entrepreneur", "[,ɔntrəprə'nə:]", "предприниматель", "профессии1");
        insertDict(db, "financier", "[faı'nænsıə]", "финансист", "профессии1");
        insertDict(db, "geologist", "[ʤı'ɔləʤıst]", "геолог", "профессии1");
        insertDict(db, "historian", "[hıs'tɔ:rıən]", "историк", "профессии1");
        insertDict(db, "insurance agent", "[ın'ʃuərəns'eıʤənt]", "страховой агент", "профессии1");
        insertDict(db, "judge", "['ʤʌʤ]", "судья", "профессии1");
        insertDict(db, "manager", "['mænıʤə]", "менеджер, директор, заведующий", "профессии1");
        insertDict(db, "metalworker", "['metl,wə:kə]", "слесарь", "профессии1");
        insertDict(db, "notary", "['nəutərı]", "нотариус", "профессии1");
        insertDict(db, "paediatrician", "[̗pi:dɪə'trɪʃn]", "педиатр", "профессии1");
        insertDict(db, "philosopher", "[fı'lɔsəfə]", "философ", "профессии1");
        insertDict(db, "plumber", "['plʌmə]", "водопроводчик, сантехник, паяльщик", "профессии1");
        insertDict(db, "priest", "[pri:st]", "священнослужитель, священник", "профессии1");
        insertDict(db, "prosecutor", "['prɔsıkju:tə]", "прокурор", "профессии1");
        insertDict(db, "receptionist", "[rı'sepʃənıst]", "секретарь в приёмной", "профессии1");
        insertDict(db, "sculptor", "['skʌlrtə]", "скульптор", "профессии1");
        insertDict(db, "soldier", "['səulʤə]", "солдат, военнослужащий", "профессии1");
        insertDict(db, "system administrator", "['sıstıməd'mınıstreıtə]", "системный администратор", "профессии1");
        insertDict(db, "technologist", "[tek'nɔləʤıst]", "технолог", "профессии1");
        insertDict(db, "tutor", "['praıvıt'tju:tə]", "репетитор", "профессии1");
        insertDict(db, "warder", "['wɔ:də]", "тюремщик, сторож", "профессии1");
        insertDict(db, "actor", "['æktə]", "актер", "профессии2");
        insertDict(db, "architect", "['ɑ:kıtekt]", "архитектор", "профессии2");
        insertDict(db, "baker", "['beıkə]", "пекарь, булочник", "профессии2");
        insertDict(db, "botanist", "['bɔtənıst]", "ботаник", "профессии2");
        insertDict(db, "butcher", "['buʧə]", "мясник", "профессии2");
        insertDict(db, "chef", "[ʃef]", "шеф-повар, главный повар", "профессии2");
        insertDict(db, "composer", "[kəm'pəuzə]", "композитор", "профессии2");
        insertDict(db, "cosmetologist", "[,kɔzmı'tɔləʤıst]", "косметолог", "профессии2");
        insertDict(db, "dentist", "['dentıst]", "дантист", "профессии2");
        insertDict(db, "doctor", "['dɔktə]", "доктор, врач", "профессии2");
        insertDict(db, "editor", "['edıtə]", "редактор", "профессии2");
        insertDict(db, "erector", "[ı'rektə]", "монтажник", "профессии2");
        insertDict(db, "fisherman", "['fıʃəmən]", "рыбак", "профессии2");
        insertDict(db, "guard", "[gɑ:d]", "охранник, сторож", "профессии2");
        insertDict(db, "housewife", "['hauswaıf]", "домохозяйка", "профессии2");
        insertDict(db, "interpreter", "[ın'tə:prıtə]", "переводчик", "профессии2");
        insertDict(db, "lawyer", "['lɔ:jə]", "юрист, адвокат", "профессии2");
        insertDict(db, "masseur", "[mæ'sə:]", "массажист", "профессии2");
        insertDict(db, "miner", "['maınə]", "шахтёр, горнорабочий", "профессии2");
        insertDict(db, "nurse", "[nə:s]", "медсестра, няня", "профессии2");
        insertDict(db, "painter", "['peıntə]", "художник, маляр", "профессии2");
        insertDict(db, "photographer", "[fə'tɔgrəfə]", "фотограф", "профессии2");
        insertDict(db, "poet", "['pəuıt]", "поэт", "профессии2");
        insertDict(db, "producer", "[prə'dju:sə]", "продюсер, производитель", "профессии2");
        insertDict(db, "psychiatrist", "[saı'kaıətrıst]", "психиатр", "профессии2");
        insertDict(db, "repairer", "[rı'pɜərə]", "ремонтник", "профессии2");
        insertDict(db, "seamstress", "['sımstrıs]", "швея", "профессии2");
        insertDict(db, "specialist", "['speʃəlıst]", "специалист", "профессии2");
        insertDict(db, "tailor", "['teılə]", "портной", "профессии2");
        insertDict(db, "therapeutist", "[,θerə'pju:tıst]", "терапевт", "профессии2");
        insertDict(db, "veterinarian", "[,vetərı'nɜərıən]", "ветеринар", "профессии2");
        insertDict(db, "weaver", "['wi:və]", "ткач, ткачиха", "профессии2");
        insertDict(db, "actress", "['æktrıs]", "актриса", "профессии3");
        insertDict(db, "artist", "['ɑ:tıst]", "художник, артист", "профессии3");
        insertDict(db, "banker", "['bæŋkə]", "банкир", "профессии3");
        insertDict(db, "bricklayer", "['brık,leıə]", "каменщик", "профессии3");
        insertDict(db, "cameraman", "['kæmrəmæn]", "кинооператор", "профессии3");
        insertDict(db, "chemist", "['kemıst]", "химик", "профессии3");
        insertDict(db, "conductor", "[kən'dʌktə]", "дирижер", "профессии3");
        insertDict(db, "dermatologist", "[,də:mə'tɔləʤıst]", "дерматолог", "профессии3");
        insertDict(db, "dog expert", "[dɔg'ekspə:t]", "кинолог", "профессии3");
        insertDict(db, "electrician", "[ılek'trıʃən]", "электрик", "профессии3");
        insertDict(db, "expert", "['ekspə:t]", "специалист, эксперт", "профессии3");
        insertDict(db, "fishmonger", "[fıʃ,mʌŋgə]", "торговец рыбой", "профессии3");
        insertDict(db, "guide", "[gaıd]", "гид, экскурсовод", "профессии3");
        insertDict(db, "hunter", "['hʌntə]", "охотник", "профессии3");
        insertDict(db, "jeweller", "['ʤu:ələ]", "ювелир", "профессии3");
        insertDict(db, "lecturer", "['lekʧərə]", "лектор, докладчик", "профессии3");
        insertDict(db, "mathematician", "[,mæθımə'tıʃən]", "математик", "профессии3");
        insertDict(db, "model", "['mɔdl]", "модель, манекенщица", "профессии3");
        insertDict(db, "obstetrician", "[,ɔbste'trıʃən]", "акушер", "профессии3");
        insertDict(db, "personal assistant", "['pə:snlə'sıstənt]", "личный секретарь", "профессии3");
        insertDict(db, "physicist", "['fızısıst]", "физик", "профессии3");
        insertDict(db, "policeman", "[pə'li:smən]", "полицейский", "профессии3");
        insertDict(db, "professor", "[prə'fesə]", "профессор", "профессии3");
        insertDict(db, "psychologist", "[saı'kɔləʤıst]", "психолог", "профессии3");
        insertDict(db, "sailor", "['seılə]", "моряк", "профессии3");
        insertDict(db, "secretary", "['sekrətrı]", "секретарь", "профессии3");
        insertDict(db, "sportsman", "['spɔ:tsmən]", "спортсмен", "профессии3");
        insertDict(db, "tax officer", "[tæks'ɔfısə]", "налоговый инспектор", "профессии3");
        insertDict(db, "trainer", "['treınə]", "тренер, инструктор", "профессии3");
        insertDict(db, "visagiste", "['vɪzɪdʒɪst]", "визажист", "профессии3");
        insertDict(db, "welder", "['weldə]", "сварщик", "профессии3");
        insertDict(db, "cosmonaut", "['speısmæn]", "космонавт", "профессии3, космос");
        insertDict(db, "agronomist", "[əg'rɔnəmıst]", "агроном", "профессии4");
        insertDict(db, "assistant", "[ə'sıstənt]", "помощник", "профессии4");
        insertDict(db, "barman", "['bɑ:mən]", "бармен", "профессии4");
        insertDict(db, "broker", "['brəukə]", "брокер, маклер, комиссионер", "профессии4");
        insertDict(db, "cardiologist", "[kɑːdɪˈɒlədʒɪst]", "кардиолог", "профессии4");
        insertDict(db, "choreographer", "[,kɔrı'ɔgrəfə]", "хореограф, балетмейстер", "профессии4");
        insertDict(db, "confectioner", "[kən'fekʃnə]", "кондитер", "профессии4");
        insertDict(db, "courier", "['kurıə]", "курьер", "профессии4");
        insertDict(db, "designer", "[dı'zaınə]", "дизайнер, конструктор, проектировщик", "профессии4");
        insertDict(db, "endocrinologist", "[̗endəʋkrɪ'nɒlədʒɪst]", "эндокринолог", "профессии4");
        insertDict(db, "farmer", "['fɑ:mə]", "фермер", "профессии4");
        insertDict(db, "foreman", "['fɔ:mən]", "мастер, бригадир", "профессии4");
        insertDict(db, "gynaecologist", "[,gaını'kɔləʤıst]", "гинеколог", "профессии4");
        insertDict(db, "image maker", "['ımıʤ'meıkə]", "имиджмейкер", "профессии4");
        insertDict(db, "joiner", "['ʤɔınə]", "столяр", "профессии4");
        insertDict(db, "librarian", "[laı'brɜərıən]", "библиотекарь", "профессии4");
        insertDict(db, "mechanic", "[mı'kænık]", "механик", "профессии4");
        insertDict(db, "musician", "[mju:'zıʃən]", "музыкант", "профессии4");
        insertDict(db, "oculist", "['ɔkjulıst]", "окулист", "профессии4");
        insertDict(db, "pharmaceutist", "[,fɑ:mə'sju:tıst]", "фармацевт", "профессии4");
        insertDict(db, "pilot", "['paılət]", "пилот, летчик, лоцман", "профессии4");
        insertDict(db, "politician", "[,pɔlı'tıʃən]", "политик", "профессии4");
        insertDict(db, "programmer", "['prəυɡræmə]", "программист", "профессии4");
        insertDict(db, "railroader", "['reılrəudə]", "железнодорожник", "профессии4");
        insertDict(db, "salesman", "['seılzmən]", "продавец", "профессии4");
        insertDict(db, "singer", "['sıŋə]", "певец", "профессии4");
        insertDict(db, "stomatologist", "[stʌməˈtɒləʤɪst]", "стоматолог", "профессии4");
        insertDict(db, "taxi driver", "['tæksı'draıvə]", "таксист", "профессии4");
        insertDict(db, "travel agent", "['trævl'eıʤənt]", "агент бюро путешествий", "профессии4");
        insertDict(db, "waiter", "['weıtə]", "официант", "профессии4");
        insertDict(db, "yardman", "['jɑ:dmən]", "дворник, рабочий депо или парка", "профессии4");
        insertDict(db, "airhostess", "['eə̗həυstɪs]", "стюардесса", "профессии5");
        insertDict(db, "auditor", "['ɔ:dıtə]", "аудитор", "профессии5");
        insertDict(db, "biologist", "[baı'ɔləʤıst]", "биолог", "профессии5");
        insertDict(db, "builder", "['bıldə]", "строитель", "профессии5");
        insertDict(db, "carpenter", "['kɑ:pıntə]", "плотник", "профессии5");
        insertDict(db, "cleaner", "['kli:nə]", "уборщик", "профессии5");
        insertDict(db, "consultant", "[kən'sʌltənt]", "консультант", "профессии5");
        insertDict(db, "crane operator", "[kreın'ɔpəreıtə]", "крановщик", "профессии5");
        insertDict(db, "director", "[dı'rektə]", "директор", "профессии5");
        insertDict(db, "ecologist", "[ɪ'kɒlədʒɪst]", "эколог", "профессии5");
        insertDict(db, "engineer", "[,enʤı'nıə]", "инженер, механик, машинист", "профессии5");
        insertDict(db, "film director", "[fɪlmdı'rektə]", "кинорежиссёр", "профессии5");
        insertDict(db, "gardener", "['gɑ:dnə]", "садовник", "профессии5");
        insertDict(db, "hairdresser", "['hɜə,dresə]", "парикмахер", "профессии5");
        insertDict(db, "inspector", "[ın'spektə]", "инспектор, ревизор", "профессии5");
        insertDict(db, "journalist", "['ʤə:nəlıst]", "журналист", "профессии5");
        insertDict(db, "loader", "['ləudə]", "грузчик", "профессии5");
        insertDict(db, "metallurgist", "[me'tæləʤıst]", "металлург", "профессии5");
        insertDict(db, "neurologist", "[njυ'rɒlədʒɪst]", "невропатолог", "профессии5");
        insertDict(db, "oncologist", "[̗ɒŋkə'lɒdʒɪst]", "онколог", "профессии5");
        insertDict(db, "philologist", "[fı'lɔləʤıst]", "филолог", "профессии5");
        insertDict(db, "plasterer", "['plɑ:stərə]", "штукатур", "профессии5");
        insertDict(db, "postman", "['pəustmən]", "почтальон", "профессии5");
        insertDict(db, "promoter", "[prə'məutə]", "промоутер", "профессии5");
        insertDict(db, "realtor", "['rıəltə]", "риелтор", "профессии5");
        insertDict(db, "scientist", "['saıəntıst]", "ученый", "профессии5");
        insertDict(db, "smith", "[smıθ]", "кузнец, рабочий по металлу", "профессии5");
        insertDict(db, "surgeon", "['sə:ʤən]", "хирург", "профессии5");
        insertDict(db, "turner", "['tə:nə]", "токарь", "профессии5");
        insertDict(db, "waitress", "['weıtrıs]", "официантка", "профессии5");
        insertDict(db, "behave", "[bɪˈheɪv]", "вести себя", "прочее1");
        insertDict(db, "boy", "[bɔɪ]", "мальчик", "прочее1");
        insertDict(db, "can", "[kæn]", "уметь, умею", "прочее1");
        insertDict(db, "cry", "[kraɪ]", "плакать", "прочее1");
        insertDict(db, "dance", "[dɑːns]", "танцевать", "прочее1");
        insertDict(db, "doll", "[dɔl]", "кукла", "прочее1");
        insertDict(db, "downstairs", "[ˈdaʊnˈstɛəz]", "внизу", "прочее1");
        insertDict(db, "friend", "[frend]", "друг", "прочее1");
        insertDict(db, "girl", "[gɜːl]", "девочка", "прочее1");
        insertDict(db, "go", "[gəʊ]", "ходить", "прочее1");
        insertDict(db, "hug", "[hʌg]", "обнять", "прочее1");
        insertDict(db, "left", "[left]", "левый", "прочее1");
        insertDict(db, "look", "[lʊk]", "смотреть", "прочее1");
        insertDict(db, "next to", "[nekst tuː]", "рядом", "прочее1");
        insertDict(db, "phone", "[fəʊn]", "телефон", "прочее1");
        insertDict(db, "really", "[ˈrɪəlɪ]", "действительно", "прочее1");
        insertDict(db, "right", "[raɪt]", "правый", "прочее1");
        insertDict(db, "scared", "[skɛəd]", "испуганный, бояться", "прочее1");
        insertDict(db, "stamp", "[stæmp]", "топать", "прочее1");
        insertDict(db, "together", "[təˈgeðə]", "вместе", "прочее1");
        insertDict(db, "touch", "[tʌʧ]", "трогать", "прочее1");
        insertDict(db, "tree", "[triː]", "дерево", "прочее1");
        insertDict(db, "upstairs", "[ˈʌpˈstɛəz]", "наверху", "прочее1");
        insertDict(db, "want", "[wɔnt]", "хотеть", "прочее1");
        insertDict(db, "accuse", "[əˈkjuːz]", "обвинять", "прочее11");
        insertDict(db, "altogether", "[ɔːltəˈgeðə]", "всего, совокупность", "прочее11");
        insertDict(db, "assign", "[əˈsaɪn]", "присвоить, назначить", "прочее11");
        insertDict(db, "blind", "[blaɪnd]", "слепой", "прочее11");
        insertDict(db, "claim", "[kleɪm]", "претензия, требование, утверждать", "прочее11");
        insertDict(db, "conduct", "[ˈkɔndʌkt]", "проводить, осуществлять, поведение", "прочее11");
        insertDict(db, "conversely", "[ˈkɔnvɜːslɪ]", "наоборот", "прочее11");
        insertDict(db, "delinquent", "[dɪˈlɪŋkwənt]", "правонарушение", "прочее11");
        insertDict(db, "disclose", "[dɪsˈkləʊz]", "раскрывать", "прочее11");
        insertDict(db, "due to", "[dju: tuː]", "благодаря, вследствие", "прочее11");
        insertDict(db, "evidence", "[ˈevɪdəns]", "доказательство", "прочее11");
        insertDict(db, "facilitate", "[fəˈsɪlɪteɪt]", "способствовать, содействие", "прочее11");
        insertDict(db, "freight", "[freɪt]", "груз, грузовой", "прочее11");
        insertDict(db, "governance", "[ˈɡʌvənəns]", "управление", "прочее11");
        insertDict(db, "incentive", "[ɪnˈsentɪv]", "стимул", "прочее11");
        insertDict(db, "interconnect", "[ˈɪntəkəˈnekt]", "взаимодействовать", "прочее11");
        insertDict(db, "lessee", "[leˈsi:]", "арендатор", "прочее11");
        insertDict(db, "mentally", "[ˈmentəlɪ]", "мысленно, умственный", "прочее11");
        insertDict(db, "objective", "[əbˈdʒektɪv]", "цель", "прочее11");
        insertDict(db, "pace", "[peɪs]", "шагать, шаг, темп", "прочее11");
        insertDict(db, "range", "[reɪnʤ]", "диапазон, варьироваться", "прочее11");
        insertDict(db, "rehearse", "[rɪˈhɜːs]", "репетировать", "прочее11");
        insertDict(db, "resurrect", "[rezəˈrekt]", "воскресить, возрождать", "прочее11");
        insertDict(db, "scatter", "[ˈskætə]", "разбросать,разброс", "прочее11");
        insertDict(db, "society", "[səˈsaɪətɪ]", "общество", "прочее11");
        insertDict(db, "subsidiary", "[səbˈsɪdjərɪ]", "дочерний, вспомогательный", "прочее11");
        insertDict(db, "transition", "[trænˈsɪʒən]", "переход", "прочее11");
        insertDict(db, "vague", "[veɪg]", "неопределенный", "прочее11");
        insertDict(db, "amateur", "[ˈæmətə:]", "любительский, любитель", "прочее12");
        insertDict(db, "blow", "[bləʊ]", "удар, дуть", "прочее12");
        insertDict(db, "clutter", "['klʌtə]", "беспорядок, засорять", "прочее12");
        insertDict(db, "confine", "[kənˈfaɪn]", "ограничивать", "прочее12");
        insertDict(db, "conversion", "[kənˈvɜːʃn]", "преобразование", "прочее12");
        insertDict(db, "deliverables", "[dɪˈlɪvərəblz]", "результаты", "прочее12");
        insertDict(db, "disgrace", "[dɪsˈgreɪs]", "позор", "прочее12");
        insertDict(db, "duty", "[ˈdju:tɪ]", "обязанность, пошлина", "прочее12");
        insertDict(db, "examine", "[ɪɡˈzæmɪn]", "изучить, рассмотреть", "прочее12");
        insertDict(db, "fair", "[fɛə]", "справедливый", "прочее12");
        insertDict(db, "filthy", "[ˈfɪlθɪ]", "грязный, отвратительный", "прочее12");
        insertDict(db, "frustrate", "[frʌsˈtreɪt]", "расстраивать, разочарование", "прочее12");
        insertDict(db, "gravity", "['grævɪtɪ]", "притяжение, тяжесть, серьезность", "прочее12");
        insertDict(db, "inedible", "[ɪnˈedɪbl]", "несъедобный", "прочее12");
        insertDict(db, "interim", "[ˈɪntərɪm]", "промежуточный", "прочее12");
        insertDict(db, "lien", "[lɪən]", "залог", "прочее12");
        insertDict(db, "mitigation", "[mɪtɪˈgeɪʃn]", "смягчение, ослабление", "прочее12");
        insertDict(db, "occupancy", "[ˈɔkjʊpənsɪ]", "заселенность, размещение", "прочее12");
        insertDict(db, "patient", "[ˈpeɪʃənt]", "пациент, терпеливый", "прочее12");
        insertDict(db, "prior", "[ˈpraɪə]", "предшествующий", "прочее12");
        insertDict(db, "reject", "['riːʤekt]", "отклонять", "прочее12");
        insertDict(db, "retention", "[rɪˈtenʃn]", "сохранение, удержание", "прочее12");
        insertDict(db, "span", "[spæn]", "промежуток", "прочее12");
        insertDict(db, "thief", "[θiːf]", "вор", "прочее12");
        insertDict(db, "treasure", "['treʒə]", "сокровище, дорожить", "прочее12");
        insertDict(db, "verbose", "[vɜːˈbəʊs]", "многословный", "прочее12");
        insertDict(db, "acquaintance", "[əˈkweɪntəns]", "знакомый, знакомство", "прочее13");
        insertDict(db, "amazed", "[əˈmeɪzd]", "пораженный, изумленный", "прочее13");
        insertDict(db, "assumption", "[əˈsʌmpʃn]", "предположение", "прочее13");
        insertDict(db, "bootstrap", "[ˈbuːtstræp]", "загрузка", "прочее13");
        insertDict(db, "colloquial", "[kəˈləʊkwɪəl]", "разговорный", "прочее13");
        insertDict(db, "conform", "[kənˈfɔːm]", "соответствовать, удовлетворять", "прочее13");
        insertDict(db, "convince", "[kənˈvɪns]", "убеждать", "прочее13");
        insertDict(db, "demand", "[dɪˈmɑːnd]", "требовать, спрос", "прочее13");
        insertDict(db, "disposal", "[dɪsˈpəʊzəl]", "утилизация, удаление", "прочее13");
        insertDict(db, "elderly", "[ˈeldəlɪ]", "пожилой", "прочее13");
        insertDict(db, "exceed", "[ɪkˈsiːd]", "превышать", "прочее13");
        insertDict(db, "fairly", "[ˈfɛəlɪ]", "довольно, достаточно", "прочее13");
        insertDict(db, "fulfill", "[fʊl'fɪl]", "выполнять, исполнять", "прочее13");
        insertDict(db, "greet", "[griːt]", "приветствовать", "прочее13");
        insertDict(db, "inferred", "[ɪnˈfɜːd]", "предполагаемый", "прочее13");
        insertDict(db, "interrelation", "[ˈɪntərɪˈleɪʃn]", "взаимосвязь", "прочее13");
        insertDict(db, "likelihood", "[ˈlaɪklɪhʊd]", "вероятность", "прочее13");
        insertDict(db, "moody", "[ˈmuːdɪ]", "капризный", "прочее13");
        insertDict(db, "offend", "[əˈfend]", "обидеть, оскорблять", "прочее13");
        insertDict(db, "payout", "[ˈpeɪˈaʊt]", "выплата, выигрыш", "прочее13");
        insertDict(db, "proceed", "[prəˈsiːd]", "продолжаться, переходить", "прочее13");
        insertDict(db, "rationale", "[ˌræʃəˈnɑ:l]", "объяснение", "прочее13");
        insertDict(db, "relevant", "[ˈrelɪvənt]", "соотв-щий, актуальный", "прочее13");
        insertDict(db, "reveal", "[rɪˈvi:l]", "показывать, раскрывать", "прочее13");
        insertDict(db, "suffocate", "[ˈsʌfəkeɪt]", "душить", "прочее13");
        insertDict(db, "treat", "[triːt]", "рассматривать, обработать", "прочее13");
        insertDict(db, "addict", "[ˈædɪkt]", "наркоман, зависимость", "прочее14");
        insertDict(db, "annex", "['æneks]", "приложение", "прочее14");
        insertDict(db, "attitude", "[ˈætɪtjuːd]", "отношение (к чему-либо)", "прочее14");
        insertDict(db, "bow", "[baʊ]", "поклон, поклониться", "прочее14");
        insertDict(db, "commitment", "[kəˈmɪtmənt]", "обязательство, приверженность", "прочее14");
        insertDict(db, "denote", "[dɪˈnəʊt]", "обозначать, означать", "прочее14");
        insertDict(db, "distinction", "[dɪsˈtɪŋkʃən]", "различие", "прочее14");
        insertDict(db, "eligibility", "[elɪʤəˈbɪlɪtɪ]", "право, приемлемость", "прочее14");
        insertDict(db, "exciting", "[ɪkˈsaɪtɪŋ]", "захватывающий", "прочее14");
        insertDict(db, "fake", "[feɪk]", "поддельный, фальшивка", "прочее14");
        insertDict(db, "fit", "[fɪt]", "соответствовать, подходить", "прочее14");
        insertDict(db, "furious", "[ˈfjʊərɪəs]", "разъяренный", "прочее14");
        insertDict(db, "guidance", "[ˈgaɪdəns]", "инструкция, руководство", "прочее14");
        insertDict(db, "inflate", "[ɪn'fleɪt]", "надувать, раздувать", "прочее14");
        insertDict(db, "investigate", "[ɪnˈvestɪgeɪt]", "исследовать, изучать", "прочее14");
        insertDict(db, "linear", "[ˈlɪnɪə]", "линейный", "прочее14");
        insertDict(db, "moreover", "[mɔ:ˈrəuvə]", "более того", "прочее14");
        insertDict(db, "omit", "[ə'mɪt]", "опускать, пропускать", "прочее14");
        insertDict(db, "peculiar", "[pɪˈkjuːljə]", "специфический, своеобразный", "прочее14");
        insertDict(db, "prodigy", "['prɔdɪʤɪ]", "вундеркинд, гений", "прочее14");
        insertDict(db, "rebellious", "[rɪˈbeljəs]", "непослушный, бунтарь", "прочее14");
        insertDict(db, "ridicule", "[ˈrɪdɪkjuːl]", "высмеивать, насмешка", "прочее14");
        insertDict(db, "sequence", "[ˈsiːkwəns]", "последовательность", "прочее14");
        insertDict(db, "spotless", "['spɔtlɪs]", "безупречный, безупречно", "прочее14");
        insertDict(db, "threshold", "[ˈθreʃhəʊld]", "порог", "прочее14");
        insertDict(db, "treatment", "[ˈtriːtmənt]", "обработка, трактовка", "прочее14");
        insertDict(db, "vital", "[vaɪtl]", "жизненно важный", "прочее14");
        insertDict(db, "additive", "[ˈædɪtɪv]", "добавка, примесь", "прочее15");
        insertDict(db, "anniversary", "[ænɪˈvɜːsərɪ]", "годовщина, юбилей", "прочее15");
        insertDict(db, "auxiliary", "[ɔːgˈzɪljərɪ]", "вспомогательный", "прочее15");
        insertDict(db, "comparative", "[kəmˈpærətɪv]", "сравнительный", "прочее15");
        insertDict(db, "conscious", "[ˈkɔnʃəs]", "сознательный, сознание", "прочее15");
        insertDict(db, "curse", "[kɜːs]", "материться, ругательство", "прочее15");
        insertDict(db, "distinguish", "[dɪsˈtɪŋgwɪʃ]", "отличать, различать", "прочее15");
        insertDict(db, "emphasis", "[ˈemfəsɪs]", "акцент, внимание, упор", "прочее15");
        insertDict(db, "exclamation", "[ekskləˈmeɪʃn]", "восклицание, восклицательный", "прочее15");
        insertDict(db, "famine", "[ˈfæmɪn]", "голод", "прочее15");
        insertDict(db, "fluctuate", "['flʌktjueɪt]", "колебаться", "прочее15");
        insertDict(db, "further", "[ˈfə:ðə]", "дальнейший", "прочее15");
        insertDict(db, "halt", "[hɔːlt]", "останавливаться, остановка", "прочее15");
        insertDict(db, "initialize", "[ɪˈnɪʃəlaɪz]", "инициировать, инициализация", "прочее15");
        insertDict(db, "irritate", "[ˈɪrɪteɪt]", "раздражать, нервировать", "прочее15");
        insertDict(db, "literally", "[ˈlɪtərəlɪ]", "буквально", "прочее15");
        insertDict(db, "mutually", "[ˈmjuːtjʊəlɪ]", "взаимно", "прочее15");
        insertDict(db, "oppose", "[ə'pəuz]", "выступать, возражать", "прочее15");
        insertDict(db, "pedestrian", "[pɪˈdestrɪən]", "пешеход", "прочее15");
        insertDict(db, "projection", "[prəˈʤekʃn]", "проекция, прогноз", "прочее15");
        insertDict(db, "recognition", "[rekəg'nɪʃn]", "признание, осознание", "прочее15");
        insertDict(db, "relief", "[rɪˈliːf]", "облегчение, помощь, рельеф", "прочее15");
        insertDict(db, "ridiculous", "[rɪˈdɪkjʊləs]", "смешной, нелепый", "прочее15");
        insertDict(db, "severity", "[sɪˈverɪtɪ]", "тяжесть, серьезность", "прочее15");
        insertDict(db, "spree", "[spriː]", "кутеж, загул, кутить", "прочее15");
        insertDict(db, "supervisory", "[sjuːpəˈvaɪzərɪ]", "надзорный", "прочее15");
        insertDict(db, "thus", "[ðʌs]", "таким образом", "прочее15");
        insertDict(db, "tuck", "[tʌk]", "спрятать, засунуть", "прочее15");
        insertDict(db, "vowel", "[ˈvaʊəl]", "гласный", "прочее15");
        insertDict(db, "admire", "[ədˈmaɪə]", "восхищаться", "прочее16");
        insertDict(db, "annoy", "[əˈnɔɪ]", "раздражать, надоедать", "прочее16");
        insertDict(db, "aware", "[əˈwɛə]", "знать, известный", "прочее16");
        insertDict(db, "capture", "[ˈkæpʧə]", "захват, захватить", "прочее16");
        insertDict(db, "compile", "[kəmˈpaɪl]", "собирать", "прочее16");
        insertDict(db, "consequence", "[ˈkɔnsɪkwəns]", "последствие", "прочее16");
        insertDict(db, "damp", "[dæmp]", "влажный, влага", "прочее16");
        insertDict(db, "derive", "[dɪˈraɪv]", "получать", "прочее16");
        insertDict(db, "distraction", "[dɪsˈtrækʃn]", "отвлечение внимания, рассеянность", "прочее16");
        insertDict(db, "encompass", "[ɪn'kʌmpəs]", "охватывать, включать", "прочее16");
        insertDict(db, "exhaust", "[ɪgˈzɔːst]", "истощать, вымотать", "прочее16");
        insertDict(db, "fare", "[fɛə]", "тариф, билет, плата за проезд", "прочее16");
        insertDict(db, "fond", "[fɔnd]", "любить, любящий, фонд", "прочее16");
        insertDict(db, "furthermore", "[ˈfɜːðəˈmɔː]", "кроме того", "прочее16");
        insertDict(db, "hamper", "[ˈhæmpə]", "препятствовать, мешать", "прочее16");
        insertDict(db, "injure", "[ˈɪnʤə]", "ранить, повредить", "прочее16");
        insertDict(db, "issue", "[ˈɪʃu:]", "выдавать, проблема", "прочее16");
        insertDict(db, "nature", "[ˈneɪʧə]", "сущность, природа", "прочее16");
        insertDict(db, "outgoing", "[aʊtˈgəʊɪŋ]", "отзывчивый, исходящий", "прочее16");
        insertDict(db, "percieve", "[pəˈsiːv]", "воспринимать", "прочее16");
        insertDict(db, "recognize", "['rekəgnaɪz]", "признать, осознать, узнать", "прочее16");
        insertDict(db, "relieve", "[rɪˈliːv]", "облегчать, освобождать, уменьшать", "прочее16");
        insertDict(db, "rivalry", "[ˈraɪvəlrɪ]", "соперничество, конкуренция", "прочее16");
        insertDict(db, "shelter", "[ˈʃeltə]", "убежище, укрывать", "прочее16");
        insertDict(db, "supply", "[səˈplaɪ]", "поставка, запас", "прочее16");
        insertDict(db, "tidy", "[ˈtaɪdɪ]", "аккуратный, опрятный", "прочее16");
        insertDict(db, "vulnerable", "[ˈvʌlnərəbl]", "уязвимый", "прочее16");
        insertDict(db, "admit", "[əd'mɪt]", "признавать", "прочее17");
        insertDict(db, "ban", "[bæn]", "запрет, запрещать", "прочее17");
        insertDict(db, "carriage", "[ˈkærɪʤ]", "вагон", "прочее17");
        insertDict(db, "complain", "[kəmˈpleɪn]", "жаловаться", "прочее17");
        insertDict(db, "consistency", "[kənˈsɪstənsɪ]", "послед-ть, постоянство", "прочее17");
        insertDict(db, "disturb", "[dɪsˈtɜːb]", "беспокоить, тревожить", "прочее17");
        insertDict(db, "encourage", "[ɪnˈkʌrɪʤ]", "поощрять, поощрение", "прочее17");
        insertDict(db, "expectation", "[ekspek'teɪʃən]", "ожидание, предположение", "прочее17");
        insertDict(db, "fascinate", "['fæsɪneɪt]", "очаровать, восхищать", "прочее17");
        insertDict(db, "forbidden", "[fə'bɪdn]", "запрещенный, запрещать", "прочее17");
        insertDict(db, "generalise", "[ˈʤenrəlaɪz]", "обобщать", "прочее17");
        insertDict(db, "hectic", "[ˈhektɪk]", "беспокойный", "прочее17");
        insertDict(db, "innocent", "[ˈɪnəsənt]", "невиновный", "прочее17");
        insertDict(db, "jealous", "[ˈʤeləs]", "ревнивый, ревновать", "прочее17");
        insertDict(db, "necessitate", "[nɪˈsesɪteɪt]", "требовать", "прочее17");
        insertDict(db, "outlier", "[ˈautˌlaɪə]", "выброс", "прочее17");
        insertDict(db, "pledger", "[ˈpleʤər]", "залогодатель", "прочее17");
        insertDict(db, "proper", "[ˈprɔpə]", "надлежащий", "прочее17");
        insertDict(db, "reconcile", "[ˈrekənsaɪl]", "примирить, согласовать", "прочее17");
        insertDict(db, "remain", "[rɪˈmeɪn]", "остаться", "прочее17");
        insertDict(db, "shortfall", "[ˈʃɔːtfɔːl]", "дефицит, нехватка", "прочее17");
        insertDict(db, "stage", "[steɪʤ]", "этап", "прочее17");
        insertDict(db, "survive", "[səˈvaɪv]", "выжить", "прочее17");
        insertDict(db, "turnover", "[ˈtɜːnəʊvə]", "оборот", "прочее17");
        insertDict(db, "weapon", "[ˈwepən]", "оружие", "прочее17");
        insertDict(db, "admittedly", "[əd'mɪtɪdlɪ]", "правда, разумеется", "прочее18");
        insertDict(db, "anxious", "[ˈæŋkʃəs]", "тревожный, беспокоиться", "прочее18");
        insertDict(db, "band", "[bænd]", "диапазон", "прочее18");
        insertDict(db, "compliance", "[kəmˈplaɪəns]", "соответствие", "прочее18");
        insertDict(db, "consonant", "[ˈkɔnsənənt]", "согласный (звук)", "прочее18");
        insertDict(db, "decline", "[dɪˈklaɪn]", "снижение, спад", "прочее18");
        insertDict(db, "donate", "[dəʊˈneɪt]", "пожертвовать, подарить", "прочее18");
        insertDict(db, "enforcement", "[ɪnˈfɔːsmənt]", "правоприменение, принуждение", "прочее18");
        insertDict(db, "expel", "[ɪksˈpel]", "выгнать, удалить", "прочее18");
        insertDict(db, "fate", "[feɪt]", "судьба", "прочее18");
        insertDict(db, "force", "[fɔːs]", "принуждать, сила", "прочее18");
        insertDict(db, "generous", "[ˈʤenərəs]", "щедрый", "прочее18");
        insertDict(db, "helmet", "[ˈhelmɪt]", "шлем", "прочее18");
        insertDict(db, "insist", "[ɪnˈsɪst]", "настаивать", "прочее18");
        insertDict(db, "jog", "[ʤɔg]", "пробежка, бег", "прочее18");
        insertDict(db, "maintenance", "[ˈmeɪntənəns]", "обслуживание, сопровождение", "прочее18");
        insertDict(db, "neutral", "[ˈnjuːtrəl]", "нейтральный, нулевой, ничейный", "прочее18");
        insertDict(db, "outlined", "[ˈaʊtlaɪnd]", "изложенный", "прочее18");
        insertDict(db, "plenty", "[ˈplentɪ]", "много, множество", "прочее18");
        insertDict(db, "prospect", "[ˈprɔspekt]", "перспектива", "прочее18");
        insertDict(db, "reconciliation", "[rekənsɪlɪˈeɪʃən]", "согласование, выверка", "прочее18");
        insertDict(db, "renovation", "[renəʊˈveɪʃn]", "реконструкция", "прочее18");
        insertDict(db, "shout", "[ʃaʊt]", "кричать, крик", "прочее18");
        insertDict(db, "starch", "[stɑːʧ]", "крахмал", "прочее18");
        insertDict(db, "suspect", "[ˈsʌspekt]", "подозревать, предполагать", "прочее18");
        insertDict(db, "tiny", "[ˈtaɪnɪ]", "крошечный", "прочее18");
        insertDict(db, "uncertainty", "[ʌnˈsɜːtntɪ]", "неопределенность", "прочее18");
        insertDict(db, "whereas", "[wɛərˈæz]", "тогда как", "прочее18");
        insertDict(db, "adopt", "[əˈdɔpt]", "принимать, одобрить", "прочее19");
        insertDict(db, "apologize", "[əˈpɔləʤaɪz]", "извиняться", "прочее19");
        insertDict(db, "barely", "[ˈbɛəlɪ]", "едва, с трудом", "прочее19");
        insertDict(db, "cause сontroversy", "[kɔːz 'kɔntrəvɜːsɪ]", "причина разногласий", "прочее19");
        insertDict(db, "compliant", "[kəmˈplaɪənt]", "совместимый", "прочее19");
        insertDict(db, "constitute", "[ˈkɔnstɪtjuːt]", "составлять, являться", "прочее19");
        insertDict(db, "dedicate", "[ˈdedɪkeɪt]", "посвящать, предназначать", "прочее19");
        insertDict(db, "dossier", "[ˈdɔsɪeɪ]", "досье", "прочее19");
        insertDict(db, "enlarge", "[ɪn'lɑ:dʒ]", "увеличивать, расширять", "прочее19");
        insertDict(db, "expiration", "[ekspaɪəˈreɪʃn]", "окончание, срок", "прочее19");
        insertDict(db, "favour", "[ˈfeɪvə]", "польза, благоприятствовать", "прочее19");
        insertDict(db, "forecast", "['fɔːkɑːst]", "прогноз", "прочее19");
        insertDict(db, "gesture", "[ˈʤesʧə]", "жест", "прочее19");
        insertDict(db, "hence", "[hens]", "следовательно", "прочее19");
        insertDict(db, "inspire", "[ɪnˈspaɪə]", "вдохновлять", "прочее19");
        insertDict(db, "justify", "[ˈdʒʌstɪfaɪ]", "оправдывать, обосновать", "прочее19");
        insertDict(db, "never mind", "[ˈnevə maɪnd]", "не беда, ладно уж", "прочее19");
        insertDict(db, "outlook", "[ˈaʊtlʊk]", "перспектива, прогноз, мировоззрение", "прочее19");
        insertDict(db, "polite", "[pəˈlaɪt]", "вежливый", "прочее19");
        insertDict(db, "reduction", "[rɪˈdʌkʃn]", "снижение, уменьшение", "прочее19");
        insertDict(db, "repair", "[rɪˈpɛə]", "ремонт, ремонтировать", "прочее19");
        insertDict(db, "rot", "[rɔt]", "гниль, гнить", "прочее19");
        insertDict(db, "sincerely", "[sɪnˈsɪəlɪ]", "с уважением", "прочее19");
        insertDict(db, "starving", "[ˈstɑːvɪŋ]", "изголодавшийся, голодать", "прочее19");
        insertDict(db, "suspend", "[səsˈpend]", "приостановить, прекратить", "прочее19");
        insertDict(db, "toggle", "[tɔgl]", "переключатель, переключать", "прочее19");
        insertDict(db, "undergoing", "[ʌndəˈgəʊɪŋ]", "проходящий", "прочее19");
        insertDict(db, "whereby", "[wɛəˈbaɪ]", "посредством чего", "прочее19");
        insertDict(db, "adorable", "[əˈdɔːrəbl]", "очаровательный", "прочее20");
        insertDict(db, "approval", "[əˈpruːvəl]", "утверждение, согласование", "прочее20");
        insertDict(db, "challenge", "[ˈʧælɪnʤ]", "проблема, задача, вызов", "прочее20");
        insertDict(db, "comprehensive", "[ˌkɔmprɪˈhensɪv]", "всесторонний", "прочее20");
        insertDict(db, "contest", "[ˈkɔntest]", "соревнование", "прочее20");
        insertDict(db, "dedicated", "[ˈdedɪkeɪtɪd]", "преданный, увлеченный", "прочее20");
        insertDict(db, "deviation", "[diːvɪˈeɪʃn]", "отклонение", "прочее20");
        insertDict(db, "enormous", "[ɪˈnɔːməs]", "огромный", "прочее20");
        insertDict(db, "expire", "[ɪksˈpaɪə]", "истекать, закончиться", "прочее20");
        insertDict(db, "favourable", "[ˈfeɪvərəbl]", "благоприятный", "прочее20");
        insertDict(db, "foreclose", "[fɔːˈkləʊz]", "взыскание, исключать", "прочее20");
        insertDict(db, "hilarious", "[hɪˈlɛərɪəs]", "уморительный", "прочее20");
        insertDict(db, "instalment", "[ɪnˈstɔːlmənt]", "рассрочка, взнос", "прочее20");
        insertDict(db, "lack", "[læk]", "отсутствие", "прочее20");
        insertDict(db, "maturity", "[məˈtjʊərɪtɪ]", "зрелость, срок", "прочее20");
        insertDict(db, "notice", "[ˈnəʊtɪs]", "заметить, уведомление", "прочее20");
        insertDict(db, "outright", "[ˈaʊtraɪt]", "откровенный, прямой", "прочее20");
        insertDict(db, "possess", "[pəˈzes]", "обладать", "прочее20");
        insertDict(db, "punish", "[ˈpʌnɪʃ]", "наказать, наказание", "прочее20");
        insertDict(db, "resent", "[rɪˈzent]", "возмущаться, обида", "прочее20");
        insertDict(db, "singular", "['sɪŋgjʊlə]", "единственный, особый", "прочее20");
        insertDict(db, "steady", "[ˈstedɪ]", "устойчивый, постоянный", "прочее20");
        insertDict(db, "suspicious", "[səsˈpɪʃəs]", "подозрительный", "прочее20");
        insertDict(db, "tournament", "[ˈtʊənəmənt]", "турнир", "прочее20");
        insertDict(db, "unless", "[ənˈles]", "если, пока", "прочее20");
        insertDict(db, "wherever", "[wɛər'evə]", "(везде, где)", "прочее20");
        insertDict(db, "affectionate", "[əˈfekʃnɪt]", "ласковый, нежный", "прочее21");
        insertDict(db, "arbitrary", "[ˈɑːbɪtrərɪ]", "произвольный", "прочее21");
        insertDict(db, "charity", "[ˈʧærɪtɪ]", "благотворительность", "прочее21");
        insertDict(db, "comprise", "[kəmˈpraɪz]", "включать, состоять", "прочее21");
        insertDict(db, "continuity", "[kɔntɪˈnjuːɪtɪ]", "непрерывность", "прочее21");
        insertDict(db, "delay", "[dɪˈleɪ]", "задержка, отсрочка, просрочка", "прочее21");
        insertDict(db, "downturn", "[ˈdaʊntɜːn]", "спад, кризис", "прочее21");
        insertDict(db, "enrich", "[ɪnˈrɪtʃ]", "обогащать", "прочее21");
        insertDict(db, "explicit", "[ɪks'plɪsɪt]", "явный, четкий", "прочее21");
        insertDict(db, "fed", "[fed]", "накормленный", "прочее21");
        insertDict(db, "foreseeable", "[fɔːˈsiːəbl]", "прогнозируемый", "прочее21");
        insertDict(db, "gift", "[gɪft]", "подарок", "прочее21");
        insertDict(db, "hip", "[hɪp]", "бедро", "прочее21");
        insertDict(db, "landscape", "['lænskeɪp]", "пейзаж", "прочее21");
        insertDict(db, "mean", "[miːn]", "означать, средний, убогий", "прочее21");
        insertDict(db, "outstanding", "[autˈstændɪŋ]", "выдающийся, видный, непогашенный", "прочее21");
        insertDict(db, "postpone", "[peʊstˈpəʊn]", "отложить, отсрочить", "прочее21");
        insertDict(db, "purely", "[ˈpjuəlɪ]", "просто", "прочее21");
        insertDict(db, "refund", "[ˈriːfʌnd]", "возврат, вернуть", "прочее21");
        insertDict(db, "resistance", "[rɪˈzɪstəns]", "устойчивость, сопротивляться", "прочее21");
        insertDict(db, "rude", "[ruːd]", "грубый, невежливый", "прочее21");
        insertDict(db, "skyscraper", "['skaɪskreɪpər]", "небоскреб", "прочее21");
        insertDict(db, "steep", "[stiːp]", "крутой", "прочее21");
        insertDict(db, "tailored", "[ˈteɪləd]", "специально", "прочее21");
        insertDict(db, "traceable", "[ˈtreɪsəbl]", "прослеживаемый", "прочее21");
        insertDict(db, "willingness", "['wɪlɪŋnɪs]", "готовность, желание", "прочее21");
        insertDict(db, "ashamed", "[əˈʃeɪmd]", "стыдиться, стыд", "прочее22");
        insertDict(db, "bias", "[ˈbaɪəs]", "предвзятость", "прочее22");
        insertDict(db, "charming", "[ˈʧɑːmɪŋ]", "очаровательный, восхитительный", "прочее22");
        insertDict(db, "compulsory", "[kəm'pʌlsərɪ]", "обязательный", "прочее22");
        insertDict(db, "contradiction", "[kɔntrə'dɪkʃn]", "противоречие, несоотв-е", "прочее22");
        insertDict(db, "disaster", "[dɪˈzɑːstə]", "бедствие, авария", "прочее22");
        insertDict(db, "drastically", "[ˈdræstɪklɪ]", "существенно", "прочее22");
        insertDict(db, "entirely", "[ɪnˈtaɪəlɪ]", "полностью", "прочее22");
        insertDict(db, "expose", "[eksˈpəuz]", "выставлять на показ", "прочее22");
        insertDict(db, "former", "[ˈfɔːmə]", "бывший", "прочее22");
        insertDict(db, "homesick", "[ˈhəʊmsɪk]", "тосковать по дому", "прочее22");
        insertDict(db, "insult", "['ɪnsʌlt]", "оскорбление, оскорблять", "прочее22");
        insertDict(db, "lease", "[liːs]", "аренда, лизинг", "прочее22");
        insertDict(db, "melt", "[melt]", "таять, расплавиться", "прочее22");
        insertDict(db, "obediently", "[əˈbiːdɪəntlɪ]", "послушно, покорно", "прочее22");
        insertDict(db, "overall", "[ˈəʊvərɔːl]", "общий, целый", "прочее22");
        insertDict(db, "quantify", "[ˈkwɔntɪfaɪ]", "количественный, оценить", "прочее22");
        insertDict(db, "refuse", "[rɪˈfjuːz]", "отказаться", "прочее22");
        insertDict(db, "resolve", "[rɪˈzɔlv]", "решить, разрешить", "прочее22");
        insertDict(db, "slice", "[slaɪs]", "фрагмент, кусок", "прочее22");
        insertDict(db, "stub", "[stʌb]", "заглушка", "прочее22");
        insertDict(db, "track", "[træk]", "отслеживать, дорожка", "прочее22");
        insertDict(db, "align", "[əˈlaɪn]", "выровнять, совместить", "прочее23");
        insertDict(db, "assert", "[ə'sɜːt]", "утверждать, заявлять", "прочее23");
        insertDict(db, "bin", "[bɪn]", "корзина, мусорное ведро", "прочее23");
        insertDict(db, "cheat", "[ʧiːt]", "обманывать", "прочее23");
        insertDict(db, "concerned", "[kənˈsɜːnd]", "связанный, соответствующий", "прочее23");
        insertDict(db, "convenience", "[kənˈviːnjəns]", "удобство", "прочее23");
        insertDict(db, "discard", "[ˈdɪskɑːd]", "отменить, отбросить", "прочее23");
        insertDict(db, "drawback", "['drɔːbæk]", "недостаток", "прочее23");
        insertDict(db, "equilibrium", "[I'kwɪˈlɪbrɪəm]", "равновесие, равновесный", "прочее23");
        insertDict(db, "extension", "[ɪks'tenʃn]", "расширение, продление", "прочее23");
        insertDict(db, "gossip", "[ˈgɔsɪp]", "сплетня", "прочее23");
        insertDict(db, "implication", "[ɪmplɪˈkeɪʃn]", "последствие, вывод", "прочее23");
        insertDict(db, "legislation", "[ˌledʒɪsˈleɪʃən]", "законодательство", "прочее23");
        insertDict(db, "mend", "[mend]", "исправить, чинить", "прочее23");
        insertDict(db, "obey", "[əˈbeɪ]", "повиноваться", "прочее23");
        insertDict(db, "precision", "[prɪˈsɪʒən]", "точность", "прочее23");
        insertDict(db, "quit", "[kwɪt]", "выйти, покинуть, оставить", "прочее23");
        insertDict(db, "regret", "[rɪˈgret]", "сожалеть", "прочее23");
        insertDict(db, "resume", "[rɪˈzjuːm]", "возобновить, резюме", "прочее23");
        insertDict(db, "scarcely", "[ˈskɛəslɪ]", "вряд ли", "прочее23");
        insertDict(db, "slope", "[sləup]", "наклон", "прочее23");
        insertDict(db, "stubborn", "[ˈstʌbən]", "упрямый, упрямость", "прочее23");
        insertDict(db, "tension", "[tenʃn]", "напряженность", "прочее23");
        insertDict(db, "tramp", "[træmp]", "бродяга, бомж", "прочее23");
        insertDict(db, "bullfinch", "[ˈbʊlfɪnʧ]", "снигирь", "птицы");
        insertDict(db, "cock", "[kɔk]", "петух", "птицы");
        insertDict(db, "crow", "[krəʊ]", "ворона", "птицы");
        insertDict(db, "cuckoo", "[ˈkʊkuː]", "кукушка", "птицы");
        insertDict(db, "duck", "[dʌk]", "утка", "птицы");
        insertDict(db, "eagle", "[iːgl]", "орел", "птицы");
        insertDict(db, "goose", "[guːs]", "гусь", "птицы");
        insertDict(db, "gull", "[gʌl]", "чайка", "птицы");
        insertDict(db, "hen", "[hen]", "курица", "птицы");
        insertDict(db, "jackdaw", "[ˈʤækdɔː]", "галка", "птицы");
        insertDict(db, "magpie", "[ˈmægpaɪ]", "сорока", "птицы");
        insertDict(db, "ostrich", "[ˈɔstrɪʧ]", "страус", "птицы");
        insertDict(db, "owl", "[aʊl]", "сова", "птицы");
        insertDict(db, "pigeon", "[ˈpɪʤɪn]", "голубь", "птицы");
        insertDict(db, "sparrow", "[ˈspærəʊ]", "воробей", "птицы");
        insertDict(db, "stork", "[stɔːk]", "аист", "птицы");
        insertDict(db, "swallow", "[ˈswɔləʊ]", "ласточка", "птицы");
        insertDict(db, "swan", "[swɔn]", "лебедь", "птицы");
        insertDict(db, "tit", "[tɪt]", "синица", "птицы");
        insertDict(db, "woodpecker", "[ˈwʊdpekə]", "дятел", "птицы");
        insertDict(db, "accompany", "[əˈkʌmpənɪ]", "сопровождать", "путешествие1");
        insertDict(db, "arrive", "[əˈraɪv]", "прибывать", "путешествие1");
        insertDict(db, "beach", "[biːʧ]", "пляж", "путешествие1");
        insertDict(db, "depart", "[dɪˈpɑːt]", "отправиться, уходить", "путешествие1");
        insertDict(db, "exotic", "[ɪgˈzɔtɪk]", "экзотический", "путешествие1");
        insertDict(db, "foreigner", "[ˈfɔrɪnə]", "иностранец", "путешествие1");
        insertDict(db, "hotel", "[həʊˈtel]", "гостиница", "путешествие1");
        insertDict(db, "journey", "[ˈʤɜːnɪ]", "путешествие", "путешествие1");
        insertDict(db, "light", "[laɪt]", "лёгкий, свет", "путешествие1");
        insertDict(db, "map", "[mæp]", "карта", "путешествие1");
        insertDict(db, "port", "[pɔːt]", "порт", "путешествие1");
        insertDict(db, "school vacation", "[skuːl vəˈkeɪʃn]", "школьные каникулы", "путешествие1");
        insertDict(db, "sunburnt", "[ˈsʌnbɜːnt]", "загорелый, обгорелый", "путешествие1");
        insertDict(db, "tanned", "[tænd]", "загорелый", "путешествие1");
        insertDict(db, "tourism", "[ˈtʊərɪzəm]", "туризм", "путешествие1");
        insertDict(db, "travel", "[trævl]", "путешествовать, путешествие", "путешествие1");
        insertDict(db, "understand", "[ʌndəˈstænd]", "понимать, понять", "путешествие1");
        insertDict(db, "strange", "[streɪnʤ]", "странный", "путешествие1, прилагательные эмоций3");
        insertDict(db, "motorbike", "[ˈməʊtəbaɪk]", "мотоцикл", "путешествие1, транспорт");
        insertDict(db, "railroad", "[ˈreɪlrəʊd]", "железная дорога", "путешествие1, транспорт");
        insertDict(db, "get off", "[get ɔf]", "сойти, выходить, уходи!", "путешествие1, фразовые глаголы g");
        insertDict(db, "airport", "[ˈɛəpɔːt]", "аэропорт", "путешествие2");
        insertDict(db, "backpack", "[bækˈpæk]", "рюкзак", "путешествие2");
        insertDict(db, "baggage", "[ˈbægɪʤ]", "багаж", "путешествие2");
        insertDict(db, "be on vacation", "[biː ɔn vəˈkeɪʃn]", "быть в отпуске, отдыхать, ", "путешествие2");
        insertDict(db, "direction", "[dɪˈrekʃn]", "направление", "путешествие2");
        insertDict(db, "foreign", "[ˈfɔrɪn]", "иностранный", "путешествие2");
        insertDict(db, "gasoline", "[ˈgæsəʊliːn]", "бензин", "путешествие2");
        insertDict(db, "get a tan", "[get ə tæn]", "загореть", "путешествие2");
        insertDict(db, "go abroad", "[gəʊ əˈbrɔːd]", "поехать за границу", "путешествие2");
        insertDict(db, "hotel room", "[həʊˈtel ruːm]", "гостиничный номер", "путешествие2");
        insertDict(db, "land", "[lænd]", "земля, приземлиться", "путешествие2");
        insertDict(db, "luggage", "[ˈlʌgɪʤ]", "багаж, чемодан", "путешествие2");
        insertDict(db, "miss", "[mɪs]", "скучать, пропустить", "путешествие2");
        insertDict(db, "passport", "[ˈpɑːspɔːt]", "паспорт", "путешествие2");
        insertDict(db, "postcard", "[ˈpəʊstkɑːd]", "открытка", "путешествие2");
        insertDict(db, "speak Russian", "[spiːk rʌʃn]", "говорить по-русски", "путешествие2");
        insertDict(db, "suitcase", "[ˈsjuːtkeɪs]", "чемодан", "путешествие2");
        insertDict(db, "tent", "[tent]", "палатка", "путешествие2");
        insertDict(db, "trip", "[trɪp]", "поездка", "путешествие2");
        insertDict(db, "vacation", "[vəˈkeɪʃn]", "отпуск", "путешествие2");
        insertDict(db, "visa", "[ˈviːzə]", "виза", "путешествие2");
        insertDict(db, "bicycle", "[ˈbaɪsɪkl]", "велосипед", "путешествие2, спорт");
        insertDict(db, "railway station", "[ˈreɪlweɪ steɪʃn]", "ж/д вокзал", "путешествие2, транспорт");
        insertDict(db, "train", "[treɪn]", "поезд", "путешествие2, транспорт");
        insertDict(db, "currency", "[ˈkʌrənsɪ]", "валюта", "путешествие2, финансы");
        insertDict(db, "see off", "[siː ɔf]", "провожать", "путешествие2, фразовые глаголы r-s");
        insertDict(db, "take off", "[teɪk ɔf]", "снимать (одежду), взлетать", "путешествие2, фразовые глаголы t-w");
        insertDict(db, "anchovy", "[ˈæntʃəvi]", "анчоус", "рыбы");
        insertDict(db, "bream", "[briːm]", "лещ", "рыбы");
        insertDict(db, "burbot", "[ˈbɜːbət]", "налим", "рыбы");
        insertDict(db, "capelin", "['kæpəlɪn]", "мойва", "рыбы");
        insertDict(db, "carp", "[kɑːp]", "карп", "рыбы");
        insertDict(db, "catfish", "[ˈkætfɪʃ]", "сом", "рыбы");
        insertDict(db, "chub", "[tʃʌb]", "голавль", "рыбы");
        insertDict(db, "cod", "[kɒd]", "треска", "рыбы");
        insertDict(db, "crucian", "[ˈkruːʃən]", "карась", "рыбы");
        insertDict(db, "dace", "[deɪs]", "плотва", "рыбы");
        insertDict(db, "eel", "[iːl]", "угорь", "рыбы");
        insertDict(db, "flounder", "[ˈflaundə]", "камбала", "рыбы");
        insertDict(db, "grayling", "[ˈɡreɪlɪŋ]", "хариус", "рыбы");
        insertDict(db, "hake", "[heɪk]", "хек", "рыбы");
        insertDict(db, "halibut", "[ˈhælɪbət]", "палтус", "рыбы");
        insertDict(db, "herring", "[ˈherɪŋ]", "сельдь", "рыбы");
        insertDict(db, "ide", "[ˈaɪd]", "язь", "рыбы");
        insertDict(db, "mackerel", "[ˈmækrəl]", "скумбрия", "рыбы");
        insertDict(db, "mullet", "[ˈmʌlɪt]", "кефаль", "рыбы");
        insertDict(db, "perch", "[pə:tʃ]", "окунь", "рыбы");
        insertDict(db, "pike", "[paɪk]", "щука", "рыбы");
        insertDict(db, "rudd", "[ˈrəd]", "красноперка", "рыбы");
        insertDict(db, "salmon", "[ˈsæmən]", "семга", "рыбы");
        insertDict(db, "sardine", "[sɑːˈdiːn]", "сардина", "рыбы");
        insertDict(db, "sea bass", "[siː bæs]", "морской окунь", "рыбы");
        insertDict(db, "sea eel", "[siː ʹi:l]", "морской угорь", "рыбы");
        insertDict(db, "smelt", "[smelt]", "корюшка", "рыбы");
        insertDict(db, "sprat", "[spræt]", "шпрот", "рыбы");
        insertDict(db, "tench", "[tentʃ]", "линь", "рыбы");
        insertDict(db, "tuna", "[ˈtu:nə]", "тунец", "рыбы");
        insertDict(db, "aunt", "[ɑːnt]", "тетя", "семья");
        insertDict(db, "cousin", "[kʌzn]", "двоюродный брат/сестра", "семья");
        insertDict(db, "daughter", "[ˈdɔːtə]", "дочь", "семья");
        insertDict(db, "ex-husband", "[eks-ˈhʌzbənd]", "бывший муж", "семья");
        insertDict(db, "ex-wife", "[eks-waɪf]", "бывшая жена", "семья");
        insertDict(db, "father", "[ˈfɑːðə]", "отец", "семья");
        insertDict(db, "father-in-law", "[ˈfɑːðə-ɪn-lɔː]", "свекор, тесть", "семья");
        insertDict(db, "grandchild", "[ˈgrænʧaɪld]", "внук, внучка", "семья");
        insertDict(db, "granddaughter", "[ˈgrændɔːtə]", "внучка", "семья");
        insertDict(db, "grandfather", "[ˈgrændfɑːðə]", "дедушка", "семья");
        insertDict(db, "grandmother", "[ˈgrænmʌðə]", "бабушка", "семья");
        insertDict(db, "grandparent (s)", "[ˈgrænpeərənt]", "дед и бабка", "семья");
        insertDict(db, "grandson", "[ˈgrænsʌn]", "внук", "семья");
        insertDict(db, "great-grandchild", "[greɪt-ˈgrænʧɪldrən]", "правнук, правнучка", "семья");
        insertDict(db, "husband", "[ˈhʌzbənd]", "муж", "семья");
        insertDict(db, "in-laws", "[ɪn lɔːz]", "родители жены/мужа", "семья");
        insertDict(db, "mother", "[ˈmʌðə]", "мать", "семья");
        insertDict(db, "mother-in-law", "[ˈmʌðə-ɪn-lɔː]", "свекровь, теща", "семья");
        insertDict(db, "nephew", "[ˈnevjuː]", "племянник", "семья");
        insertDict(db, "niece", "[niːs]", "племянница", "семья");
        insertDict(db, "parents", "[ˈpɛərənt]", "родители", "семья");
        insertDict(db, "sister", "[ˈsɪstə]", "сестра", "семья");
        insertDict(db, "son", "[sʌn]", "сын", "семья");
        insertDict(db, "son-in-law", "[sʌn ɪn lɔː]", "зять (муж дочери)", "семья");
        insertDict(db, "step-daughter", "[step-ˈdɔːtə]", "падчерица", "семья");
        insertDict(db, "step-father", "[step-ˈfɑːðə]", "отчим", "семья");
        insertDict(db, "step-son", "[step sʌn]", "приемный сын", "семья");
        insertDict(db, "twin", "[twɪn]", "близнец", "семья");
        insertDict(db, "twin-brother", "[twɪn-ˈbrʌðə]", "брат-близнец", "семья");
        insertDict(db, "twin-sister", "[twɪn-ˈsɪstə]", "сестра-близнец", "семья");
        insertDict(db, "uncle", "[ʌŋkl]", "дядя", "семья");
        insertDict(db, "widow", "[ˈwɪdəʊ]", "вдова", "семья");
        insertDict(db, "widower", "[ˈwɪdəʊə]", "вдовец", "семья");
        insertDict(db, "wife", "[waɪf]", "жена", "семья");
        insertDict(db, "ball", "[bɔːl]", "мяч", "спорт");
        insertDict(db, "basketball", "[ˈbɑːskɪtbɔːl]", "баскетбол", "спорт");
        insertDict(db, "football", "[ˈfʊtbɔːl]", "футбол", "спорт");
        insertDict(db, "hop", "[hɔp]", "подпрыгнуть", "спорт");
        insertDict(db, "jump", "[ʤʌmp]", "прыгать", "спорт");
        insertDict(db, "play", "[pleɪ]", "играть", "спорт");
        insertDict(db, "pull", "[pʊl]", "тянуть", "спорт");
        insertDict(db, "push", "[pʊʃ]", "толкать, нажать", "спорт");
        insertDict(db, "ride", "[raɪd]", "ездить (на велосипеде, лошади)", "спорт");
        insertDict(db, "rope", "[rəʊp]", "веревка, скакалка", "спорт");
        insertDict(db, "run", "[rʌn]", "бежать", "спорт");
        insertDict(db, "scooter", "[ˈskuːtə]", "самокат, скутер", "спорт");
        insertDict(db, "skate", "[skeɪt]", "кататься на коньках", "спорт");
        insertDict(db, "skateboard", "[ˈskeɪtbɔːd]", "скейтборд", "спорт");
        insertDict(db, "ski", "[skiː]", "кататься на лыжах", "спорт");
        insertDict(db, "skip", "[skɪp]", "прыгать, пропустить", "спорт");
        insertDict(db, "skipping rope", "[ˈskɪpɪŋ rəʊp]", "скакалка", "спорт");
        insertDict(db, "swimming pool", "[ˈswɪmɪŋ puːl]", "бассейн", "спорт");
        insertDict(db, "tennis", "[ˈtenɪs]", "теннис", "спорт");
        insertDict(db, "trampoline", "[ˈtræmpəliːn]", "батут", "спорт");
        insertDict(db, "volleyball", "[ˈvɒlɪbɔːl]", "волейбол", "спорт");
        insertDict(db, "bike", "[baɪk]", "велосипед", "спорт, путешествие1");
        insertDict(db, "Afghanistan", "[æfɡænɪˈstɑːn]", "Афганистан", "страны азии");
        insertDict(db, "Armenia", "[ɑːˈmiːniə]", "Армения", "страны азии");
        insertDict(db, "Australia", "[ɒˈstreɪliə]", "Австралия", "страны азии");
        insertDict(db, "Azerbaijan", "[ɑːzərbaɪˈdʒɑːn]", "Азербайджан", "страны азии");
        insertDict(db, "Bahrain", "[bɑːˈreɪn]", "Бахрейн", "страны азии");
        insertDict(db, "Bangladesh", "[bæŋɡləˈdeʃ]", "Бангладеш", "страны азии");
        insertDict(db, "Cambodia", "[kæmˈbəʊdɪə]", "Камбоджа", "страны азии");
        insertDict(db, "China", "[ˈtʃaɪnə]", "Китай", "страны азии");
        insertDict(db, "Congo", "[ˈkɒŋɡəʊ]", "Конго", "страны азии");
        insertDict(db, "Georgia", "[ˈdʒɔːdʒə]", "Грузия", "страны азии");
        insertDict(db, "India", "[ˈɪndɪə]", "Индия", "страны азии");
        insertDict(db, "Indonesia", "[ɪndəˈniːzɪə]", "Индонезия", "страны азии");
        insertDict(db, "Iran", "[ɪˈrɑːn]", "Иран", "страны азии");
        insertDict(db, "Iraq", "[ɪˈrɑːk]", "Ирак", "страны азии");
        insertDict(db, "Israel", "[ˈɪzreɪl]", "Израиль", "страны азии");
        insertDict(db, "Japan", "[dʒəˈpæn]", "Япония", "страны азии");
        insertDict(db, "Kazakhstan", "[kɑːzakˈstɑːn]", "Казахстан", "страны азии");
        insertDict(db, "Kuwait", "[kʊˈweɪt]", "Кувейт", "страны азии");
        insertDict(db, "Kyrgyzstan", "[ˈkɪrɡəstæn]", "Киргизия", "страны азии");
        insertDict(db, "Lebanon", "[ˈlebənən]", "Ливан", "страны азии");
        insertDict(db, "Libya", "[ˈlɪbɪə]", "Ливия", "страны азии");
        insertDict(db, "Malaysia", "[məˈleɪzɪə]", "Малайзия", "страны азии");
        insertDict(db, "Mongolia", "[mɒŋˈɡəʊlɪə]", "Монголия", "страны азии");
        insertDict(db, "New Zeland", "[njuː'ziːlənd]", "Новая Зеландия", "страны азии");
        insertDict(db, "North Korea", "[nɔːθ kəˈrɪə]", "Северная Корея", "страны азии");
        insertDict(db, "Oman", "[əʊˈmɑːn]", "Оман", "страны азии");
        insertDict(db, "Pakistan", "[pɑːkɪˈstɑːn]", "Пакистан", "страны азии");
        insertDict(db, "Philippines", "[ˈfɪlɪpiːnz]", "Филиппины", "страны азии");
        insertDict(db, "Saudi Arabia", "[saudi əˈreɪbiə]", "Саудовская Аравия", "страны азии");
        insertDict(db, "Singapore", "[sɪŋəˈpɔː]", "Сингапур", "страны азии");
        insertDict(db, "South Korea", "[saʊθ kəˈrɪə]", "Южная Корея", "страны азии");
        insertDict(db, "Sri Lanka", "[ˈʃriː ˈlæŋkə]", "Шри-Ланка", "страны азии");
        insertDict(db, "Syria", "[ˈsɪrɪə]", "Сирия", "страны азии");
        insertDict(db, "Tajikistan", "[tɑːˈdʒiːkəstæn]", "Таджикистан", "страны азии");
        insertDict(db, "Thailand", "[ˈtaɪlænd]", "Таиланд", "страны азии");
        insertDict(db, "Turkey", "[ˈtɜːki]", "Турция", "страны азии");
        insertDict(db, "United Arab Emirates", "[juːˈnaɪtɪd ˈærəb eˈmɪəreɪts]", "Объединенные Арабские Эмираты", "страны азии");
        insertDict(db, "Uzbekistan", "[uːzˈbekəstæn]", "Узбекистан", "страны азии");
        insertDict(db, "Yemen", "[ˈjemən]", "Йемен", "страны азии");
        insertDict(db, "New Zealand", "[njuː ˈzɪlənd]", "Новая Зеландия, новозеландский", "страны азии, прилагательные стран азии");
        insertDict(db, "Argentina", "[ɑːdʒənˈtiːnə]", "Аргентина", "страны америки");
        insertDict(db, "Bahamas", "[bəˈhɑːməz]", "Багамские о-ва", "страны америки");
        insertDict(db, "Bermuda Islands", "[bəˈmjuːdə ˈaɪləndz]", "Бермудские о-ва", "страны америки");
        insertDict(db, "Bolivia", "[bəˈlɪvɪə]", "Боливия", "страны америки");
        insertDict(db, "Brazil", "[brəˈzɪl]", "Бразилия", "страны америки");
        insertDict(db, "Canada", "[ˈkænədə]", "Канада", "страны америки");
        insertDict(db, "Chile", "[ˈtʃɪli]", "Чили", "страны америки");
        insertDict(db, "Colombia", "[kəˈlɒmbɪə]", "Колумбия", "страны америки");
        insertDict(db, "Costa Rica", "[ˈkɒstə ˈriːkə]", "Коста-Рика", "страны америки");
        insertDict(db, "Cuba", "[ˈkjuːbə]", "Куба", "страны америки");
        insertDict(db, "Dominican Republic", "[dəˈmɪnɪkən rɪˈpʌblɪk]", "Доминиканская Республика", "страны америки");
        insertDict(db, "Ecuador", "[ˈekwədɔː]", "Эквадор", "страны америки");
        insertDict(db, "El Salvador", "[el ˈniːnjəʊ ˈsælvədɔː]", "Сальвадор", "страны америки");
        insertDict(db, "Guatemala", "[ɡwɑːtəˈmɑːlə]", "Гватемала", "страны америки");
        insertDict(db, "Haiti", "[ˈheɪti]", "Гаити", "страны америки");
        insertDict(db, "Honduras", "[hɒnˈdjʊərəs]", "Гондурас", "страны америки");
        insertDict(db, "Jamaica", "[dʒəˈmeɪkə]", "Ямайка", "страны америки");
        insertDict(db, "Mexico", "[ˈmeksɪkəʊ]", "Мексика", "страны америки");
        insertDict(db, "Nicaragua", "[nɪkəˈræɡjʊə]", "Никарагуа", "страны америки");
        insertDict(db, "Panama", "[ˈpænəmɑː]", "Панама", "страны америки");
        insertDict(db, "Paraguay", "[ˈpærəɡwaɪ]", "Парагвай", "страны америки");
        insertDict(db, "Peru", "[pəˈruː]", "Перу", "страны америки");
        insertDict(db, "United States of America / USA", "[juːˈnaɪtɪd steɪts əv əˈmerɪkə / ju:esˈeɪ]", "Соединенные штаты Америки / США", "страны америки");
        insertDict(db, "Uruguay", "[ˈjʊərəɡwaɪ]", "Уругвай", "страны америки");
        insertDict(db, "Venezuela", "[venɪˈzweɪlə]", "Венесуэла", "страны америки");
        insertDict(db, "Algeria", "[ælˈdʒɪəriə]", "Алжир", "страны африки");
        insertDict(db, "Burundi", "[bʊˈrʊndi]", "Бурунди", "страны африки");
        insertDict(db, "Cameroon", "[kæməˈruːn]", "Камерун", "страны африки");
        insertDict(db, "Egypt", "[ˈiːdʒɪpt]", "Египет", "страны африки");
        insertDict(db, "Ethiopia", "[iːθɪˈəʊpɪə]", "Эфиопия", "страны африки");
        insertDict(db, "Ghana", "[ˈɡɑːnə]", "Гана", "страны африки");
        insertDict(db, "Guinea", "[ˈɡɪni]", "Гвинея", "страны африки");
        insertDict(db, "Kenya", "[ˈkenjə]", "Кения", "страны африки");
        insertDict(db, "Liberia", "[laɪˈbɪərɪə]", "Либерия", "страны африки");
        insertDict(db, "Madagascar", "[mædəˈɡæskə]", "Мадагаскар", "страны африки");
        insertDict(db, "Malawi", "[məˈlɑːwi]", "Малави", "страны африки");
        insertDict(db, "Morocco", "[məˈrɒkəʊ]", "Марокко", "страны африки");
        insertDict(db, "Nigeria", "[naɪˈdʒɪərɪə]", "Нигерия", "страны африки");
        insertDict(db, "Rwanda", "[rʊˈændə]", "Руанда", "страны африки");
        insertDict(db, "Senegal", "[senɪˈɡɔːl]", "Сенегал", "страны африки");
        insertDict(db, "South Africa", "[saʊθ ˈæfrɪkə]", "Южная Африка", "страны африки");
        insertDict(db, "Sudan", "[suːˈdɑːn]", "Судан", "страны африки");
        insertDict(db, "Togo", "[ˈtəʊɡəʊ]", "Того", "страны африки");
        insertDict(db, "Tunisia", "[tjuːˈnɪzɪə]", "Тунис", "страны африки");
        insertDict(db, "Uganda", "[juːˈɡændə]", "Уганда", "страны африки");
        insertDict(db, "Zaire", "[zɑːˈɪə]", "Заир", "страны африки");
        insertDict(db, "Zambia", "[ˈzæmbɪə]", "Замбия", "страны африки");
        insertDict(db, "Zimbabwe", "[zɪmˈbɑːbwi]", "Зимбабве", "страны африки");
        insertDict(db, "Albania", "[ælˈbeɪniə]", "Албания", "страны европы");
        insertDict(db, "Austria", "[ˈɒstriə]", "Австрия", "страны европы");
        insertDict(db, "Belarus", "[belə'rus]", "Беларусь", "страны европы");
        insertDict(db, "Belgium", "[ˈbeldʒəm]", "Бельгия", "страны европы");
        insertDict(db, "Bulgaria", "[bʌlˈɡeərɪə]", "Болгария", "страны европы");
        insertDict(db, "Cyprus", "[ˈsaɪprəs]", "Кипр", "страны европы");
        insertDict(db, "Czech Republic", "[tʃek rɪˈpʌblɪk]", "Чехия", "страны европы");
        insertDict(db, "Denmark", "[ˈdenmɑːk]", "Дания", "страны европы");
        insertDict(db, "Estonia", "[eˈstəʊniə]", "Эстония", "страны европы");
        insertDict(db, "Finland", "[ˈfɪnlənd]", "Финляндия", "страны европы");
        insertDict(db, "France", "[frɑːns]", "Франция", "страны европы");
        insertDict(db, "Germany", "[ˈdʒɜːməni]", "Германия", "страны европы");
        insertDict(db, "Great Britain / United Kingdom", "[ˈɡreɪt ˈbrɪtən] ", "Великобритания", "страны европы");
        insertDict(db, "Greece", "[ɡrɪs]", "Греция", "страны европы");
        insertDict(db, "Hungary", "[ˈhʌŋɡri]", "Венгрия", "страны европы");
        insertDict(db, "Iceland", "[ˈaɪslənd]", "Исландия", "страны европы");
        insertDict(db, "Ireland", "[ˈaɪələnd]", "Ирландия", "страны европы");
        insertDict(db, "Italy", "[ˈɪtəli]", "Италия", "страны европы");
        insertDict(db, "Latvia", "[ˈlætviə]", "Латвия", "страны европы");
        insertDict(db, "Lithuania", "[lɪθəˈweɪniə]", "Литва", "страны европы");
        insertDict(db, "Luxemburg", "[ˈlʌksəmbɜːɡ]", "Люксембург", "страны европы");
        insertDict(db, "Malta", "[ˈmɔːltə]", "Мальта", "страны европы");
        insertDict(db, "Moldova", "[molˈdovə]", "Молдавия", "страны европы");
        insertDict(db, "Monaco", "[ˈmɒnəkəʊ]", "Монако", "страны европы");
        insertDict(db, "Netherlands", "[ˈneðələndz] ", "Нидерланды", "страны европы");
        insertDict(db, "Norway", "[ˈnɔːweɪ]", "Норвегия", "страны европы");
        insertDict(db, "Poland", "[ˈpəʊlənd]", "Польша", "страны европы");
        insertDict(db, "Portugal", "[ˈpɔːtʃʊɡəl]", "Португалия", "страны европы");
        insertDict(db, "Romania", "[rəˈmeɪnɪə]", "Румыния", "страны европы");
        insertDict(db, "Russia", "[ˈrʌʃə]", "Россия", "страны европы");
        insertDict(db, "Slovakia", "[sloˈvɑːkiə]", "Словакия", "страны европы");
        insertDict(db, "Slovenia", "[sloˈviːniə]", "Словения", "страны европы");
        insertDict(db, "Spain", "[speɪn]", "Испания", "страны европы");
        insertDict(db, "Sweden", "[ˈswiːdən]", "Швеция", "страны европы");
        insertDict(db, "Switzerland", "[ˈswɪtsələnd]", "Швейцария", "страны европы");
        insertDict(db, "Ukraine", "[juːˈkreɪn]", "Украина", "страны европы");
        insertDict(db, "body", "[ˈbɔdɪ]", "тело", "тело человека");
        insertDict(db, "cheek", "[ʧiːk]", "щека", "тело человека");
        insertDict(db, "ear", "[ɪə]", "ухо", "тело человека");
        insertDict(db, "elbow", "[ˈelbəʊ]", "локоть", "тело человека");
        insertDict(db, "eye", "[aɪ]", "глаз", "тело человека");
        insertDict(db, "eyebrow", "[ˈaɪbraʊ]", "бровь", "тело человека");
        insertDict(db, "face", "[feɪs]", "лицо", "тело человека");
        insertDict(db, "finger", "[ˈfɪŋgə]", "палец (руки)", "тело человека");
        insertDict(db, "foot", "[fʊt]", "ступня", "тело человека");
        insertDict(db, "forehead", "[ˈfɔrɪd]", "лоб", "тело человека");
        insertDict(db, "hair", "[hɛə]", "волосы", "тело человека");
        insertDict(db, "head", "[hed]", "голова", "тело человека");
        insertDict(db, "knee", "[niː]", "колено", "тело человека");
        insertDict(db, "leg", "[leg]", "нога", "тело человека");
        insertDict(db, "mouth", "[maʊθ]", "рот", "тело человека");
        insertDict(db, "nail", "[neɪl]", "ноготь", "тело человека");
        insertDict(db, "neck", "[nek]", "шея", "тело человека");
        insertDict(db, "nose", "[nəʊz]", "нос", "тело человека");
        insertDict(db, "shoulder", "[ˈʃəʊldə]", "плечо", "тело человека");
        insertDict(db, "stomach", "[ˈstʌmək]", "живот", "тело человека");
        insertDict(db, "thumb", "[θʌm]", "большой палец", "тело человека");
        insertDict(db, "toe", "[təʊ]", "палец (ноги)", "тело человека");
        insertDict(db, "palm", "[pa:m]", "ладонь, пальма", "тело человека, деревья лиственные");
        insertDict(db, "boat", "[bəʊt]", "лодка", "транспорт");
        insertDict(db, "bus stop", "[bʌs stɔp]", "автобусная остановка", "транспорт");
        insertDict(db, "drive", "[draɪv]", "ехать, ездить", "транспорт");
        insertDict(db, "float", "[fləʊt]", "плыть", "транспорт");
        insertDict(db, "passenger", "[ˈpæsɪnʤə]", "пассажир", "транспорт");
        insertDict(db, "road", "[rəʊd]", "дорога", "транспорт");
        insertDict(db, "transport", "[ˈtrænspɔːt]", "транспорт", "транспорт");
        insertDict(db, "trolley", "[ˈtrɔlɪ]", "троллейбус", "транспорт");
        insertDict(db, "fly", "[flaɪ]", "летать, муха", "транспорт, насекомые");
        insertDict(db, "driver", "[ˈdraɪvə]", "водитель", "транспорт, профессии4");
        insertDict(db, "bus", "[bʌs]", "автобус", "транспорт, путешествие1");
        insertDict(db, "car", "[kɑː]", "автомобиль", "транспорт, путешествие1");
        insertDict(db, "ship", "[ʃɪp]", "корабль", "транспорт, путешествие1");
        insertDict(db, "taxi", "[ˈtæksɪ]", "такси", "транспорт, путешествие1");
        insertDict(db, "ticket", "[ˈtɪkɪt]", "билет", "транспорт, путешествие1");
        insertDict(db, "tram", "[træm]", "трамвай", "транспорт, путешествие1");
        insertDict(db, "plane", "[pleɪn]", "самолет, рубанок", "транспорт, путешествие1, инструменты столярные");
        insertDict(db, "bag", "[bæg]", "сумка", "учеба");
        insertDict(db, "board", "[bɔːd]", "доска", "учеба");
        insertDict(db, "book", "[bʊk]", "книга", "учеба");
        insertDict(db, "box", "[bɔks]", "коробка", "учеба");
        insertDict(db, "class", "[klɑːs]", "класс", "учеба");
        insertDict(db, "classroom", "[ˈklɑːsrʊm]", "классная комната", "учеба");
        insertDict(db, "computer", "[kəmˈpjuːtə]", "компьютер", "учеба");
        insertDict(db, "desk", "[desk]", "парта, стол", "учеба");
        insertDict(db, "exercise book", "[ˈeksəsaɪz bʊk]", "тетрадь", "учеба");
        insertDict(db, "laptop", "[ˈlæptɒp]", "ноутбук", "учеба");
        insertDict(db, "learning", "[ˈlɜːnɪŋ]", "учеба", "учеба");
        insertDict(db, "lesson", "[lesn]", "урок", "учеба");
        insertDict(db, "listen", "[lɪsn]", "слушать", "учеба");
        insertDict(db, "literature", "[ˈlɪtərɪʧə]", "литература", "учеба");
        insertDict(db, "pen", "[pen]", "ручка", "учеба");
        insertDict(db, "pencil", "[pensl]", "карандаш", "учеба");
        insertDict(db, "pencil case", "[pensl bɔks]", "пенал", "учеба");
        insertDict(db, "point", "[pɔɪnt]", "точка, указать", "учеба");
        insertDict(db, "poster", "[ˈpəʊstə]", "плакат", "учеба");
        insertDict(db, "psychology", "[saɪˈkɔləʤɪ]", "психология", "учеба");
        insertDict(db, "pupil", "[pjuːpl]", "ученик", "учеба");
        insertDict(db, "read", "[riːd]", "читать", "учеба");
        insertDict(db, "school", "[skuːl]", "школа", "учеба");
        insertDict(db, "underline", "[ˈʌndəlaɪn]", "подчеркнуть", "учеба");
        insertDict(db, "answer", "[ˈɑːnsə]", "ответ, отвечать", "учеба, глаголы речи");
        insertDict(db, "ask", "[ɑːsk]", "спрашивать", "учеба, глаголы речи");
        insertDict(db, "mathematics", "[mæθɪˈmætɪks]", "математика", "учеба, математика");
        insertDict(db, "correct", "[kəˈrekt]", "правильный, исправить", "учеба, прилагательные кач-ва и кол-ва1");
        insertDict(db, "teacher", "[ˈtiːʧə]", "учитель, преподаватель, воспитатель", "учеба, профессии5");
        insertDict(db, "acquisition", "[ˌækwɪˈzɪʃən]", "приобретение", "финансы");
        insertDict(db, "advisory", "[ədˈvaɪzərɪ]", "консультация", "финансы");
        insertDict(db, "appreciate", "[əˈpriːʃɪeɪt]", "ценить, оценить", "финансы");
        insertDict(db, "arrangement", "[əˈreɪnʤmənt]", "соглашение", "финансы");
        insertDict(db, "bargain", "[ˈbɑːgɪn]", "выгодная сделка, торговаться", "финансы");
        insertDict(db, "commodity", "[kəˈmɔdɪtɪ]", "товар", "финансы");
        insertDict(db, "counterparty", "[ˈkaʊntəpɑːtɪ]", "контрагент, партнер", "финансы");
        insertDict(db, "deliver", "[dɪˈlɪvə]", "предоставлять, доставлять", "финансы");
        insertDict(db, "excise duty", "[ekˈsaɪz ˈdjuːtɪ]", "акцизный сбор", "финансы");
        insertDict(db, "haggle", "[hægl]", "торговаться, торг", "финансы");
        insertDict(db, "mortgage", "[ˈmɔːgɪʤ]", "ипотечный, залог", "финансы");
        insertDict(db, "overdraw", "[ˈəʊvəˈdrɔː]", "превышать, овердрафт", "финансы");
        insertDict(db, "property", "[ˈprɔpətɪ]", "собственность, имущество, свойство", "финансы");
        insertDict(db, "rebate", "[ˈriːbeɪt]", "скидка, уступка, возврат", "финансы");
        insertDict(db, "receivables", "[rɪˈsiːvəblz]", "дебиторская задолженность", "финансы");
        insertDict(db, "remit", "[rɪˈmɪt]", "переводить, перечислять", "финансы");
        insertDict(db, "repossession", "[rɪpəˈzeʃn]", "изъятие", "финансы");
        insertDict(db, "revenue", "[ˈrevɪnjuː]", "доход, выручка", "финансы");
        insertDict(db, "sell-by date ", "[sel baɪ deɪt]", "срок годности", "финансы");
        insertDict(db, "stock market", "[stɔk ˈmɑːkɪt]", "фондовый рынок", "финансы");
        insertDict(db, "swap", "[swɔp]", "обмен, своп, обменивать", "финансы");
        insertDict(db, "tenant", "[ˈtenənt]", "арендатор, жилец", "финансы");
        insertDict(db, "wage", "[weɪʤ]", "заработная плата", "финансы");
        insertDict(db, "wallet", "[ˈwɔlɪt]", "бумажник", "финансы");
        insertDict(db, "waste", "[weɪst]", "тратить в пустую, отходы", "финансы");
        insertDict(db, "workshop", "[ˈwɜːkʃɔp]", "семинар, совещание", "финансы");
        insertDict(db, "worth", "[wɜːθ]", "стоить, ценность", "финансы");
        insertDict(db, "back away", "[bæk əˈweɪ]", "отступать, пятиться", "фразовые глаголы a-b");
        insertDict(db, "back off", "[bæk ɔf]", "отступить, притормозить, отвали", "фразовые глаголы a-b");
        insertDict(db, "be back", "[bi: bæk]", "вернуться", "фразовые глаголы a-b");
        insertDict(db, "be off", "[bi: ɔf]", "уходить, быть свободным", "фразовые глаголы a-b");
        insertDict(db, "be out", "[bi: aʊt]", "отсутствовать", "фразовые глаголы a-b");
        insertDict(db, "be over", "[biː ˈəʊvə]", "окончиться, превышать", "фразовые глаголы a-b");
        insertDict(db, "be up", "[bi: ʌp]", "подняться, проснуться", "фразовые глаголы a-b");
        insertDict(db, "be up to", "[bi: ʌp tu:]", "намереваться что-либо сделать", "фразовые глаголы a-b");
        insertDict(db, "blow out", "[bləʊ aʊt]", "задуть, разбиться вдребезги", "фразовые глаголы a-b");
        insertDict(db, "blow up", "[bləʊ ʌp]", "взорвать(ся), выйти из себя", "фразовые глаголы a-b");
        insertDict(db, "break down", "[breɪk daʊn]", "сломать(ся)", "фразовые глаголы a-b");
        insertDict(db, "break in", "[breɪk ɪn]", "врываться, вмешаться (в разговор)", "фразовые глаголы a-b");
        insertDict(db, "break into", "[breɪk ˈɪntu]", "вламываться", "фразовые глаголы a-b");
        insertDict(db, "break off", "[breɪk ɔf]", "прервать(ся), отделить(ся)", "фразовые глаголы a-b");
        insertDict(db, "break out", "[breɪk aʊt]", "вырваться, вспыхивать", "фразовые глаголы a-b");
        insertDict(db, "break up", "[breɪk ʌp]", "расставаться, прекращать", "фразовые глаголы a-b");
        insertDict(db, "burst out", "[bɜːst aʊt]", "разразиться (смехом)", "фразовые глаголы a-b");
        insertDict(db, "call back", "[kɔːl bæk]", "перезвонить", "фразовые глаголы c-f");
        insertDict(db, "calm down", "[kɑːm daʊn]", "успокаивать(ся)", "фразовые глаголы c-f");
        insertDict(db, "carry on", "[ˈkærɪ ɔn]", "продолжать", "фразовые глаголы c-f");
        insertDict(db, "carry out", "['kærɪ aʊt]", "выполнить, осуществить", "фразовые глаголы c-f");
        insertDict(db, "catch up", "[kæʧ ʌp]", "догнать, наверстать", "фразовые глаголы c-f");
        insertDict(db, "check in", "[ʧek ɪn]", "(за)регистрироваться", "фразовые глаголы c-f");
        insertDict(db, "check out", "[ʧek aʊt]", "проверять, выписаться из", "фразовые глаголы c-f");
        insertDict(db, "clean up", "[kliːn ʌp]", "чистить(ся), убирать(ся)", "фразовые глаголы c-f");
        insertDict(db, "come across", "[kʌm əˈkrɔs]", "натолкнуться на, встретить", "фразовые глаголы c-f");
        insertDict(db, "come along", "[kʌm əˈlɔŋ]", "прийти, сопровождать", "фразовые глаголы c-f");
        insertDict(db, "come back", "[kʌm bæk]", "возвращаться", "фразовые глаголы c-f");
        insertDict(db, "come down", "[kʌm daʊn]", "спускаться, падать", "фразовые глаголы c-f");
        insertDict(db, "come forward", "[kʌm ˈfɔːwəd]", "выходить вперед, выдвигаться", "фразовые глаголы c-f");
        insertDict(db, "come in", "[kʌm ɪn]", "входить, заходить", "фразовые глаголы c-f");
        insertDict(db, "come off", "[kʌm ɔf]", "сойти, выйти", "фразовые глаголы c-f");
        insertDict(db, "come on", "[kʌm ɔn]", "давай!, пошли!", "фразовые глаголы c-f");
        insertDict(db, "come out", "[kʌm aʊt]", "выйти, вылезать, получаться", "фразовые глаголы c-f");
        insertDict(db, "come over", "[kʌm ˈəʊvə]", "приехать, подойти, зайти", "фразовые глаголы c-f");
        insertDict(db, "come up", "[kʌm ʌp]", "появиться, приблизиться", "фразовые глаголы c-f");
        insertDict(db, "count on", "[kaʊnt ɔn]", "положиться на…", "фразовые глаголы c-f");
        insertDict(db, "cut off", "[kʌt ɔf]", "отрезать, отсекать, прерывать", "фразовые глаголы c-f");
        insertDict(db, "cut out", "[kʌt aʊt]", "вырезать, пресекать", "фразовые глаголы c-f");
        insertDict(db, "end up", "[end ʌp]", "закончить(ся), оказаться", "фразовые глаголы c-f");
        insertDict(db, "fall down", "[fɔːl daʊn]", "падать, упасть", "фразовые глаголы c-f");
        insertDict(db, "fall off", "[fɔːl ɔf]", "падать, отваливаться", "фразовые глаголы c-f");
        insertDict(db, "fed up", "[fed ʌp]", "надоело, сытый по горло", "фразовые глаголы c-f");
        insertDict(db, "figure out", "[ˈfɪgə aʊt]", "выяснить, понять", "фразовые глаголы c-f");
        insertDict(db, "fill out", "[fɪl aʊt]", "заполнить", "фразовые глаголы c-f");
        insertDict(db, "find out", "[faɪnd aʊt]", "выяснить, обнаружить", "фразовые глаголы c-f");
        insertDict(db, "get along", "[get əˈlɔŋ]", "уживаться, ладить", "фразовые глаголы g");
        insertDict(db, "get around", "[get əˈraʊnd]", "обойти, перехитрить", "фразовые глаголы g");
        insertDict(db, "get away", "[get əˈweɪ]", "уйти, удрать", "фразовые глаголы g");
        insertDict(db, "get back", "[get bæk]", "вернуть(ся)", "фразовые глаголы g");
        insertDict(db, "get down", "[get daʊn]", "опустить(ся)", "фразовые глаголы g");
        insertDict(db, "get in", "[get ɪn]", "войти, входить", "фразовые глаголы g");
        insertDict(db, "get on", "[get ɔn]", "уживаться, ладить, садиться на", "фразовые глаголы g");
        insertDict(db, "get out", "[get aʊt]", "выйти, выбраться", "фразовые глаголы g");
        insertDict(db, "get over", "[get ˈəʊvə]", "преодолеть, справиться", "фразовые глаголы g");
        insertDict(db, "get stuck", "[get stʌk]", "застрять", "фразовые глаголы g");
        insertDict(db, "get through", "[get θruː]", "пройти, прорваться, дозвониться", "фразовые глаголы g");
        insertDict(db, "get up", "[get ʌp]", "вставать, подниматься", "фразовые глаголы g");
        insertDict(db, "give up", "[gɪv ʌp]", "сдаваться", "фразовые глаголы g");
        insertDict(db, "go along", "[gəʊ əˈlɔŋ]", "соглашаться, идти вместе", "фразовые глаголы g");
        insertDict(db, "go around", "[gəʊ əˈraʊnd]", "обойти, ходить по кругу", "фразовые глаголы g");
        insertDict(db, "go away", "[gəʊ əˈweɪ]", "уходить, уйти прочь", "фразовые глаголы g");
        insertDict(db, "go back", "[gəʊ bæk]", "возвращаться", "фразовые глаголы g");
        insertDict(db, "go by", "[gəʊ baɪ]", "проходить, пройти мимо", "фразовые глаголы g");
        insertDict(db, "go down", "[gəʊ daʊn]", "спускаться, снизиться", "фразовые глаголы g");
        insertDict(db, "go in", "[gəʊ ɪn]", "заходить, войти внутрь", "фразовые глаголы g");
        insertDict(db, "go off", "[gəʊ ɔf]", "уходить, уезжать", "фразовые глаголы g");
        insertDict(db, "go on", "[gəʊ ɔn]", "продолжать(ся)", "фразовые глаголы g");
        insertDict(db, "go out", "[gəʊ aʊt]", "выходить", "фразовые глаголы g");
        insertDict(db, "go over", "[gəʊ ˈəʊvə]", "переходить, повторять", "фразовые глаголы g");
        insertDict(db, "go through", "[gəʊ θruː]", "пройти через", "фразовые глаголы g");
        insertDict(db, "go up", "[gəʊ ʌp]", "подниматься", "фразовые глаголы g");
        insertDict(db, "grow up", "[grəʊ ʌp]", "вырастать, повзрослеть", "фразовые глаголы g");
        insertDict(db, "hang around", "[hæŋ əˈraʊnd]", "бездельничать, слоняться", "фразовые глаголы h-l");
        insertDict(db, "hang on", "[hæŋ ɔn]", "держи(те)сь!, цепляться", "фразовые глаголы h-l");
        insertDict(db, "hang up", "[hæŋ ʌp]", "повесить трубку или что-либо", "фразовые глаголы h-l");
        insertDict(db, "help out", "[help aʊt]", "помочь, выручить", "фразовые глаголы h-l");
        insertDict(db, "hold on", "[həʊld ɔn]", "подожди(те), держаться", "фразовые глаголы h-l");
        insertDict(db, "hold out", "[həʊld aʊt]", "протягивать, выдержать", "фразовые глаголы h-l");
        insertDict(db, "hold up", "[həʊld ʌp]", "поднимать, подпирать", "фразовые глаголы h-l");
        insertDict(db, "keep on", "[kiːp ɔn]", "продолжать", "фразовые глаголы h-l");
        insertDict(db, "keep up", "[kiːp ʌp]", "не отставать, поддерживать", "фразовые глаголы h-l");
        insertDict(db, "knock down", "[nɔk daʊn]", "сбить с ног", "фразовые глаголы h-l");
        insertDict(db, "knock out", "[nɔk aʊt]", "выбить, нокаутировать", "фразовые глаголы h-l");
        insertDict(db, "let in", "[let ɪn]", "впускать", "фразовые глаголы h-l");
        insertDict(db, "let out", "[let aʊt]", "выпускать, освобождать", "фразовые глаголы h-l");
        insertDict(db, "lie down", "[laɪ daʊn]", "лечь, прилечь", "фразовые глаголы h-l");
        insertDict(db, "line up", "[laɪn ʌp]", "выстраивать(ся)", "фразовые глаголы h-l");
        insertDict(db, "look back", "[lʊk bæk]", "оглядываться, оборачиваться", "фразовые глаголы h-l");
        insertDict(db, "look down", "[lʊk daʊn]", "смотреть вниз", "фразовые глаголы h-l");
        insertDict(db, "look for", "[lʊk fɔː]", "искать", "фразовые глаголы h-l");
        insertDict(db, "look forward to", "[lʊk ˈfɔːwəd tu:]", "надеяться, ожидать", "фразовые глаголы h-l");
        insertDict(db, "look out", "[lʊk aʊt]", "выглянуть, остерегаться", "фразовые глаголы h-l");
        insertDict(db, "look over", "[lʊk ˈəʊvə]", "смотреть, осматривать", "фразовые глаголы h-l");
        insertDict(db, "make out", "[meɪk aʊt]", "понять, разобраться", "фразовые глаголы m-p");
        insertDict(db, "make up", "[meɪk ʌp]", "составлять, компенсировать", "фразовые глаголы m-p");
        insertDict(db, "move in", "[muːv ɪn]", "въезжать, входить", "фразовые глаголы m-p");
        insertDict(db, "move on", "[muːv ɔn]", "двигаться дальше", "фразовые глаголы m-p");
        insertDict(db, "move out", "[muːv aʊt]", "съезжать,уезжать", "фразовые глаголы m-p");
        insertDict(db, "pass out", "[pɑːs aʊt]", "терять сознание, раздавать", "фразовые глаголы m-p");
        insertDict(db, "pick up", "[pɪk ʌp]", "подобрать, поднять, собирать", "фразовые глаголы m-p");
        insertDict(db, "point out", "[pɔɪnt aʊt]", "отметить, указать, подчеркнуть", "фразовые глаголы m-p");
        insertDict(db, "pull away", "[pʊl əˈweɪ]", "отъезжать, трогаться", "фразовые глаголы m-p");
        insertDict(db, "pull off", "[pʊl ɔf]", "снимать, стаскивать, справиться", "фразовые глаголы m-p");
        insertDict(db, "pull on", "[pʊl ɔn]", "натягивать (одевать)", "фразовые глаголы m-p");
        insertDict(db, "pull out", "[pʊl aʊt]", "извлекать, отъезжать", "фразовые глаголы m-p");
        insertDict(db, "pull up", "[pʊl ʌp]", "остановиться", "фразовые глаголы m-p");
        insertDict(db, "put away", "[pʊt əˈweɪ]", "убирать, отложить", "фразовые глаголы m-p");
        insertDict(db, "put down", "[pʊt daʊn]", "положить, опустить", "фразовые глаголы m-p");
        insertDict(db, "put in", "[pʊt ɪn]", "вставлять", "фразовые глаголы m-p");
        insertDict(db, "put on", "[pʊt ɔn]", "одевать(ся)", "фразовые глаголы m-p");
        insertDict(db, "put out", "[pʊt aʊt]", "выставлять, погасить", "фразовые глаголы m-p");
        insertDict(db, "put up", "[pʊt ʌp]", "поднимать, воздвигать", "фразовые глаголы m-p");
        insertDict(db, "run away", "[rʌn əˈweɪ]", "убегать, удирать", "фразовые глаголы r-s");
        insertDict(db, "run into", "[rʌn ˈɪntuː]", "столкнуться, наскочить", "фразовые глаголы r-s");
        insertDict(db, "run off", "[rʌn ɔf]", "убегать, удирать, избегать", "фразовые глаголы r-s");
        insertDict(db, "run out", "[rʌn aʊt]", "закончиться, сбежать", "фразовые глаголы r-s");
        insertDict(db, "run over", "[rʌn ˈəʊvə]", "пробегать, переехать", "фразовые глаголы r-s");
        insertDict(db, "set down", "[set daʊn]", "поставить, положить", "фразовые глаголы r-s");
        insertDict(db, "set off", "[set ɔf]", "отправляться (в путь)", "фразовые глаголы r-s");
        insertDict(db, "set up", "[set ʌp]", "настроить, учредить", "фразовые глаголы r-s");
        insertDict(db, "settle down", "[setl daʊn]", "поселиться, успокоиться", "фразовые глаголы r-s");
        insertDict(db, "shoot out", "[ʃuːt aʊt]", "выскочить, вылететь", "фразовые глаголы r-s");
        insertDict(db, "show up", "[ʃəʊ ʌp]", "появляться, приходить", "фразовые глаголы r-s");
        insertDict(db, "shut down", "[ʃʌt daʊn]", "закрыть, выключить", "фразовые глаголы r-s");
        insertDict(db, "shut up", "[ʃʌt ʌp]", "заставить замолчать, молчать!", "фразовые глаголы r-s");
        insertDict(db, "sit back", "[sɪt bæk]", "откинуться назад", "фразовые глаголы r-s");
        insertDict(db, "sit down", "[sɪt daʊn]", "садиться", "фразовые глаголы r-s");
        insertDict(db, "sit up", "[sɪt ʌp]", "выпрямиться, сесть прямо", "фразовые глаголы r-s");
        insertDict(db, "spread out", "[spred aʊt]", "растягивать(ся), расширять(ся)", "фразовые глаголы r-s");
        insertDict(db, "stand by", "[stænd baɪ]", "приготовиться, ожидать", "фразовые глаголы r-s");
        insertDict(db, "stand out", "[stænd aʊt]", "выделяться, быть заметным", "фразовые глаголы r-s");
        insertDict(db, "stand up", "[stænd ʌp]", "вставать, выпрямляться", "фразовые глаголы r-s");
        insertDict(db, "stick out", "[stɪk aʊt]", "торчать, высовываться", "фразовые глаголы r-s");
        insertDict(db, "switch off", "[swɪʧ ɔf]", "выключать", "фразовые глаголы r-s");
        insertDict(db, "switch on", "[swɪʧ ɔn]", "включать", "фразовые глаголы r-s");
        insertDict(db, "take away", "[teɪk əˈweɪ]", "забрать, отнять, убрать", "фразовые глаголы t-w");
        insertDict(db, "take back", "[teɪk bæk]", "вернуть", "фразовые глаголы t-w");
        insertDict(db, "take in", "[teɪk ɪn]", "принимать", "фразовые глаголы t-w");
        insertDict(db, "take on", "[teɪk ɔn]", "брать(ся)", "фразовые глаголы t-w");
        insertDict(db, "take out", "[teɪk aʊt]", "вынимать, вытаскивать", "фразовые глаголы t-w");
        insertDict(db, "take over", "[teɪk ˈəʊvə]", "захватить, овладеть", "фразовые глаголы t-w");
        insertDict(db, "take up", "[teɪk ʌp]", "заняться, взяться", "фразовые глаголы t-w");
        insertDict(db, "throw up", "[θrəʊ ʌp]", "подбрасывать, тошнить", "фразовые глаголы t-w");
        insertDict(db, "turn around", "[tɜːn əˈraʊnd]", "оборачиваться", "фразовые глаголы t-w");
        insertDict(db, "turn away", "[tɜːn əˈweɪ]", "отворачиваться", "фразовые глаголы t-w");
        insertDict(db, "turn back", "[tɜːn bæk]", "повернуть назад, возвратиться", "фразовые глаголы t-w");
        insertDict(db, "turn down", "[tɜːn daʊn]", "убавлять, уменьшать, отказаться", "фразовые глаголы t-w");
        insertDict(db, "turn into", "[tɜːn ˈɪntu]", "превратиться в кого-либо", "фразовые глаголы t-w");
        insertDict(db, "turn off", "[tɜːn ɔf]", "выключать", "фразовые глаголы t-w");
        insertDict(db, "turn on", "[tɜːn ɔn]", "включать", "фразовые глаголы t-w");
        insertDict(db, "turn out", "[tɜːn aʊt]", "оказаться", "фразовые глаголы t-w");
        insertDict(db, "turn over", "[tɜːn ˈəʊvə]", "переворачивать(ся)", "фразовые глаголы t-w");
        insertDict(db, "turn up", "[tɜːn ʌp]", "появляться", "фразовые глаголы t-w");
        insertDict(db, "wake up", "[weɪk ʌp]", "просыпаться, будить", "фразовые глаголы t-w");
        insertDict(db, "walk around", "[wɔːk əˈraʊnd]", "ходить, разгуливать", "фразовые глаголы t-w");
        insertDict(db, "walk away", "[wɔːk əˈweɪ]", "уходить прочь", "фразовые глаголы t-w");
        insertDict(db, "walk back", "[wɔːk bæk]", "возвращаться", "фразовые глаголы t-w");
        insertDict(db, "walk in", "[wɔːk ɪn]", "входить", "фразовые глаголы t-w");
        insertDict(db, "walk off", "[wɔːk ɔf]", "уходить", "фразовые глаголы t-w");
        insertDict(db, "walk out", "[wɔːk aʊt]", "выходить", "фразовые глаголы t-w");
        insertDict(db, "walk over", "[wɔːk ˈəʊvə]", "подойти, подходить", "фразовые глаголы t-w");
        insertDict(db, "watch out", "[wɔʧ aʊt]", "берегись!", "фразовые глаголы t-w");
        insertDict(db, "wind up", "[wɪnd ʌp]", "оказаться, завершиться чем-либо", "фразовые глаголы t-w");
        insertDict(db, "work out", "[wɜːk aʊt]", "разрабатывать, получиться", "фразовые глаголы t-w");
        insertDict(db, "work up", "[wɜːk ʌp]", "обрабатывать, создать", "фразовые глаголы t-w");
        insertDict(db, "write down", "[raɪt daʊn]", "записывать", "фразовые глаголы t-w");
        insertDict(db, "A drop in the bucket", "[ə drɔp ɪn ðiː ˈbʌkɪt]", "капля в море", "фразы1");
        insertDict(db, "As sure as eggs is eggs", "[æz ʃʊə æz egz ɪz egz]", "как дважды два", "фразы1");
        insertDict(db, "Don’t mention it", "[dɔnt ˈmenʃn ɪt]", "не стоит благодарности", "фразы1");
        insertDict(db, "I agree with you", "[aɪ əˈgriː wɪð juː]", "я согласен с вами", "фразы1");
        insertDict(db, "I think I’ll pass", "[aɪ θɪŋk aɪl pɑːs]", "лучше без меня", "фразы1");
        insertDict(db, "I’m afraid so", "[aɪm əˈfreɪd səʊ]", "боюсь, что так", "фразы1");
        insertDict(db, "I’m so sorry", "[aɪm səʊ ˈsɔrɪ]", "мне очень жаль", "фразы1");
        insertDict(db, "In Fact", "[ɪn fækt]", "фактически", "фразы1");
        insertDict(db, "In short", "[ɪn ʃɔːt]", "вкратце", "фразы1");
        insertDict(db, "It doesn’t matter", "[ɪt dʌznt ˈmætə]", "это не важно", "фразы1");
        insertDict(db, "It’s very kind of you", "[ɪts æ ˈverɪ kaɪnd ɔv juː]", "это очень мило с вашей", "фразы1");
        insertDict(db, "May I help you?", "[meɪ aɪ help juː]", "могу ли я вам помочь?", "фразы1");
        insertDict(db, "Most likely", "[məʊst ˈlaɪklɪ]", "наиболее вероятно", "фразы1");
        insertDict(db, "Next time lucky", "[nekst taɪm ˈlʌkɪ]", "в следующий раз повезет", "фразы1");
        insertDict(db, "No way", "[nəʊ weɪ]", "ни за что", "фразы1");
        insertDict(db, "Nothing much", "[ˈnʌθɪŋ mʌʧ]", "ничего особенного", "фразы1");
        insertDict(db, "On the one hand", "[ɔn ðiː wʌn hænd]", "с одной стороны", "фразы1");
        insertDict(db, "Quite so", "[kwaɪt səʊ]", "вполне верно", "фразы1");
        insertDict(db, "Thank you in advance", "[θæŋk juː ɪn ədˈvɑːns]", "спасибо за ранее", "фразы1");
        insertDict(db, "What is the matter?", "[wɔt ɪz ðiː ˈmætə]", "в чем дело?", "фразы1");
        insertDict(db, "And so on and so forth", "[ænd səʊ ɔn ænd səʊ fɔːθ]", "и т.д. и т.п.", "фразы2");
        insertDict(db, "By the way", "[baɪ ðiː weɪ]", "кстати", "фразы2");
        insertDict(db, "Exactly so", "[ɪgˈzæktlɪ səʊ]", "именно так", "фразы2");
        insertDict(db, "I beg your pardon", "[aɪ beg jɔː pɑːdn]", "прошу прощения", "фразы2");
        insertDict(db, "I was not attending", "[aɪ wɒz nɔt əˈtendɪŋ]", "я прослушал", "фразы2");
        insertDict(db, "I’m not sure", "[aɪm not ʃʊə]", "не уверен", "фразы2");
        insertDict(db, "I'm looking forward to it", "[aɪm ˈlʊkɪŋ ˈfɔːwəd tuː ɪt]", "жду этого с нетерпением", "фразы2");
        insertDict(db, "In other words", "[ɪn ˈʌðər wɜːdz]", "другими словами", "фразы2");
        insertDict(db, "It does you credit", "[ɪt dʌz juː ˈkredɪt]", "это делаем вам честь", "фразы2");
        insertDict(db, "It’s A Pity", "[ɪts æ ˈpɪti]", "жаль", "фразы2");
        insertDict(db, "Let us hope for the best", "[let ʌshəʊp fɔː ðiː best]", "давайте надеяться на лучшее", "фразы2");
        insertDict(db, "Mind your own business", "[maɪnd jɔː əʊn ˈbɪznɪs]", "занимайся своим делом", "фразы2");
        insertDict(db, "Neither here nor there", "[ˈnaɪðə hɪə nɔː ðɛə]", "ни то, ни сё", "фразы2");
        insertDict(db, "No doubt", "[nəʊ daʊt]", "несомненно", "фразы2");
        insertDict(db, "Not at all", "[nɔt æt ɔːl]", "не за что", "фразы2");
        insertDict(db, "Of course", "[ɔv kɔːs]", "конечно", "фразы2");
        insertDict(db, "On the other hand", "[ɔn ðiː ˈʌðə hænd]", "с другой стороны", "фразы2");
        insertDict(db, "Sorry I meant well", "[ˈsɔrɪ aɪ ment wel]", "извините, я хотел как лучше", "фразы2");
        insertDict(db, "Things happen", "[θɪŋ ˈhæpən]", "всякое бывает", "фразы2");
        insertDict(db, "Where were we?", "[wɛə wɜ: wiː]", "на чем мы остановились?", "фразы2");
        insertDict(db, "apple", "[æpl]", "яблоко", "фрукты");
        insertDict(db, "apricot", "[ˈeɪprɪkɔt]", "абрикос", "фрукты");
        insertDict(db, "coconut", "[ˈkəʊkənʌt]", "кокос", "фрукты");
        insertDict(db, "fruit", "[fruːt]", "фрукт", "фрукты");
        insertDict(db, "garnet", "[ˈgɑːnɪt]", "гранат", "фрукты");
        insertDict(db, "grape", "[greɪp]", "виноград", "фрукты");
        insertDict(db, "grapefruit", "[ˈgreɪpfruːt]", "грейпфрут", "фрукты");
        insertDict(db, "kiwi", "[ˈkiːwiː]", "киви", "фрукты");
        insertDict(db, "lemon", "[ˈlemən]", "лимон", "фрукты");
        insertDict(db, "mandarin", "[ˈmændərɪn]", "мандарин", "фрукты");
        insertDict(db, "mango", "[ˈmæŋgəʊ]", "манго", "фрукты");
        insertDict(db, "peach", "[piːʧ]", "персик", "фрукты");
        insertDict(db, "pear", "[pɛə]", "груша", "фрукты");
        insertDict(db, "persimmon", "[pɜːˈsɪmən]", "хурма", "фрукты");
        insertDict(db, "plum", "[plʌm]", "слива", "фрукты");
        insertDict(db, "orange", "[ˈɔrɪnʤ]", "апельсин, оранжевый", "фрукты, цвета");
        insertDict(db, "beige", "[beɪʒ]", "бежевый", "цвета");
        insertDict(db, "black", "[blæk]", "черный", "цвета");
        insertDict(db, "blue", "[bluː]", "синий, голубой", "цвета");
        insertDict(db, "brown", "[braʊn]", "коричневый", "цвета");
        insertDict(db, "color", "[ˈkʌlə]", "цвет", "цвета");
        insertDict(db, "emerald", "[ˈemərəld]", "изумрудный", "цвета");
        insertDict(db, "golden", "[ˈgəʊldən]", "золотой", "цвета");
        insertDict(db, "gray", "[greɪ]", "серый", "цвета");
        insertDict(db, "green", "[griːn]", "зеленый", "цвета");
        insertDict(db, "pink", "[pɪŋk]", "розовый", "цвета");
        insertDict(db, "purple", "[pɜːpl]", "фиолетовый", "цвета");
        insertDict(db, "red", "[red]", "красный", "цвета");
        insertDict(db, "white", "[waɪt]", "белый", "цвета");
        insertDict(db, "yellow", "[ˈjeləʊ]", "желтый", "цвета");
        insertDict(db, "aster", "[ˈæstə]", "астра", "цветы");
        insertDict(db, "begonia", "[bɪˈgəʊnɪə]", "бегония", "цветы");
        insertDict(db, "camellia", "[kəˈmiːlɪə]", "камелия", "цветы");
        insertDict(db, "carnation", "[kɑ:ˈneɪʃən]", "гвоздика", "цветы");
        insertDict(db, "chamomile", "[ˈkæməmɪl]", "ромашка", "цветы");
        insertDict(db, "chrysanthemum", "[krɪˈsænθɪməm]", "хризантема", "цветы");
        insertDict(db, "dahlia", "[ˈdeɪljə]", "георгин", "цветы");
        insertDict(db, "flower", "[ˈflaʊə]", "цветок", "цветы");
        insertDict(db, "geranium", "[ʤeˈreɪnɪəm]", "герань", "цветы");
        insertDict(db, "gerbera", "[ˈgɜːbəreɪ]", "гербера", "цветы");
        insertDict(db, "gladiolus", "[glædɪˈəʊləs]", "гладиолус", "цветы");
        insertDict(db, "hyacinth", "[ˈhaɪəsɪnθ]", "гиацинт", "цветы");
        insertDict(db, "hydrangea", "[haɪˈdreɪnʤə]", "гортензия", "цветы");
        insertDict(db, "iris", "[ˈaɪərɪs]", "ирис", "цветы");
        insertDict(db, "lily", "[ˈlɪlɪ]", "лилия", "цветы");
        insertDict(db, "lily of the valley", "[ˈlɪlɪ əv ðiː ˈvælɪ]", "ландыш", "цветы");
        insertDict(db, "narcissus", "[nɑːˈsɪsəs]", "нарцисс", "цветы");
        insertDict(db, "orchid", "[ˈɔːkɪd]", "орхидея", "цветы");
        insertDict(db, "peony", "[ˈpiːənɪ]", "пион", "цветы");
        insertDict(db, "phlox", "[flɒks]", "флокс", "цветы");
        insertDict(db, "rose", "[rəʊz]", "роза", "цветы");
        insertDict(db, "snowdrop", "[ˈsnəʊdrɒp]", "подснежник", "цветы");
        insertDict(db, "tulip", "[ˈtjuːlɪp]", "тюльпан", "цветы");
        insertDict(db, "violet", "[ˈvaɪəlɪt]", "фиалка", "цветы");
        insertDict(db, "mimosa", "[mɪˈməʊzə]", "мимоза", "цветы, кустарники");
        insertDict(db, "billion", "[ˈbɪljən]", "миллиард", "цифры");
        insertDict(db, "eight", "[eɪt]", "восемь", "цифры");
        insertDict(db, "eighteen", "[eɪˈtiːn]", "восемнадцать", "цифры");
        insertDict(db, "eighty", "[ˈeɪtɪ]", "восемьдесят", "цифры");
        insertDict(db, "eleven", "[ɪˈlevn]", "одиннадцать", "цифры");
        insertDict(db, "fifteen", "[ˈfɪfˈtiːn]", "пятнадцать", "цифры");
        insertDict(db, "fifty", "[ˈfɪftɪ]", "пятьдесят", "цифры");
        insertDict(db, "five", "[faɪv]", "пять", "цифры");
        insertDict(db, "four", "[fɔː]", "четыре", "цифры");
        insertDict(db, "fourteen", "[ˈfɔːˈtiːn]", "четырнадцать", "цифры");
        insertDict(db, "fourty", "[ˈfɔːtɪ]", "сорок", "цифры");
        insertDict(db, "hundred", "[ˈhʌndrəd]", "сто", "цифры");
        insertDict(db, "million", "[ˈmɪljən]", "миллион", "цифры");
        insertDict(db, "nine", "[naɪn]", "девять", "цифры");
        insertDict(db, "nineteen", "[ˈnaɪnˈtiːn]", "девятнадцать", "цифры");
        insertDict(db, "ninety", "[ˈnaɪntɪ]", "девяносто", "цифры");
        insertDict(db, "one", "[wʌn]", "один", "цифры");
        insertDict(db, "seven", "[sevn]", "семь", "цифры");
        insertDict(db, "seventeen", "[ˈsevnˈtiːn]", "семнадцать", "цифры");
        insertDict(db, "seventy", "[ˈsevntɪ]", "семьдесят", "цифры");
        insertDict(db, "six", "[sɪks]", "шесть", "цифры");
        insertDict(db, "sixteen", "[ˈsɪksˈtiːn]", "шестнадцать", "цифры");
        insertDict(db, "sixty", "[ˈsɪkstɪ]", "шестьдесят", "цифры");
        insertDict(db, "ten", "[ten]", "десять", "цифры");
        insertDict(db, "thirteen", "[ˈθɜːˈtiːn]", "тринадцать", "цифры");
        insertDict(db, "thirty", "[ˈθɜːtɪ]", "тридцать", "цифры");
        insertDict(db, "thousand", "[ˈθaʊzənd]", "тысяча", "цифры");
        insertDict(db, "three", "[θriː]", "три", "цифры");
        insertDict(db, "trillion", "[ˈtrɪljən]", "триллион", "цифры");
        insertDict(db, "twelve", "[twelv]", "двенадцать", "цифры");
        insertDict(db, "twenty", "[ˈtwentɪ]", "двадцать", "цифры");
        insertDict(db, "two", "[tuː]", "два", "цифры");
        insertDict(db, "zero", "[ˈzɪərəʊ]", "ноль", "цифры");
        insertDict(db, "amazement", "[əˈmeɪzmənt]", "изумление", "эмоции нейтральные");
        insertDict(db, "apathy", "[ˈæpəθɪ]", "апатия", "эмоции нейтральные");
        insertDict(db, "astonishment", "[əsˈtɔnɪʃmənt]", "удивление", "эмоции нейтральные");
        insertDict(db, "boredom", "[ˈbɔːdəm]", "скука", "эмоции нейтральные");
        insertDict(db, "contemplation", "[kɒntəmˈpleɪʃn]", "созерцание", "эмоции нейтральные");
        insertDict(db, "curiosity", "[kjuərɪˈɔsɪtɪ]", "любопытство", "эмоции нейтральные");
        insertDict(db, "humility", "[hju:ˈmɪlɪtɪ] ", "смирение", "эмоции нейтральные");
        insertDict(db, "indifference", "[ɪnˈdɪfrəns]", "безразличие, равнодушие", "эмоции нейтральные");
        insertDict(db, "interest", "[ˈɪntrɪst]", "интерес", "эмоции нейтральные");
        insertDict(db, "relaxedness", "[riːlækˈsɪdnəs]", "расслабленность", "эмоции нейтральные");
        insertDict(db, "anger", "[ˈæŋɡə]", "гнев", "эмоции отрицательные");
        insertDict(db, "annoyance", "[əˈnɔɪəns]", "раздражение", "эмоции отрицательные");
        insertDict(db, "anxiety", "[æŋ'zaɪətɪ]", "тревога", "эмоции отрицательные");
        insertDict(db, "confusion", "[kənˈfju:ʒən]", "растерянность", "эмоции отрицательные");
        insertDict(db, "contempt", "[kənˈtempt]", "презрение", "эмоции отрицательные");
        insertDict(db, "despair", "[dɪsˈpɛə]", "отчаяние", "эмоции отрицательные");
        insertDict(db, "disappointment", "[dɪsəˈpɔɪntmənt]", "разочарование", "эмоции отрицательные");
        insertDict(db, "disgust", "[dɪsˈɡʌst]", "отвращение", "эмоции отрицательные");
        insertDict(db, "displeasure", "[dɪsˈpleʒə]", "недовольство", "эмоции отрицательные");
        insertDict(db, "fear", "[fɪə]", "страх", "эмоции отрицательные");
        insertDict(db, "fright", "[fraɪt]", "испуг", "эмоции отрицательные");
        insertDict(db, "grief", "[ɡri:f]", "горе", "эмоции отрицательные");
        insertDict(db, "hatred", "[ˈheɪtrɪd]", "ненависть", "эмоции отрицательные");
        insertDict(db, "horror", "[ˈhɔrə]", "ужас", "эмоции отрицательные");
        insertDict(db, "indignation", "[ɪndɪɡˈneɪʃən]", "возмущение, негодование", "эмоции отрицательные");
        insertDict(db, "jealousy", "[ˈʤeləsɪ]", "ревность", "эмоции отрицательные");
        insertDict(db, "loneliness", "[ˈləʊnlɪnɪs]", "одиночество", "эмоции отрицательные");
        insertDict(db, "repentance", "[rɪˈpentəns]", "раскаяние", "эмоции отрицательные");
        insertDict(db, "sadness", "[ˈsædnɪs]", "печаль, грусть", "эмоции отрицательные");
        insertDict(db, "shame", "[ʃeɪm]", "стыд", "эмоции отрицательные");
        insertDict(db, "spite", "[spaɪt]", "злость", "эмоции отрицательные");
        insertDict(db, "suffering", "[ˈsʌfərɪŋ] ", "страдание", "эмоции отрицательные");
        insertDict(db, "admiration", "[ædməˈreɪʃən]", "восхищение", "эмоции положительные");
        insertDict(db, "anticipation", "[ænˌtɪsɪˈpeɪʃən]", "предвкушение", "эмоции положительные");
        insertDict(db, "belief", "[bɪˈli:f]", "вера", "эмоции положительные");
        insertDict(db, "blessedness", "[ˈblesɪdnɪs]", "блаженство", "эмоции положительные");
        insertDict(db, "confidence", "[ˈkɔnfɪdəns]", "уверенность", "эмоции положительные");
        insertDict(db, "delight", "[dɪˈlaɪt]", "восторг", "эмоции положительные");
        insertDict(db, "enthusiasm", "[ɪnˈθju:zɪæzm]", "энтузиазм", "эмоции положительные");
        insertDict(db, "gratitude", "[ˈɡrætɪtju:d]", "благодарность", "эмоции положительные");
        insertDict(db, "hope", "[həup]", "надежда", "эмоции положительные");
        insertDict(db, "joy", "[dʒɔɪ]", "радость", "эмоции положительные");
        insertDict(db, "love", "[lʌv]", "любовь, любить", "эмоции положительные");
        insertDict(db, "optimism", "[ˈɔptɪmɪzm]", "оптимизм", "эмоции положительные");
        insertDict(db, "pleasure", "[ˈpleʒə]", "удовольствие", "эмоции положительные");
        insertDict(db, "pride", "[praɪd]", "гордость", "эмоции положительные");
        insertDict(db, "respect", "[rɪsˈpekt]", "уважение", "эмоции положительные");
        insertDict(db, "sympathy", "[ˈsɪmpəθɪ]", "симпатия", "эмоции положительные");
        insertDict(db, "tender emotion", "[ˈtendə ɪˈməʊʃn]", "умиление", "эмоции положительные");
        insertDict(db, "tenderness", "[ˈtendənɪs]", "нежность", "эмоции положительные");
        insertDict(db, "triumph", "[ˈtraɪəmf]", "ликование ", "эмоции положительные");
        insertDict(db, "trust", "[trʌst]", "доверие", "эмоции положительные");
        insertDict(db, "calm", "[kɑːm]", "спокойный, тихий, спокойствие", "эмоции положительные, прилагательные характера3");
        insertDict(db, "berry", "[ˈberɪ]", "ягода", "ягоды");
        insertDict(db, "cranberry", "[ˈkrænbərɪ]", "клюква", "ягоды");
        insertDict(db, "melon", "[ˈmelən]", "дыня", "ягоды");
        insertDict(db, "strawberry", "[ˈstrɔːbərɪ]", "земляника", "ягоды");
        insertDict(db, "watermelon", "[ˈwɔːtəmelən]", "арбуз", "ягоды");
        insertDict(db, "bird cherry", "[bɜːd ˈʧerɪ]", "черемуха", "ягоды, деревья лиственные");
        insertDict(db, "rowan", "[ˈraʊən]", "рябина", "ягоды, деревья лиственные");
        insertDict(db, "blackberry", "[ˈblækbərɪ]", "ежевика", "ягоды, кустарники");
        insertDict(db, "blackcurrant", "[blækˈkʌrənt]", "черная смородина", "ягоды, кустарники");
        insertDict(db, "blueberry", "[ˈbluːberɪ]", "черника", "ягоды, кустарники");
        insertDict(db, "cherry", "[ˈʧerɪ]", "вишня", "ягоды, кустарники");
        insertDict(db, "chokeberry", "[ˈʧəʊkbərɪ]", "черноплодная рябина", "ягоды, кустарники");
        insertDict(db, "cowberry", "[ˈkaʊbərɪ]", "брусника", "ягоды, кустарники");
        insertDict(db, "gooseberry", "[ˈgʊzbərɪ]", "крыжовник", "ягоды, кустарники");
        insertDict(db, "raspberry", "[ˈrɑːzbərɪ]", "малина", "ягоды, кустарники");
        insertDict(db, "redcurrant", "[ˈredkʌrənt]", "красная смородина", "ягоды, кустарники");
        insertDict(db, "rosehip", "[ˈrəʊzɪp]", "шиповник", "ягоды, кустарники");
    }

    // заполняем основную таблицу-словарь при переходе из версии 26
    private void updateDictFrom26(SQLiteDatabase db) {
        ContentValues cv = new ContentValues();
        cv.put(DB.C_ES_VARIABLE, "amount_donate");
        db.update(DB.T_EXITSTATE, cv, DB.C_ES_VARIABLE + "='0'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_TRANSCRIPTION, "[bloʊ, blu:, bloʊn]");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='blow, blew, blown'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_TRANSCRIPTION, "[stʌməˈtɒləʤɪst]");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='stomatologist'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "врываться, вмешаться (в разговор)");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='break in'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_ENGWORD, "Sorry I meant well");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='Sorry, I meant well'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "внук, внучка");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='grandchild'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "правнук, правнучка");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='great-grandchild'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "оказаться, завершиться чем-либо");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='wind up'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='alder'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='apple tree'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='ash'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='aspen'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='baobab'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='bay'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='beech'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='birch'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='chestnut'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='elm'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='eucalyptus'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='linden'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='maple'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='oak'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='palm'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='pear tree'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='poplar'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='walnut'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='cedar'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='fir'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='juniper'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='larch'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='pine'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='sequoia'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='spruce'", null);
        cv.put(DB.C_EW_CATEGORY, "деревья хвойные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='yew tree'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='acacia'", null);
        cv.put(DB.C_EW_CATEGORY, "кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='hazel'", null);
        cv.put(DB.C_EW_CATEGORY, "кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='plum tree'", null);
        cv.put(DB.C_EW_CATEGORY, "кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='willow'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "кустарники, цветы");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='lilac'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "транспорт, путешествие1, инструменты столярные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='plane'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='blackcurrant'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='cherry'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='chokeberry'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='gooseberry'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='raspberry'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='redcurrant'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, кустарники");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='rosehip'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "ягоды, деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='bird cherry'", null);
        cv.put(DB.C_EW_CATEGORY, "ягоды, деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='rowan'", null);
        insertDict(db, "birch mushroom", "[bɜːʧ ˈmʌʃrum]", "подберезовик", "грибы");
        insertDict(db, "cep", "[sep]", "белый гриб", "грибы");
        insertDict(db, "champignon", "[ʃæm'piːnjən]", "шампиньон", "грибы");
        insertDict(db, "chanterelle", "[ʃæntəˈrel]", "лисичка", "грибы");
        insertDict(db, "coral milky cap", "[ˈkɒrəl ˈmɪlkɪ ˈkæp]", "волнушка", "грибы");
        insertDict(db, "death cap", "[deθ ˈkæp]", "бледная поганка", "грибы");
        insertDict(db, "fly agaric", "[flaɪ ˈægərɪk]", "мухомор", "грибы");
        insertDict(db, "honey agaric", "[ˈhʌnɪ ˈægərɪk]", "опенок", "грибы");
        insertDict(db, "milk mushroom", "[mɪlk ˈmʌʃrum]", "груздь", "грибы");
        insertDict(db, "mossiness mushroom", "[ˈmɔsɪnɪs ˈmʌʃrum]", "моховик", "грибы");
        insertDict(db, "mushroom", "[ˈmʌʃrum]", "гриб", "грибы");
        insertDict(db, "Orange-cap boletus", "[ˈɔrɪndʒ ˈkæp bəʊˈliːtəs]", "подосиновик", "грибы");
        insertDict(db, "oyster mushroom", "[ˈɔɪstə ˈmʌʃrum]", "вешенка", "грибы");
        insertDict(db, "puff ball", "[pʌf bɔ:l]", "дождевик", "грибы");
        insertDict(db, "russula", "['rʌsjələ]", "сыроежка", "грибы");
        insertDict(db, "saffron milk cap", "[ˈsæfrən mɪlk kæp]", "рыжик", "грибы");
        insertDict(db, "truffle", "['trʌfl]", "трюфель", "грибы");
        insertDict(db, "yellow boletus", "[ˈjeləʊ bəʊˈliːtəs]", "масленок", "грибы");
        insertDict(db, "hornbeam", "[ˈhɔːnbiːm]", "граб", "деревья лиственные");
        insertDict(db, "araucaria", "[ærɔːˈke(ə)rɪə]", "араукария", "деревья хвойные");
        insertDict(db, "athrotaxis", "[æθrəˈtæksɪs]", "атротаксис", "деревья хвойные");
        insertDict(db, "biota", "[baɪˈəʊtə]", "биота", "деревья хвойные");
        insertDict(db, "cypress", "[ˈsaɪprɪs]", "кипарис", "деревья хвойные");
        insertDict(db, "accordion", "[əˈkɔːdɪən]", "аккордеон, гармонь", "инструменты музыкальные");
        insertDict(db, "ambourine", "[tæmbəˈriːn]", "бубен", "инструменты музыкальные");
        insertDict(db, "balalaika", "[bæləˈlaɪkə]", "балалайка", "инструменты музыкальные");
        insertDict(db, "bass guitar", "[beɪs gɪˈtɑː]", "бас-гитара", "инструменты музыкальные");
        insertDict(db, "bassoon", "[bəˈsuːn]", "фагот", "инструменты музыкальные");
        insertDict(db, "cello", "[ˈʧeləʊ]", "виолончель", "инструменты музыкальные");
        insertDict(db, "clarinet", "[klærɪˈnet]", "кларнет", "инструменты музыкальные");
        insertDict(db, "drum", "[drʌm]", "барабан", "инструменты музыкальные");
        insertDict(db, "flute", "[fluːt]", "флейта", "инструменты музыкальные");
        insertDict(db, "guitar", "[gɪˈtɑː]", "гитара", "инструменты музыкальные");
        insertDict(db, "harp", "[hɑːp]", "арфа", "инструменты музыкальные");
        insertDict(db, "kettledrum", "[ˈketldrʌm]", "литавра", "инструменты музыкальные");
        insertDict(db, "oboe", "[ˈəʊbəʊ]", "гобой", "инструменты музыкальные");
        insertDict(db, "piano", "[pɪˈænəʊ]", "пианино", "инструменты музыкальные");
        insertDict(db, "psaltery", "[ˈsɔ:ltərɪ]", "гусли", "инструменты музыкальные");
        insertDict(db, "saxophone", "[ˈsæksəfəʊn]", "саксофон", "инструменты музыкальные");
        insertDict(db, "synthesizer", "[ˈsɪnθəsaɪzə]", "синтезатор", "инструменты музыкальные");
        insertDict(db, "trombone", "[trɒmˈbəʊn]", "тромбон", "инструменты музыкальные");
        insertDict(db, "trumpet", "[ˈtrʌmpɪt]", "труба", "инструменты музыкальные");
        insertDict(db, "violin", "[vaɪəˈlɪn]", "скрипка", "инструменты музыкальные");
        insertDict(db, "xylophone", "[ˈzaɪləfəʊn]", "ксилофон", "инструменты музыкальные");
        insertDict(db, "awl", "[ɔːl]", "шило", "инструменты столярные");
        insertDict(db, "axe", "[æks]", "топор", "инструменты столярные");
        insertDict(db, "brace", "[breɪs]", "коловорот", "инструменты столярные");
        insertDict(db, "chisel", "[ʧɪzl]", "долото", "инструменты столярные");
        insertDict(db, "clamp", "[klæmp]", "струбцина", "инструменты столярные");
        insertDict(db, "claw hammer", "[klɔː ˈhæmə]", "гвоздодер", "инструменты столярные");
        insertDict(db, "drill", "[drɪl]", "дрель", "инструменты столярные");
        insertDict(db, "gouge", "[gaʊʤ]", "стамеска", "инструменты столярные");
        insertDict(db, "hacksaw", "[ˈhæksɔː]", "ножовка", "инструменты столярные");
        insertDict(db, "hammer", "[ˈhæmə]", "молоток", "инструменты столярные");
        insertDict(db, "jointer", "[ˈʤɔɪntə]", "фуганок", "инструменты столярные");
        insertDict(db, "mallet", "[ˈmælɪt]", "киянка", "инструменты столярные");
        insertDict(db, "pliers", "[ˈplaɪəz]", "плосскогубцы", "инструменты столярные");
        insertDict(db, "rasp", "[rɑːsp]", "рашпиль", "инструменты столярные");
        insertDict(db, "screwdriver", "[ˈskruːdraɪvə]", "отвертка", "инструменты столярные");
        insertDict(db, "tape measure", "[teɪp ˈmeʒə]", "рулетка", "инструменты столярные");
        insertDict(db, "vise", "[vaɪs]", "тиски", "инструменты столярные");
        insertDict(db, "file", "[faɪl]", "напильник, файл", "инструменты столярные");
        insertDict(db, "thuja", "[ˈθjuːjə]", "туя", "кустарники");
        insertDict(db, "elderberry", "[ˈeldəbərɪ]", "бузина", "кустарники, ягоды");
        insertDict(db, "hawthorn", "[ˈhɔːθɔːn]", "боярышник", "кустарники, ягоды");
        insertDict(db, "sea-buckthorn", "[siːˈbʌkθɔːn]", "облепиха", "кустарники, ягоды");
        insertDict(db, "viburnum", "[vaɪˈbɜːnəm]", "калина", "кустарники, ягоды");
        insertDict(db, "aster", "[ˈæstə]", "астра", "цветы");
        insertDict(db, "begonia", "[bɪˈgəʊnɪə]", "бегония", "цветы");
        insertDict(db, "camellia", "[kəˈmiːlɪə]", "камелия", "цветы");
        insertDict(db, "carnation", "[kɑ:ˈneɪʃən]", "гвоздика", "цветы");
        insertDict(db, "chamomile", "[ˈkæməmɪl]", "ромашка", "цветы");
        insertDict(db, "chrysanthemum", "[krɪˈsænθɪməm]", "хризантема", "цветы");
        insertDict(db, "dahlia", "[ˈdeɪljə]", "георгин", "цветы");
        insertDict(db, "flower", "[ˈflaʊə]", "цветок", "цветы");
        insertDict(db, "geranium", "[ʤeˈreɪnɪəm]", "герань", "цветы");
        insertDict(db, "gerbera", "[ˈgɜːbəreɪ]", "гербера", "цветы");
        insertDict(db, "gladiolus", "[glædɪˈəʊləs]", "гладиолус", "цветы");
        insertDict(db, "hyacinth", "[ˈhaɪəsɪnθ]", "гиацинт", "цветы");
        insertDict(db, "hydrangea", "[haɪˈdreɪnʤə]", "гортензия", "цветы");
        insertDict(db, "iris", "[ˈaɪərɪs]", "ирис", "цветы");
        insertDict(db, "lily", "[ˈlɪlɪ]", "лилия", "цветы");
        insertDict(db, "lily of the valley", "[ˈlɪlɪ əv ðiː ˈvælɪ]", "ландыш", "цветы");
        insertDict(db, "narcissus", "[nɑːˈsɪsəs]", "нарцисс", "цветы");
        insertDict(db, "orchid", "[ˈɔːkɪd]", "орхидея", "цветы");
        insertDict(db, "peony", "[ˈpiːənɪ]", "пион", "цветы");
        insertDict(db, "phlox", "[flɒks]", "флокс", "цветы");
        insertDict(db, "rose", "[rəʊz]", "роза", "цветы");
        insertDict(db, "snowdrop", "[ˈsnəʊdrɒp]", "подснежник", "цветы");
        insertDict(db, "tulip", "[ˈtjuːlɪp]", "тюльпан", "цветы");
        insertDict(db, "violet", "[ˈvaɪəlɪt]", "фиалка", "цветы");
        insertDict(db, "mimosa", "[mɪˈməʊzə]", "мимоза", "цветы, кустарники");
    }

    // заполняем основную таблицу-словарь при переходе из версии 27
    private void updateDictFrom27(SQLiteDatabase db) {
        ContentValues cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "ладонь, пальма");
        cv.put(DB.C_EW_CATEGORY, "тело человека, деревья лиственные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='palm'", null);
    }

    // заполняем основную таблицу-словарь при переходе из версии 28
    private void updateDictFrom28(SQLiteDatabase db) {
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='hear' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='see' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='show' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='sing' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='sleep' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='swim' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='write' AND " + DB.C_EW_CATEGORY + "='прочее1'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='spoil' AND " + DB.C_EW_CATEGORY + "='прочее13'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='feel' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='know' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='say' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='tell' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='withdraw' AND " + DB.C_EW_CATEGORY + "='прочее22'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='feed' AND " + DB.C_EW_CATEGORY + "='прочее23'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='overcome' AND " + DB.C_EW_CATEGORY + "='прочее23'", null);
        db.delete(DB.T_ENGWORDS, DB.C_EW_ENGWORD + "='withstand' AND " + DB.C_EW_CATEGORY + "='прочее23'", null);
        ContentValues cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "идти, ходить");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='go, went, gone'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_TRANSCRIPTION, "[rʌn ˈɪntuː]");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='run into'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "считать, вычислять");
        cv.put(DB.C_EW_CATEGORY, "математика, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='calculate'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_RUSTRANSLATE, "поговорить (с кем-л. о чем-л.)");
        cv.put(DB.C_EW_CATEGORY, "глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='talk'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы a-c, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='choose, chose, chosen'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы d-f, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='forget, forgot, forgotten'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы g-k, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='know, knew, known'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='mean, meant, meant'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='mistake, mistook, mistaken'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='prove, proved, proven'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='read, read, read'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы s1, глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='say, said, said'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы s2, глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='speak, spoke, spoken'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы t-w, глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='tell, told, told'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='think, thought, thought'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "неправильные глаголы r-l, глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='understand, understood, understood'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='acknowledge'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='assume'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='confuse'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='determine'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='doubt'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "глаголы умст. деятельности");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='intend'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "учеба, глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='answer'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "учеба, глаголы речи");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='ask'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "инструменты столярные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='file' AND " + DB.C_EW_CATEGORY + "='инструменты столярные, прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='want' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='behave' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='cry' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='friend' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='go' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='hug' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='look' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='next to' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='really' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='scared' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "прочее1");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='together' AND " + DB.C_EW_CATEGORY + "='прочее2'", null);
        insertDict(db, "comment", "[ˈkɔment]", "комментировать", "глаголы речи");
        insertDict(db, "describe", "[dɪsˈkraɪb]", "описывать", "глаголы речи");
        insertDict(db, "discuss", "[dɪsˈkʌs]", "обсуждать", "глаголы речи");
        insertDict(db, "emphasize", "[ˈemfəsaɪz]", "подчеркивать, акцентировать", "глаголы речи");
        insertDict(db, "explain", "[ɪksˈpleɪn]", "объяснять", "глаголы речи");
        insertDict(db, "mention", "[ˈmenʃən]", "упоминать", "глаголы речи");
        insertDict(db, "interpret", "[ɪnˈtɜːprɪt]", "толковать, интепретировать", "глаголы речи");
        insertDict(db, "joke", "[ʤəʊk]", "шутить, шутка", "глаголы речи");
        insertDict(db, "narrate", "[nəˈreɪt]", "повествовать, комментировать", "глаголы речи");
        insertDict(db, "refer", "[rɪˈfɜː]", "ссылаться на что-л.", "глаголы речи");
        insertDict(db, "reply", "[rɪˈplaɪ]", "отвечать кому-л.", "глаголы речи");
        insertDict(db, "scream", "[skriːm]", "кричать", "глаголы речи");
        insertDict(db, "translate", "[trænsˈleɪt]", "переводить", "глаголы речи");
        insertDict(db, "whisper", "[ˈwɪspə]", "шептать", "глаголы речи");
        insertDict(db, "inform", "[ɪnˈfɔːm]", "информировать", "глаголы речи");
        insertDict(db, "advise", "[ədˈvaɪz]", "советовать", "глаголы умст. деятельности");
        insertDict(db, "agree", "[əˈgriː]", "соглашаться", "глаголы умст. деятельности");
        insertDict(db, "analyse", "[ˈænəlaɪz]", "анализировать", "глаголы умст. деятельности");
        insertDict(db, "believe", "[bɪˈliːv]", "верить, доверять", "глаголы умст. деятельности");
        insertDict(db, "compare", "[kəmˈpeə]", "сравнивать", "глаголы умст. деятельности");
        insertDict(db, "conclude", "[kənˈkluːd]", "делать вывод", "глаголы умст. деятельности");
        insertDict(db, "decide", "[dɪˈsaɪd]", "решать, делать выбор", "глаголы умст. деятельности");
        insertDict(db, "imagine", "[ɪˈmæʤɪn]", "воображать", "глаголы умст. деятельности");
        insertDict(db, "invent", "[ɪnˈvent]", "изобретать, придумывать", "глаголы умст. деятельности");
        insertDict(db, "lie", "[laɪ]", "лгать", "глаголы умст. деятельности");
        insertDict(db, "link", "[lɪŋk]", "связывать, ссылка", "глаголы умст. деятельности");
        insertDict(db, "predict", "[prɪˈdɪkt]", "предсказывать", "глаголы умст. деятельности");
        insertDict(db, "remember", "[rɪˈmembə]", "помнить", "глаголы умст. деятельности");
        insertDict(db, "remind", "[ˈrɪmaɪnd]", "напомнить", "глаголы умст. деятельности");
        insertDict(db, "select", "[sɪˈlekt]", "выбирать, отбирать", "глаголы умст. деятельности");
        insertDict(db, "suppose", "[səˈpəuz]", "полагать, предполагать", "глаголы умст. деятельности");
        insertDict(db, "wonder", "[ˈwʌndə]", "удивляться, чудо", "глаголы умст. деятельности");
    }

    // заполняем основную таблицу-словарь при переходе из версии 30
    private void updateDictFrom30(SQLiteDatabase db) {
        ContentValues cv = new ContentValues();
        cv.put(DB.C_EW_CATEGORY, "инструменты столярные");
        db.update(DB.T_ENGWORDS, cv, DB.C_EW_ENGWORD + "='file' AND " + DB.C_EW_CATEGORY
                + "='инструменты столярные, прочее2'", null);
    }

    // заполняем основную таблицу-словарь при переходе из версии 31
    private void updateDictFrom31(SQLiteDatabase db) {
        db.execSQL("ALTER TABLE " + DB.T_LESSON + " ADD COLUMN " + DB.C_L_LESSON_ID + " integer");
        db.beginTransaction();
        try {
            ContentValues cv = new ContentValues();
            cv.put(DB.C_L_LESSON_ID, System.currentTimeMillis() / 1000);
            db.update(DB.T_LESSON, cv, null, null);
            insertExitState(db, DB.LEARNING_LESSONS_HISTORY, "1");
            db.setTransactionSuccessful();
        } finally {
            db.endTransaction();
        }

    }


    // вставка отдельно записи в таблице EW_ENGWORD
    private void insertDict(SQLiteDatabase db, String engWord,
                            String transcription, String rusTranslate, String category) {
        ContentValues cv = new ContentValues();
        cv.put(DB.C_EW_ENGWORD, engWord);
        cv.put(DB.C_EW_TRANSCRIPTION, transcription);
        cv.put(DB.C_EW_RUSTRANSLATE, rusTranslate);
        cv.put(DB.C_EW_CATEGORY, category);
        db.insert(DB.T_ENGWORDS, null, cv);
    }

    // вставка отдельной записи в таблице exitstate
    private void insertExitState(SQLiteDatabase db, String variable, String value) {
        ContentValues cv = new ContentValues();
        cv.put(DB.C_ES_VARIABLE, variable);
        cv.put(DB.C_ES_VALUE, value);
        db.insert(DB.T_EXITSTATE, null, cv);
    }
}
